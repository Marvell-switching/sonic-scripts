From 2a1cb1e5af100e9470aa03ab654a1a81f78b16a8 Mon Sep 17 00:00:00 2001
From: Yan Markman <ymarkman@marvell.com>
Date: Thu, 17 Jul 2025 10:37:23 +0300
Subject: [PATCH 1/1] [utilities] restart mgmt over-usb interface if not
 RUNNING

PROBLEM:
Sometimes after "config reload" command the management
interface (eth0) connected over ETH-USB device is
  UP/RUNNING on a remote peer side, but
  stays UP/not-running on the local side.
Well-known negotiation problem of ETH-over-USB devices (ASIX).

SOLUTION:
If the management interface is a USB device and is not RUNNING
(/sys/class/net/${if}/operstate is not "up") at the end of the
"config reload" command
bring it down and up with delay to trigger renegotiation.

Signed-off-by: Yan Markman <ymarkman@marvell.com>
---
 config/main.py | 41 +++++++++++++++++++++++++++++++++++++++++
 1 file changed, 41 insertions(+)

diff --git a/config/main.py b/config/main.py
index 45224de7..24809dc7 100644
--- a/config/main.py
+++ b/config/main.py
@@ -1018,6 +1018,45 @@ def wait_service_restart_finish(service, last_timestamp, timeout=30):
 
     log.log_warning("Service: {} does not restart in {} seconds, stop waiting".format(service, timeout))
 
+def get_mgmt_interface():
+    """
+    Parse /etc/sonic/config_db.json to find the management interface name (e.g., eth0).
+    """
+    try:
+        with open('/etc/sonic/config_db.json') as f:
+            config = json.load(f)
+        mgmt_entries = config.get("MGMT_INTERFACE", {})
+        if not mgmt_entries:
+            return None
+        # Example key: "eth0|10.3.141.10/24"
+        return list(mgmt_entries.keys())[0].split('|')[0]
+    except Exception as e:
+        # Valid - no mgmt interface in config_db.json
+        return None
+
+def reset_mgmt_interface_if_usb_not_running():
+    """
+    If the management interface is a USB device and not RUNNING,
+    bring it down and up with delay to trigger renegotiation.
+    """
+    iface = get_mgmt_interface()
+    if not iface:
+        return
+    if 'usb' not in os.path.realpath(f"/sys/class/net/{iface}/device"):
+        return
+    try:
+        with open(f"/sys/class/net/{iface}/operstate") as f:
+            operstate = f.read().strip()
+        if operstate == "up":
+            return  # Already RUNNING
+    except Exception:
+        pass  # Continue to attempt reset
+
+    click.echo("Reset USB-based mgmt interface for re-negotiation")
+    subprocess.run(["ip", "link", "set", iface, "down"], check=True)
+    time.sleep(1.0)
+    subprocess.run(["ip", "link", "set", iface, "up"], check=True)
+    # Continue anyway
 
 def _restart_services():
     last_interface_config_timestamp = get_service_finish_timestamp('interfaces-config')
@@ -1043,6 +1082,8 @@ def _restart_services():
     click.echo("Reloading Monit configuration ...")
     clicommon.run_command(['sudo', 'monit', 'reload'])
 
+    reset_mgmt_interface_if_usb_not_running()
+
 def _per_namespace_swss_ready(service_name):
     out, _ = clicommon.run_command(['systemctl', 'show', str(service_name), '--property', 'ActiveState', '--value'], return_cmd=True)
     if out.strip() != "active":
-- 
2.25.1

