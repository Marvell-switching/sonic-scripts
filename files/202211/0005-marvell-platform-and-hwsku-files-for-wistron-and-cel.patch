From c55aa52900b741e5ecc60f4492801c827a5c8a00 Mon Sep 17 00:00:00 2001
From: builder <ksridharan@marvell.com>
Date: Thu, 30 Nov 2023 21:03:13 -0800
Subject: [PATCH 5/5] marvell: platform and hwsku files for wistron and
 celestica

---
 .../Midstone-200i/buffers.json.j2             |  158 +-
 .../config_64x100G_midstone200i.yaml          |  264 +--
 .../Midstone-200i/innovium.77700_B            |    1 +
 .../Midstone-200i/port_config.ini             |  128 +-
 .../Midstone-200i/qos.json.j2                 |  244 ++-
 .../Midstone-200i/sai.profile                 |    2 +-
 .../Midstone-200i_128x100/buffers.json.j2     |  158 +-
 .../config_128x100G_midstone200i.yaml         |   19 +-
 .../Midstone-200i_128x100/innovium.77700_B    |    1 +
 .../Midstone-200i_128x100/port_config.ini     |  260 ++-
 .../Midstone-200i_128x100/qos.json.j2         |  248 ++-
 .../Midstone-200i_128x100/sai.profile         |    2 +-
 .../Midstone-200i_32x400/buffers.json.j2      |  158 +-
 .../config_32x400G_midstone200i.yaml          |   19 +-
 .../Midstone-200i_32x400/innovium.77700_A     |    1 +
 .../Midstone-200i_32x400/port_config.ini      |   68 +-
 .../Midstone-200i_32x400/qos.json.j2          |  244 ++-
 .../Midstone-200i_32x400/sai.profile          |    2 +-
 .../Midstone-200i_64x100/buffers.json.j2      |  158 +-
 .../config_64x100G_nrz_midstone200i.yaml      |   23 +-
 .../Midstone-200i_64x100/innovium.77700_B     |    1 +
 .../Midstone-200i_64x100/port_config.ini      |  132 +-
 .../Midstone-200i_64x100/qos.json.j2          |  244 ++-
 .../Midstone-200i_64x100/sai.profile          |    2 +-
 .../Midstone-200i_64x100nrz/buffers.json.j2   |  159 +-
 .../config_64x100G_nrz_midstone200i.yaml      |    3 +
 .../Midstone-200i_64x100nrz/innovium.77700_B  |    1 +
 .../Midstone-200i_64x100nrz/qos.json.j2       |  244 ++-
 .../Midstone-200i_64x100nrz/sai.profile       |    2 +-
 .../Midstone-200i_64x200/buffers.json.j2      |  158 +-
 .../config_64x200G_midstone200i.yaml          |   19 +-
 .../Midstone-200i_64x200/innovium.77700_B     |    1 +
 .../Midstone-200i_64x200/port_config.ini      |  132 +-
 .../Midstone-200i_64x200/qos.json.j2          |  244 ++-
 .../Midstone-200i_64x200/sai.profile          |    2 +-
 .../x86_64-cel_midstone-r0/installer.conf     |    1 +
 .../x86_64-wistron_6512_32r-r0/installer.conf |    2 +-
 .../plugins/sfputil.py                        |   29 +-
 .../sonic_platform/sfp.py                     | 1538 +++-------------
 .../6512-32_32x400G.config.yaml               |   39 +-
 .../wistron_6512_32r/buffers.json.j2          |  144 +-
 .../buffers_defaults_def_lossy.j2             |   24 +-
 .../wistron_6512_32r/buffers_defaults_t1.j2   |   77 +-
 .../wistron_6512_32r/innovium.77700_A         |    1 +
 .../wistron_6512_32r/innovium.77700_B         |    1 +
 .../wistron_6512_32r/ivm.sai.config.yaml      |    8 +-
 .../ivm.sai.datapath.config.yaml              |   12 +-
 .../wistron_6512_32r/pg_profile_lookup.ini    |   36 +-
 .../wistron_6512_32r/qos.json.j2              |  165 +-
 .../qos_defaults_def_lossy.j2                 |   17 +-
 .../wistron_6512_32r/qos_defaults_t1.j2       |  155 +-
 .../Wistron_sw_to3200k/buffers.json.j2        |  144 +-
 .../buffers_defaults_def_lossy.j2             |   24 +-
 .../Wistron_sw_to3200k/buffers_defaults_t1.j2 |   77 +-
 .../config_32x400G_wistron_sw_to3200k.yaml    |    6 +-
 .../Wistron_sw_to3200k/innovium.77700_A       |    1 +
 .../Wistron_sw_to3200k/innovium.77700_B       |    1 +
 .../Wistron_sw_to3200k/ivm.sai.config.yaml    |    7 +-
 .../ivm.sai.datapath.config.yaml              |   12 +-
 .../Wistron_sw_to3200k/pg_profile_lookup.ini  |   36 +-
 .../Wistron_sw_to3200k/qos.json.j2            |  224 ++-
 .../qos_defaults_def_lossy.j2                 |   17 +-
 .../Wistron_sw_to3200k/qos_defaults_t1.j2     |  218 ++-
 .../buffers.json.j2                           |  142 +-
 .../buffers_defaults_def_lossy.j2             |   20 +-
 .../buffers_defaults_t1.j2                    |   66 +-
 .../innovium.77700_A                          |    1 +
 .../innovium.77700_B                          |    1 +
 .../ivm.sai.config.yaml                       |    7 +-
 .../pg_profile_lookup.ini                     |   36 +-
 .../qos.json.j2                               |  165 +-
 .../qos_defaults_def_lossy.j2                 |   17 +-
 .../qos_defaults_t1.j2                        |  155 +-
 .../buffers.json.j2                           |  142 +-
 .../buffers_defaults_def_lossy.j2             |   20 +-
 .../buffers_defaults_t1.j2                    |   66 +-
 .../innovium.77700_A                          |    1 +
 .../innovium.77700_B                          |    1 +
 .../ivm.sai.config.yaml                       |    7 +-
 .../pg_profile_lookup.ini                     |   36 +-
 .../qos.json.j2                               |  165 +-
 .../qos_defaults_def_lossy.j2                 |   17 +-
 .../qos_defaults_t1.j2                        |  155 +-
 .../buffers.json.j2                           |  142 +-
 .../buffers_defaults_def_lossy.j2             |   20 +-
 .../buffers_defaults_t1.j2                    |   66 +-
 .../innovium.77700_A                          |    1 +
 .../innovium.77700_B                          |    1 +
 .../ivm.sai.config.yaml                       |    7 +-
 .../pg_profile_lookup.ini                     |   36 +-
 .../qos.json.j2                               |  165 +-
 .../qos_defaults_def_lossy.j2                 |   17 +-
 .../qos_defaults_t1.j2                        |  155 +-
 .../Wistron_sw_to3200k_32x100/buffers.json.j2 |   73 +-
 .../buffers_defaults_def_lossy.j2             |   24 +-
 .../buffers_defaults_t1.j2                    |   73 +-
 .../config_32x100G_wistron_sw_to3200k.yaml    |    5 +-
 .../innovium.77700_B                          |    1 +
 .../ivm.sai.config.yaml                       |    7 +-
 .../pg_profile_lookup.ini                     |   36 +-
 .../Wistron_sw_to3200k_32x100/qos.json.j2     |  155 +-
 .../qos_defaults_def_lossy.j2                 |   17 +-
 .../qos_defaults_t1.j2                        |  155 +-
 .../buffers.json.j2                           |  142 +-
 .../buffers_defaults_def_lossy.j2             |   20 +-
 .../buffers_defaults_t1.j2                    |   66 +-
 .../innovium.77700_A                          |    1 +
 .../innovium.77700_B                          |    1 +
 .../ivm.sai.config.yaml                       |    7 +-
 .../pg_profile_lookup.ini                     |   36 +-
 .../qos.json.j2                               |  165 +-
 .../qos_defaults_def_lossy.j2                 |   17 +-
 .../qos_defaults_t1.j2                        |  155 +-
 .../installer.conf                            |    2 +-
 .../plugins/eeprom.py                         |    6 +-
 .../plugins/sfputil.py                        |   10 +-
 .../6512-32r/modules/Makefile                 |    2 +-
 .../6512-32r/modules/wistron_6512_32r_cpld.c  |  141 ++
 .../6512-32r/modules/wistron_6512_32r_oom.c   |  545 +++++-
 .../6512-32r/modules/wistron_6512_32r_psu.c   |   42 +-
 .../modules/wistron_6512_32r_syseeprom.c      |    4 +-
 .../service/6512-32r-platform.service         |    3 +-
 .../6512-32r/setup.py                         |    7 +-
 .../6512-32r/utils/platform_sync              |    2 +
 .../6512-32r/utils/platform_syseeprom         |   19 +-
 .../6512-32r/utils/sonic-psu-monitor          |  330 ++--
 .../6512-32r/utils/sonic-qsfp-monitor         |  798 +++++----
 .../6512-32r/utils/wistron_6512_32r_util.py   |   23 +-
 .../sw-to3200k/modules/wistron_i2c_psu.c      |   10 +-
 .../modules/wistron_sw_to3200k_fan.c          |   42 +-
 .../modules/wistron_sw_to3200k_oom.c          |  149 +-
 .../modules/wistron_sw_to3200k_psu.c          |    4 +-
 .../modules/wistron_sw_to3200k_thermal.c      |    2 +-
 .../sw-to3200k/sonic_platform/__init__.py     |    2 +-
 .../sw-to3200k/sonic_platform/chassis.py      |  122 +-
 .../sw-to3200k/sonic_platform/eeprom.py       |   17 +-
 .../sw-to3200k/sonic_platform/fan.py          |  266 ++-
 .../sw-to3200k/sonic_platform/psu.py          |   98 +-
 .../sw-to3200k/sonic_platform/sfp.py          | 1557 +++--------------
 .../sw-to3200k/sonic_platform/thermal.py      |  134 +-
 .../sw-to3200k/utils/sonic-led-monitor        |   40 +-
 .../sw-to3200k/utils/sonic-psu-monitor        |   18 +-
 .../sw-to3200k/utils/sonic-qsfp-monitor       |  192 +-
 .../utils/wistron_sw_to3200k_util.py          |   18 +-
 src/sonic-frr/frr                             |    2 +-
 src/sonic-utilities                           |    2 +-
 146 files changed, 7801 insertions(+), 6312 deletions(-)

diff --git a/device/celestica/x86_64-cel_midstone-r0/Midstone-200i/buffers.json.j2 b/device/celestica/x86_64-cel_midstone-r0/Midstone-200i/buffers.json.j2
index 477c7ce6b..020656fdb 100644
--- a/device/celestica/x86_64-cel_midstone-r0/Midstone-200i/buffers.json.j2
+++ b/device/celestica/x86_64-cel_midstone-r0/Midstone-200i/buffers.json.j2
@@ -1,6 +1,5 @@
 {# Default values which will be used if no actual configura available #}
-{% set default_cable = '300m' %}
-{% set default_ports_num = 64 -%}
+{% set default_cable = '40m' %}
 
 {# Port configuration to cable length look-up table #}
 {# Each record describes mapping of DUT (DUT port) role and neighbor role to cable length #}
@@ -12,44 +11,53 @@
         }
 %}
 
-{%- macro cable_length(port_name) -%}
-    {%- set cable_len = [] -%}
-    {%- for local_port in DEVICE_NEIGHBOR -%}
-        {%- if local_port == port_name -%}
-            {%- if DEVICE_NEIGHBOR_METADATA[DEVICE_NEIGHBOR[local_port].name] -%}
-                {%- set neighbor = DEVICE_NEIGHBOR_METADATA[DEVICE_NEIGHBOR[local_port].name] -%}
-                {%- set neighbor_role = neighbor.type -%}
+{%- macro cable_length(port_name) %}
+    {%- set cable_len = [] %}
+    {%- for local_port in DEVICE_NEIGHBOR %}
+        {%- if local_port == port_name %}
+            {%- if DEVICE_NEIGHBOR_METADATA is defined and DEVICE_NEIGHBOR_METADATA[DEVICE_NEIGHBOR[local_port].name] %}
+                {%- set neighbor = DEVICE_NEIGHBOR_METADATA[DEVICE_NEIGHBOR[local_port].name] %}
+                {%- set neighbor_role = neighbor.type %}
                 {%- set roles1 = switch_role + '_' + neighbor_role %}
-                {%- set roles2 = neighbor_role + '_' + switch_role -%}
-                {%- set roles1 = roles1 | lower -%}
-                {%- set roles2 = roles2 | lower -%}
-                {%- if roles1 in ports2cable -%}
-                    {%- if cable_len.append(ports2cable[roles1]) -%}{%- endif -%}
-                {%- elif roles2 in ports2cable -%}
-                    {%- if cable_len.append(ports2cable[roles2]) -%}{%- endif -%}
-                {%- endif -%}
-            {%- endif -%}
-        {%- endif -%}
-    {%- endfor -%}
+                {%- set roles2 = neighbor_role + '_' + switch_role %}
+                {%- set roles1 = roles1 | lower %}
+                {%- set roles2 = roles2 | lower %}
+                {%- if roles1 in ports2cable %}
+                    {%- if cable_len.append(ports2cable[roles1]) %}{% endif %}
+                {%- elif roles2 in ports2cable %}
+                    {%- if cable_len.append(ports2cable[roles2]) %}{% endif %}
+                {%- endif %}
+            {%- endif %}
+        {%- endif %}
+    {%- endfor %}
     {%- if cable_len -%}
         {{ cable_len.0 }}
-    {%- else -%}
-        {{ default_cable }}
-    {%- endif -%}
-{% endmacro %}
+    {%- else %}
+        {%- if switch_role.lower() == 'torrouter' %}
+            {%- for local_port in VLAN_MEMBER %}
+                {%- if local_port[1] == port_name %}
+                    {%- set roles3 = switch_role + '_' + 'server' %}
+                    {%- set roles3 = roles3 | lower %}
+                    {%- if roles3 in ports2cable %}
+                        {%- if cable_len.append(ports2cable[roles3]) %}{% endif %}
+                    {%- endif %}
+                {%- endif %}
+            {%- endfor %}
+            {%- if cable_len -%}
+                {{ cable_len.0 }}
+            {%- else -%}
+                {{ default_cable }}
+            {%- endif %}
+        {%- else -%}
+            {{ default_cable }}
+        {%- endif %}
+    {%- endif %}
+{%- endmacro %}
 
 {%- if DEVICE_METADATA is defined %}
 {%- set switch_role = DEVICE_METADATA['localhost']['type'] %}
 {%- endif -%}
 
-{# Generate list of ports if not defined #}
-{% if PORT is not defined %}
-    {% set PORT = [] %}
-    {% for port_idx in range(0,default_ports_num) %}
-        {% if PORT.append("Ethernet%d" % (port_idx*4)) %}{% endif %}
-    {% endfor %}
-{% endif -%}
-
 {% set port_names_list = [] %}
 {% for port in PORT %}
     {%- if port_names_list.append(port) %}{% endif %}
@@ -57,64 +65,98 @@
 {% set port_names = port_names_list | join(',') -%}
 
 {
+    "CABLE_LENGTH": {
+        "AZURE": {
+    {% for port in PORT %}
+        {% set cable = cable_length(port) -%}
+        "{{ port }}": "{{ cable }}"{%- if not loop.last -%},{% endif %}
+
+    {% endfor %}
+    }
+    },
     "BUFFER_POOL": {
         "ingress_lossless_pool": {
-            "size": "47218432",
+            "size": "51691264",
             "type": "ingress",
             "mode": "dynamic",
             "xoff": "17708800"
         },
-        "egress_lossy_pool": {
+        "lossy_pool": {
             "size": "18874368",
             "type": "egress",
             "mode": "dynamic",
             "xoff": "0"
+        },
+        "egress_lossless_pool": {
+            "size": "70565632",
+            "type": "egress",
+            "mode": "static"
         }
     },
     "BUFFER_PROFILE": {
         "ingress_lossless_profile": {
             "pool":"ingress_lossless_pool",
-            "xoff":"1433600",
+            "xoff":"38816",
             "size":"1518",
-            "dynamic_th":"-4",
-            "xon_offset":"6272"
+            "dynamic_th":"1",
+            "xon_offset":"9408"
         },
-        "ingress_lossy_profile": {
+        "egress_lossless_profile": {
             "pool":"ingress_lossless_pool",
             "size":"0",
-            "static_th":"9721600"
+            "static_th":"10243072"
         },
-        "egress_lossless_profile": {
-            "pool":"egress_lossy_pool",
+        "ingress_lossy_profile": {
+            "pool":"lossy_pool",
             "size":"0",
-            "static_th":"9721600"
+            "static_th":"10243072"
         },
         "egress_lossy_profile": {
-            "pool":"egress_lossy_pool",
+            "pool":"lossy_pool",
             "size":"1518",
-            "dynamic_th":"3"
+            "dynamic_th":"2"
         }
     },
     "BUFFER_PG": {
-        "{{ port_names }}|0-3": {
-            "profile" : "egress_lossless_profile"
-        },
-        "{{ port_names }}|4-5": {
-            "profile" : "ingress_lossless_profile"
-        },
-        "{{ port_names }}|6-7": {
-            "profile" : "egress_lossless_profile"
-        }
+{% for port in port_names_list %}
+                "{{ port }}|3-4": {
+                     "profile" : "ingress_lossless_profile"
+                },
+{% endfor %}
+{% for port in port_names_list %}
+                "{{ port }}|0": {
+                    "profile" : "ingress_lossy_profile"
+                },
+{% endfor %}
+{% for port in port_names_list %}
+                "{{ port }}|1-2": {
+                    "profile" : "ingress_lossy_profile"
+                },
+{% endfor %}
+{% for port in port_names_list %}
+                "{{ port }}|5-7": {
+                    "profile" : "ingress_lossy_profile"
+                }{% if not loop.last %},{% endif %}
+
+{% endfor %}
     },
+
     "BUFFER_QUEUE": {
-        "{{ port_names }}|4-5": {
-            "profile" : "ingress_lossy_profile"
+{% for port in port_names_list %}
+        "{{ port }}|3-4": {
+             "profile" : "egress_lossless_profile"
         },
-        "{{ port_names }}|0-3": {
+{% endfor %}
+{% for port in port_names_list %}
+        "{{ port }}|0-2": {
             "profile" : "egress_lossy_profile"
         },
-        "{{ port_names }}|6-7": {
+{% endfor %}
+{% for port in port_names_list %}
+        "{{ port }}|5-7": {
             "profile" : "egress_lossy_profile"
-        }
+        }{% if not loop.last %},{% endif %}
+
+{% endfor %}
     }
 }
diff --git a/device/celestica/x86_64-cel_midstone-r0/Midstone-200i/config_64x100G_midstone200i.yaml b/device/celestica/x86_64-cel_midstone-r0/Midstone-200i/config_64x100G_midstone200i.yaml
index 0b7e1a2db..e3edbaabb 100755
--- a/device/celestica/x86_64-cel_midstone-r0/Midstone-200i/config_64x100G_midstone200i.yaml
+++ b/device/celestica/x86_64-cel_midstone-r0/Midstone-200i/config_64x100G_midstone200i.yaml
@@ -4,12 +4,20 @@ ifcs:
 nodes:
 - node_id: "0"
   options:
+    sd_low_power_mode_global_default: "true"
     sku: "innovium.77700_B"
     netdev:
     - auto_create: "no"
       multi_interface: "yes"
     buffer_management_mode: "api_driven"
+    wred_cr_ip_proto_list: "17"
+    cr_assignment_mode: "1"
     max_lossless_tc: "2"
+    pcie_attn: "14"
+    pcie_post: "18"
+    pcie_pre1: "0"
+    ilpm_enable: "1"
+    forward_profile: "IFCS_FORWARD_PROFILE_ID_PROFILE_E"
     txring:
     - txring_id: "0"
       desc_count: "1024"
@@ -57,452 +65,452 @@ nodes:
     sysport: "128"
     type: "cpu"
   - fec: "KRFEC"
-    id: "1"
+    id: "249"
     lanes: "0:4"
     serdes_group: "31"
     speed: "100G"
-    sysport: "1"
+    sysport: "249"
     type: "eth"
   - fec: "KRFEC"
-    id: "2"
+    id: "253"
     lanes: "4:4"
     serdes_group: "31"
     speed: "100G"
-    sysport: "2"
+    sysport: "253"
     type: "eth"
   - fec: "KRFEC"
-    id: "3"
+    id: "245"
     lanes: "4:4"
     serdes_group: "30"
     speed: "100G"
-    sysport: "3"
+    sysport: "245"
     type: "eth"
   - fec: "KRFEC"
-    id: "4"
+    id: "241"
     lanes: "0:4"
     serdes_group: "30"
     speed: "100G"
-    sysport: "4"
+    sysport: "241"
     type: "eth"
   - fec: "KRFEC"
-    id: "5"
+    id: "233"
     lanes: "0:4"
     serdes_group: "29"
     speed: "100G"
-    sysport: "5"
+    sysport: "233"
     type: "eth"
   - fec: "KRFEC"
-    id: "6"
+    id: "237"
     lanes: "4:4"
     serdes_group: "29"
     speed: "100G"
-    sysport: "6"
+    sysport: "237"
     type: "eth"
   - fec: "KRFEC"
-    id: "7"
+    id: "229"
     lanes: "4:4"
     serdes_group: "28"
     speed: "100G"
-    sysport: "7"
+    sysport: "229"
     type: "eth"
   - fec: "KRFEC"
-    id: "8"
+    id: "225"
     lanes: "0:4"
     serdes_group: "28"
     speed: "100G"
-    sysport: "8"
+    sysport: "225"
     type: "eth"
   - fec: "KRFEC"
-    id: "9"
+    id: "217"
     lanes: "0:4"
     serdes_group: "27"
     speed: "100G"
-    sysport: "9"
+    sysport: "217"
     type: "eth"
   - fec: "KRFEC"
-    id: "10"
+    id: "221"
     lanes: "4:4"
     serdes_group: "27"
     speed: "100G"
-    sysport: "10"
+    sysport: "221"
     type: "eth"
   - fec: "KRFEC"
-    id: "11"
+    id: "213"
     lanes: "4:4"
     serdes_group: "26"
     speed: "100G"
-    sysport: "11"
+    sysport: "213"
     type: "eth"
   - fec: "KRFEC"
-    id: "12"
+    id: "209"
     lanes: "0:4"
     serdes_group: "26"
     speed: "100G"
-    sysport: "12"
+    sysport: "209"
     type: "eth"
   - fec: "KRFEC"
-    id: "13"
+    id: "201"
     lanes: "0:4"
     serdes_group: "25"
     speed: "100G"
-    sysport: "13"
+    sysport: "201"
     type: "eth"
   - fec: "KRFEC"
-    id: "14"
+    id: "205"
     lanes: "4:4"
     serdes_group: "25"
     speed: "100G"
-    sysport: "14"
+    sysport: "205"
     type: "eth"
   - fec: "KRFEC"
-    id: "15"
+    id: "197"
     lanes: "4:4"
     serdes_group: "24"
     speed: "100G"
-    sysport: "15"
+    sysport: "197"
     type: "eth"
   - fec: "KRFEC"
-    id: "16"
+    id: "193"
     lanes: "0:4"
     serdes_group: "24"
     speed: "100G"
-    sysport: "16"
+    sysport: "193"
     type: "eth"
   - fec: "KRFEC"
-    id: "17"
+    id: "185"
     lanes: "0:4"
     serdes_group: "23"
     speed: "100G"
-    sysport: "17"
+    sysport: "185"
     type: "eth"
   - fec: "KRFEC"
-    id: "18"
+    id: "189"
     lanes: "4:4"
     serdes_group: "23"
     speed: "100G"
-    sysport: "18"
+    sysport: "189"
     type: "eth"
   - fec: "KRFEC"
-    id: "19"
+    id: "181"
     lanes: "4:4"
     serdes_group: "22"
     speed: "100G"
-    sysport: "19"
+    sysport: "181"
     type: "eth"
   - fec: "KRFEC"
-    id: "20"
+    id: "177"
     lanes: "0:4"
     serdes_group: "22"
     speed: "100G"
-    sysport: "20"
+    sysport: "177"
     type: "eth"
   - fec: "KRFEC"
-    id: "21"
+    id: "169"
     lanes: "0:4"
     serdes_group: "21"
     speed: "100G"
-    sysport: "21"
+    sysport: "169"
     type: "eth"
   - fec: "KRFEC"
-    id: "22"
+    id: "173"
     lanes: "4:4"
     serdes_group: "21"
     speed: "100G"
-    sysport: "22"
+    sysport: "173"
     type: "eth"
   - fec: "KRFEC"
-    id: "23"
+    id: "165"
     lanes: "4:4"
     serdes_group: "20"
     speed: "100G"
-    sysport: "23"
+    sysport: "165"
     type: "eth"
   - fec: "KRFEC"
-    id: "24"
+    id: "161"
     lanes: "0:4"
     serdes_group: "20"
     speed: "100G"
-    sysport: "24"
+    sysport: "161"
     type: "eth"
   - fec: "KRFEC"
-    id: "25"
+    id: "153"
     lanes: "0:4"
     serdes_group: "19"
     speed: "100G"
-    sysport: "25"
+    sysport: "153"
     type: "eth"
   - fec: "KRFEC"
-    id: "26"
+    id: "157"
     lanes: "4:4"
     serdes_group: "19"
     speed: "100G"
-    sysport: "26"
+    sysport: "157"
     type: "eth"
   - fec: "KRFEC"
-    id: "27"
+    id: "149"
     lanes: "4:4"
     serdes_group: "18"
     speed: "100G"
-    sysport: "27"
+    sysport: "149"
     type: "eth"
   - fec: "KRFEC"
-    id: "28"
+    id: "145"
     lanes: "0:4"
     serdes_group: "18"
     speed: "100G"
-    sysport: "28"
+    sysport: "145"
     type: "eth"
   - fec: "KRFEC"
-    id: "29"
+    id: "137"
     lanes: "0:4"
     serdes_group: "17"
     speed: "100G"
-    sysport: "29"
+    sysport: "137"
     type: "eth"
   - fec: "KRFEC"
-    id: "30"
+    id: "141"
     lanes: "4:4"
     serdes_group: "17"
     speed: "100G"
-    sysport: "30"
+    sysport: "141"
     type: "eth"
   - fec: "KRFEC"
-    id: "31"
+    id: "133"
     lanes: "4:4"
     serdes_group: "16"
     speed: "100G"
-    sysport: "31"
+    sysport: "133"
     type: "eth"
   - fec: "KRFEC"
-    id: "32"
+    id: "129"
     lanes: "0:4"
     serdes_group: "16"
     speed: "100G"
-    sysport: "32"
+    sysport: "129"
     type: "eth"
   - fec: "KRFEC"
-    id: "33"
+    id: "121"
     lanes: "0:4"
     serdes_group: "15"
     speed: "100G"
-    sysport: "33"
+    sysport: "121"
     type: "eth"
   - fec: "KRFEC"
-    id: "34"
+    id: "125"
     lanes: "4:4"
     serdes_group: "15"
     speed: "100G"
-    sysport: "34"
+    sysport: "125"
     type: "eth"
   - fec: "KRFEC"
-    id: "35"
+    id: "117"
     lanes: "4:4"
     serdes_group: "14"
     speed: "100G"
-    sysport: "35"
+    sysport: "117"
     type: "eth"
   - fec: "KRFEC"
-    id: "36"
+    id: "113"
     lanes: "0:4"
     serdes_group: "14"
     speed: "100G"
-    sysport: "36"
+    sysport: "113"
     type: "eth"
   - fec: "KRFEC"
-    id: "37"
+    id: "105"
     lanes: "0:4"
     serdes_group: "13"
     speed: "100G"
-    sysport: "37"
+    sysport: "105"
     type: "eth"
   - fec: "KRFEC"
-    id: "38"
+    id: "109"
     lanes: "4:4"
     serdes_group: "13"
     speed: "100G"
-    sysport: "38"
+    sysport: "109"
     type: "eth"
   - fec: "KRFEC"
-    id: "39"
+    id: "101"
     lanes: "4:4"
     serdes_group: "12"
     speed: "100G"
-    sysport: "39"
+    sysport: "101"
     type: "eth"
   - fec: "KRFEC"
-    id: "40"
+    id: "97"
     lanes: "0:4"
     serdes_group: "12"
     speed: "100G"
-    sysport: "40"
+    sysport: "97"
     type: "eth"
   - fec: "KRFEC"
-    id: "41"
+    id: "89"
     lanes: "0:4"
     serdes_group: "11"
     speed: "100G"
-    sysport: "41"
+    sysport: "89"
     type: "eth"
   - fec: "KRFEC"
-    id: "42"
+    id: "93"
     lanes: "4:4"
     serdes_group: "11"
     speed: "100G"
-    sysport: "42"
+    sysport: "93"
     type: "eth"
   - fec: "KRFEC"
-    id: "43"
+    id: "85"
     lanes: "4:4"
     serdes_group: "10"
     speed: "100G"
-    sysport: "43"
+    sysport: "85"
     type: "eth"
   - fec: "KRFEC"
-    id: "44"
+    id: "81"
     lanes: "0:4"
     serdes_group: "10"
     speed: "100G"
-    sysport: "44"
+    sysport: "81"
     type: "eth"
   - fec: "KRFEC"
-    id: "45"
+    id: "73"
     lanes: "0:4"
     serdes_group: "9"
     speed: "100G"
-    sysport: "45"
+    sysport: "73"
     type: "eth"
   - fec: "KRFEC"
-    id: "46"
+    id: "77"
     lanes: "4:4"
     serdes_group: "9"
     speed: "100G"
-    sysport: "46"
+    sysport: "77"
     type: "eth"
   - fec: "KRFEC"
-    id: "47"
+    id: "69"
     lanes: "4:4"
     serdes_group: "8"
     speed: "100G"
-    sysport: "47"
+    sysport: "69"
     type: "eth"
   - fec: "KRFEC"
-    id: "48"
+    id: "65"
     lanes: "0:4"
     serdes_group: "8"
     speed: "100G"
-    sysport: "48"
+    sysport: "65"
     type: "eth"
   - fec: "KRFEC"
-    id: "49"
+    id: "57"
     lanes: "0:4"
     serdes_group: "7"
     speed: "100G"
-    sysport: "49"
+    sysport: "57"
     type: "eth"
   - fec: "KRFEC"
-    id: "50"
+    id: "61"
     lanes: "4:4"
     serdes_group: "7"
     speed: "100G"
-    sysport: "50"
+    sysport: "61"
     type: "eth"
   - fec: "KRFEC"
-    id: "51"
+    id: "53"
     lanes: "4:4"
     serdes_group: "6"
     speed: "100G"
-    sysport: "51"
+    sysport: "53"
     type: "eth"
   - fec: "KRFEC"
-    id: "52"
+    id: "49"
     lanes: "0:4"
     serdes_group: "6"
     speed: "100G"
-    sysport: "52"
+    sysport: "49"
     type: "eth"
   - fec: "KRFEC"
-    id: "53"
+    id: "41"
     lanes: "0:4"
     serdes_group: "5"
     speed: "100G"
-    sysport: "53"
+    sysport: "41"
     type: "eth"
   - fec: "KRFEC"
-    id: "54"
+    id: "45"
     lanes: "4:4"
     serdes_group: "5"
     speed: "100G"
-    sysport: "54"
+    sysport: "45"
     type: "eth"
   - fec: "KRFEC"
-    id: "55"
+    id: "37"
     lanes: "4:4"
     serdes_group: "4"
     speed: "100G"
-    sysport: "55"
+    sysport: "37"
     type: "eth"
   - fec: "KRFEC"
-    id: "56"
+    id: "33"
     lanes: "0:4"
     serdes_group: "4"
     speed: "100G"
-    sysport: "56"
+    sysport: "33"
     type: "eth"
   - fec: "KRFEC"
-    id: "57"
+    id: "25"
     lanes: "0:4"
     serdes_group: "3"
     speed: "100G"
-    sysport: "57"
+    sysport: "25"
     type: "eth"
   - fec: "KRFEC"
-    id: "58"
+    id: "29"
     lanes: "4:4"
     serdes_group: "3"
     speed: "100G"
-    sysport: "58"
+    sysport: "29"
     type: "eth"
   - fec: "KRFEC"
-    id: "59"
+    id: "21"
     lanes: "4:4"
     serdes_group: "2"
     speed: "100G"
-    sysport: "59"
+    sysport: "21"
     type: "eth"
   - fec: "KRFEC"
-    id: "60"
+    id: "17"
     lanes: "0:4"
     serdes_group: "2"
     speed: "100G"
-    sysport: "60"
+    sysport: "17"
     type: "eth"
   - fec: "KRFEC"
-    id: "61"
+    id: "9"
     lanes: "0:4"
     serdes_group: "1"
     speed: "100G"
-    sysport: "61"
+    sysport: "9"
     type: "eth"
   - fec: "KRFEC"
-    id: "62"
+    id: "13"
     lanes: "4:4"
     serdes_group: "1"
     speed: "100G"
-    sysport: "62"
+    sysport: "13"
     type: "eth"
   - fec: "KRFEC"
-    id: "63"
+    id: "5"
     lanes: "4:4"
     serdes_group: "0"
     speed: "100G"
-    sysport: "63"
+    sysport: "5"
     type: "eth"
   - fec: "KRFEC"
-    id: "64"
+    id: "1"
     lanes: "0:4"
     serdes_group: "0"
     speed: "100G"
-    sysport: "64"
+    sysport: "1"
     type: "eth"
   isg:
   - id: "0"
diff --git a/device/celestica/x86_64-cel_midstone-r0/Midstone-200i/innovium.77700_B b/device/celestica/x86_64-cel_midstone-r0/Midstone-200i/innovium.77700_B
index 27297b313..57ba52cbc 100644
--- a/device/celestica/x86_64-cel_midstone-r0/Midstone-200i/innovium.77700_B
+++ b/device/celestica/x86_64-cel_midstone-r0/Midstone-200i/innovium.77700_B
@@ -5,6 +5,7 @@ device_id:         0x1b58
 # Hardware constraint information
 hardware:
         num_ibs:           6
+        ib_active:         0,1,2,3,4,5
 
         ports_per_ib:      32, 32, 32, 32, 20, 20
         recirc_port_num:   32, 32, 32, 32, 32, 32
diff --git a/device/celestica/x86_64-cel_midstone-r0/Midstone-200i/port_config.ini b/device/celestica/x86_64-cel_midstone-r0/Midstone-200i/port_config.ini
index c9b30d768..0aa3bf802 100755
--- a/device/celestica/x86_64-cel_midstone-r0/Midstone-200i/port_config.ini
+++ b/device/celestica/x86_64-cel_midstone-r0/Midstone-200i/port_config.ini
@@ -1,65 +1,65 @@
 # name              lanes                   speed       index   mtu
-Ethernet0           249,250,251,252         100000      1       9126
-Ethernet4           253,254,255,256         100000      2       9126
-Ethernet8           245,246,247,248         100000      3       9126
-Ethernet12          241,242,243,244         100000      4       9126
-Ethernet16          233,234,235,236         100000      5       9126
-Ethernet20          237,238,239,240         100000      6       9126
-Ethernet24          229,230,231,232         100000      7       9126
-Ethernet28          225,226,227,228         100000      8       9126
-Ethernet32          217,218,219,220         100000      9       9126
-Ethernet36          221,222,223,224         100000      10      9126
-Ethernet40          213,214,215,216         100000      11      9126
-Ethernet44          209,210,211,212         100000      12      9126
-Ethernet48          201,202,203,204         100000      13      9126
-Ethernet52          205,206,207,208         100000      14      9126
-Ethernet56          197,198,199,200         100000      15      9126
-Ethernet60          193,194,195,196         100000      16      9126
-Ethernet64          185,186,187,188         100000      17      9126
-Ethernet68          189,190,191,192         100000      18      9126
-Ethernet72          181,182,183,184         100000      19      9126
-Ethernet76          177,178,179,180         100000      20      9126
-Ethernet80          169,170,171,172         100000      21      9126
-Ethernet84          173,174,175,176         100000      22      9126
-Ethernet88          165,166,167,168         100000      23      9126
-Ethernet92          161,162,163,164         100000      24      9126
-Ethernet96          153,154,155,156         100000      25      9126
-Ethernet100         157,158,159,160         100000      26      9126
-Ethernet104         149,150,151,152         100000      27      9126
-Ethernet108         145,146,147,148         100000      28      9126
-Ethernet112         137,138,139,140         100000      29      9126
-Ethernet116         141,142,143,144         100000      30      9126
-Ethernet120         133,134,135,136         100000      31      9126
-Ethernet124         129,130,131,132         100000      32      9126
-Ethernet128         121,122,123,124         100000      33      9126
-Ethernet132         125,126,127,128         100000      34      9126
-Ethernet136         117,118,119,120         100000      35      9126
-Ethernet140         113,114,115,116         100000      36      9126
-Ethernet144         105,106,107,108         100000      37      9126
-Ethernet148         109,110,111,112         100000      38      9126
-Ethernet152         101,102,103,104         100000      39      9126
-Ethernet156         97,98,99,100            100000      40      9126
-Ethernet160         89,90,91,92             100000      41      9126
-Ethernet164         93,94,95,96             100000      42      9126
-Ethernet168         85,86,87,88             100000      43      9126
-Ethernet172         81,82,83,84             100000      44      9126
-Ethernet176         73,74,75,76             100000      45      9126
-Ethernet180         77,78,79,80             100000      46      9126
-Ethernet184         69,70,71,72             100000      47      9126
-Ethernet188         65,66,67,68             100000      48      9126
-Ethernet192         57,58,59,60             100000      49      9126
-Ethernet196         61,62,63,64             100000      50      9126
-Ethernet200         53,54,55,56             100000      51      9126
-Ethernet204         49,50,51,52             100000      52      9126
-Ethernet208         41,42,43,44             100000      53      9126
-Ethernet212         45,46,47,48             100000      54      9126
-Ethernet216         37,38,39,40             100000      55      9126
-Ethernet220         33,34,35,36             100000      56      9126
-Ethernet224         25,26,27,28             100000      57      9126
-Ethernet228         29,30,31,32             100000      58      9126
-Ethernet232         21,22,23,24             100000      59      9126
-Ethernet236         17,18,19,20             100000      60      9126
-Ethernet240         9,10,11,12              100000      61      9126
-Ethernet244         13,14,15,16             100000      62      9126
-Ethernet248         5,6,7,8                 100000      63      9126
-Ethernet252         1,2,3,4                 100000      64      9126
+Ethernet0           249,250,251,252         100000      0       9126
+Ethernet4           253,254,255,256         100000      1       9126
+Ethernet8           245,246,247,248         100000      2       9126
+Ethernet12          241,242,243,244         100000      3       9126
+Ethernet16          233,234,235,236         100000      4       9126
+Ethernet20          237,238,239,240         100000      5       9126
+Ethernet24          229,230,231,232         100000      6       9126
+Ethernet28          225,226,227,228         100000      7       9126
+Ethernet32          217,218,219,220         100000      8       9126
+Ethernet36          221,222,223,224         100000      9       9126
+Ethernet40          213,214,215,216         100000      10      9126
+Ethernet44          209,210,211,212         100000      11      9126
+Ethernet48          201,202,203,204         100000      12      9126
+Ethernet52          205,206,207,208         100000      13      9126
+Ethernet56          197,198,199,200         100000      14      9126
+Ethernet60          193,194,195,196         100000      15      9126
+Ethernet64          185,186,187,188         100000      16      9126
+Ethernet68          189,190,191,192         100000      17      9126
+Ethernet72          181,182,183,184         100000      18      9126
+Ethernet76          177,178,179,180         100000      19      9126
+Ethernet80          169,170,171,172         100000      20      9126
+Ethernet84          173,174,175,176         100000      21      9126
+Ethernet88          165,166,167,168         100000      22      9126
+Ethernet92          161,162,163,164         100000      23      9126
+Ethernet96          153,154,155,156         100000      24      9126
+Ethernet100         157,158,159,160         100000      25      9126
+Ethernet104         149,150,151,152         100000      26      9126
+Ethernet108         145,146,147,148         100000      27      9126
+Ethernet112         137,138,139,140         100000      28      9126
+Ethernet116         141,142,143,144         100000      29      9126
+Ethernet120         133,134,135,136         100000      30      9126
+Ethernet124         129,130,131,132         100000      31      9126
+Ethernet128         121,122,123,124         100000      32      9126
+Ethernet132         125,126,127,128         100000      33      9126
+Ethernet136         117,118,119,120         100000      34      9126
+Ethernet140         113,114,115,116         100000      35      9126
+Ethernet144         105,106,107,108         100000      36      9126
+Ethernet148         109,110,111,112         100000      37      9126
+Ethernet152         101,102,103,104         100000      38      9126
+Ethernet156         97,98,99,100            100000      39      9126
+Ethernet160         89,90,91,92             100000      40      9126
+Ethernet164         93,94,95,96             100000      41      9126
+Ethernet168         85,86,87,88             100000      42      9126
+Ethernet172         81,82,83,84             100000      43      9126
+Ethernet176         73,74,75,76             100000      44      9126
+Ethernet180         77,78,79,80             100000      45      9126
+Ethernet184         69,70,71,72             100000      46      9126
+Ethernet188         65,66,67,68             100000      47      9126
+Ethernet192         57,58,59,60             100000      48      9126
+Ethernet196         61,62,63,64             100000      49      9126
+Ethernet200         53,54,55,56             100000      50      9126
+Ethernet204         49,50,51,52             100000      51      9126
+Ethernet208         41,42,43,44             100000      52      9126
+Ethernet212         45,46,47,48             100000      53      9126
+Ethernet216         37,38,39,40             100000      54      9126
+Ethernet220         33,34,35,36             100000      55      9126
+Ethernet224         25,26,27,28             100000      56      9126
+Ethernet228         29,30,31,32             100000      57      9126
+Ethernet232         21,22,23,24             100000      58      9126
+Ethernet236         17,18,19,20             100000      59      9126
+Ethernet240         9,10,11,12              100000      60      9126
+Ethernet244         13,14,15,16             100000      61      9126
+Ethernet248         5,6,7,8                 100000      62      9126
+Ethernet252         1,2,3,4                 100000      63      9126
diff --git a/device/celestica/x86_64-cel_midstone-r0/Midstone-200i/qos.json.j2 b/device/celestica/x86_64-cel_midstone-r0/Midstone-200i/qos.json.j2
index 73c878e66..0f1ecd110 100755
--- a/device/celestica/x86_64-cel_midstone-r0/Midstone-200i/qos.json.j2
+++ b/device/celestica/x86_64-cel_midstone-r0/Midstone-200i/qos.json.j2
@@ -1,14 +1,3 @@
-{# Default values which will be used if no actual configura available #}
-
-{% set default_ports_num = 64 -%}
-{# Generate list of ports if not defined #}
-{% if PORT is not defined %}
-    {% set PORT = [] %}
-    {% for port_idx in range(0,default_ports_num) %}
-        {% if PORT.append("Ethernet%d" % (port_idx*4)) %}{% endif %}
-    {% endfor %}
-{% endif -%}
-
 {% set port_names_list = [] %}
 {% for port in PORT %}
     {%- if port_names_list.append(port) %}{% endif %}
@@ -19,102 +8,185 @@
 {
    "TC_TO_QUEUE_MAP":{
         "AZURE":{
-            "1":"1",
             "0":"0",
-            "3":"3",
+            "1":"1",
             "2":"2",
-            "5":"5",
+            "3":"3",
             "4":"4",
-            "7":"7",
-            "6":"6"
+            "5":"5",
+            "6":"6",
+            "7":"7"
+        }
+    },
+    "MAP_PFC_PRIORITY_TO_QUEUE": {
+        "AZURE": {
+            "0": "0",
+            "1": "1",
+            "2": "2",
+            "3": "3",
+            "4": "4",
+            "5": "5",
+            "6": "6",
+            "7": "7"
         }
     },
     "TC_TO_PRIORITY_GROUP_MAP": {
     "AZURE": {
-        "1": "0",
         "0": "0",
-        "3": "0",
+        "1": "0",
         "2": "0",
-        "4": "1",
-        "5": "2",
+        "3": "3",
+        "4": "4",
+        "5": "0",
         "6": "0",
         "7": "0"
     }
     },
        "DSCP_TO_TC_MAP": {
         "AZURE": {
-            "0":"0",
-            "1":"0",
-            "2":"0",
-            "3":"0",
-            "4":"4",
-            "5":"5",
-            "6":"0",
-            "7":"0",
-            "8":"1",
-            "9":"0",
-            "10":"0",
-            "11":"0",
-            "12":"0",
-            "13":"0",
-            "14":"0",
-            "15":"0",
-            "16":"0",
-            "17":"0",
-            "18":"0",
-            "19":"0",
-            "20":"0",
-            "21":"0",
-            "22":"0",
-            "23":"0",
-            "24":"0",
-            "25":"0",
-            "26":"0",
-            "27":"0",
-            "28":"0",
-            "29":"0",
-            "30":"0",
-            "31":"0",
-            "32":"0",
-            "33":"0",
-            "34":"0",
-            "35":"0",
-            "36":"0",
-            "37":"0",
-            "38":"0",
-            "39":"0",
-            "40":"0",
-            "41":"0",
-            "42":"0",
-            "43":"0",
-            "44":"0",
-            "45":"0",
-            "46":"0",
-            "47":"0",
-            "48":"0",
-            "49":"0",
-            "50":"0",
-            "51":"0",
-            "52":"0",
-            "53":"0",
-            "54":"0",
-            "55":"0",
-            "56":"0",
-            "57":"0",
-            "58":"0",
-            "59":"0",
-            "60":"0",
-            "61":"0",
-            "62":"0",
-            "63":"0"
+            "0" : "1",
+            "1" : "1",
+            "2" : "1",
+            "3" : "3",
+            "4" : "4",
+            "5" : "2",
+            "6" : "1",
+            "7" : "1",
+            "8" : "0",
+            "9" : "1",
+            "10": "1",
+            "11": "1",
+            "12": "1",
+            "13": "1",
+            "14": "1",
+            "15": "1",
+            "16": "1",
+            "17": "1",
+            "18": "1",
+            "19": "1",
+            "20": "1",
+            "21": "1",
+            "22": "1",
+            "23": "1",
+            "24": "1",
+            "25": "1",
+            "26": "1",
+            "27": "1",
+            "28": "1",
+            "29": "1",
+            "30": "1",
+            "31": "1",
+            "32": "1",
+            "33": "1",
+            "34": "1",
+            "35": "1",
+            "36": "1",
+            "37": "1",
+            "38": "1",
+            "39": "1",
+            "40": "1",
+            "41": "1",
+            "42": "1",
+            "43": "1",
+            "44": "1",
+            "45": "1",
+            "46": "5",
+            "47": "1",
+            "48": "6",
+            "49": "1",
+            "50": "1",
+            "51": "1",
+            "52": "1",
+            "53": "1",
+            "54": "1",
+            "55": "1",
+            "56": "1",
+            "57": "1",
+            "58": "1",
+            "59": "1",
+            "60": "1",
+            "61": "1",
+            "62": "1",
+            "63": "1"
+        }
+    },
+    "SCHEDULER": {
+        "scheduler.0": {
+            "type"  : "DWRR",
+            "weight": "1"
+        },
+        "scheduler.1": {
+            "type"  : "DWRR",
+            "weight": "1"
         }
     },
+    "QUEUE": {
+{% for port in port_names_list %}
+        "{{ port }}|3": {
+            "scheduler"   : "scheduler.1",
+            "wred_profile"  : "AZURE_LOSSLESS"
+        },
+{% endfor %}
+{% for port in port_names_list %}
+        "{{ port }}|4": {
+            "scheduler"   : "scheduler.1",
+            "wred_profile"  : "AZURE_LOSSLESS"
+        },
+{% endfor %}
+{% for port in port_names_list %}
+        "{{ port }}|0": {
+            "scheduler": "scheduler.0"
+        },
+{% endfor %}
+{% for port in port_names_list %}
+        "{{ port }}|1": {
+            "scheduler": "scheduler.0"
+        },
+{% endfor %}
+{% for port in port_names_list %}
+        "{{ port }}|2": {
+            "scheduler": "scheduler.0"
+        },
+{% endfor %}
+{% for port in port_names_list %}
+        "{{ port }}|5": {
+            "scheduler": "scheduler.0"
+        },
+{% endfor %}
+{% for port in port_names_list %}
+        "{{ port }}|6": {
+            "scheduler": "scheduler.0"
+        }{% if not loop.last %},{% endif %}
+
+{% endfor %}
+    },
     "PORT_QOS_MAP": {
-       "{{ port_names }}": {
+{% for port in port_names_list %}
+       "{{ port }}": {
             "tc_to_pg_map": "AZURE",
             "tc_to_queue_map": "AZURE",
             "dscp_to_tc_map": "AZURE",
-            "pfc_enable": "4,5"
+            "pfc_to_queue_map": "AZURE",
+            "pfc_enable": "3,4"
+        }{% if not loop.last %},{% endif %}
+
+{% endfor %}
+    },
+    "WRED_PROFILE": {
+        "AZURE_LOSSLESS" : {
+            "wred_green_enable"      : "true",
+            "wred_yellow_enable"     : "true",
+            "wred_red_enable"        : "true",
+            "ecn"                    : "ecn_all",
+            "green_max_threshold"    : "2097152",
+            "green_min_threshold"    : "1048576",
+            "yellow_max_threshold"   : "2097152",
+            "yellow_min_threshold"   : "1048576",
+            "red_max_threshold"      : "2097152",
+            "red_min_threshold"      : "1048576",
+            "green_drop_probability" : "5",
+            "yellow_drop_probability": "5",
+            "red_drop_probability"   : "5"
         }
     }
 }
diff --git a/device/celestica/x86_64-cel_midstone-r0/Midstone-200i/sai.profile b/device/celestica/x86_64-cel_midstone-r0/Midstone-200i/sai.profile
index 0769b3063..aba4fc81f 100755
--- a/device/celestica/x86_64-cel_midstone-r0/Midstone-200i/sai.profile
+++ b/device/celestica/x86_64-cel_midstone-r0/Midstone-200i/sai.profile
@@ -1 +1 @@
-SAI_INIT_CONFIG_FILE=/usr/share/sonic/hwsku/inno.config.yaml
+SAI_INIT_CONFIG_FILE=/usr/share/sonic/hwsku/ivm.sai.config.yaml
diff --git a/device/celestica/x86_64-cel_midstone-r0/Midstone-200i_128x100/buffers.json.j2 b/device/celestica/x86_64-cel_midstone-r0/Midstone-200i_128x100/buffers.json.j2
index 8f1571f96..020656fdb 100644
--- a/device/celestica/x86_64-cel_midstone-r0/Midstone-200i_128x100/buffers.json.j2
+++ b/device/celestica/x86_64-cel_midstone-r0/Midstone-200i_128x100/buffers.json.j2
@@ -1,6 +1,5 @@
 {# Default values which will be used if no actual configura available #}
-{% set default_cable = '300m' %}
-{% set default_ports_num = 128 -%}
+{% set default_cable = '40m' %}
 
 {# Port configuration to cable length look-up table #}
 {# Each record describes mapping of DUT (DUT port) role and neighbor role to cable length #}
@@ -12,44 +11,53 @@
         }
 %}
 
-{%- macro cable_length(port_name) -%}
-    {%- set cable_len = [] -%}
-    {%- for local_port in DEVICE_NEIGHBOR -%}
-        {%- if local_port == port_name -%}
-            {%- if DEVICE_NEIGHBOR_METADATA[DEVICE_NEIGHBOR[local_port].name] -%}
-                {%- set neighbor = DEVICE_NEIGHBOR_METADATA[DEVICE_NEIGHBOR[local_port].name] -%}
-                {%- set neighbor_role = neighbor.type -%}
+{%- macro cable_length(port_name) %}
+    {%- set cable_len = [] %}
+    {%- for local_port in DEVICE_NEIGHBOR %}
+        {%- if local_port == port_name %}
+            {%- if DEVICE_NEIGHBOR_METADATA is defined and DEVICE_NEIGHBOR_METADATA[DEVICE_NEIGHBOR[local_port].name] %}
+                {%- set neighbor = DEVICE_NEIGHBOR_METADATA[DEVICE_NEIGHBOR[local_port].name] %}
+                {%- set neighbor_role = neighbor.type %}
                 {%- set roles1 = switch_role + '_' + neighbor_role %}
-                {%- set roles2 = neighbor_role + '_' + switch_role -%}
-                {%- set roles1 = roles1 | lower -%}
-                {%- set roles2 = roles2 | lower -%}
-                {%- if roles1 in ports2cable -%}
-                    {%- if cable_len.append(ports2cable[roles1]) -%}{%- endif -%}
-                {%- elif roles2 in ports2cable -%}
-                    {%- if cable_len.append(ports2cable[roles2]) -%}{%- endif -%}
-                {%- endif -%}
-            {%- endif -%}
-        {%- endif -%}
-    {%- endfor -%}
+                {%- set roles2 = neighbor_role + '_' + switch_role %}
+                {%- set roles1 = roles1 | lower %}
+                {%- set roles2 = roles2 | lower %}
+                {%- if roles1 in ports2cable %}
+                    {%- if cable_len.append(ports2cable[roles1]) %}{% endif %}
+                {%- elif roles2 in ports2cable %}
+                    {%- if cable_len.append(ports2cable[roles2]) %}{% endif %}
+                {%- endif %}
+            {%- endif %}
+        {%- endif %}
+    {%- endfor %}
     {%- if cable_len -%}
         {{ cable_len.0 }}
-    {%- else -%}
-        {{ default_cable }}
-    {%- endif -%}
-{% endmacro %}
+    {%- else %}
+        {%- if switch_role.lower() == 'torrouter' %}
+            {%- for local_port in VLAN_MEMBER %}
+                {%- if local_port[1] == port_name %}
+                    {%- set roles3 = switch_role + '_' + 'server' %}
+                    {%- set roles3 = roles3 | lower %}
+                    {%- if roles3 in ports2cable %}
+                        {%- if cable_len.append(ports2cable[roles3]) %}{% endif %}
+                    {%- endif %}
+                {%- endif %}
+            {%- endfor %}
+            {%- if cable_len -%}
+                {{ cable_len.0 }}
+            {%- else -%}
+                {{ default_cable }}
+            {%- endif %}
+        {%- else -%}
+            {{ default_cable }}
+        {%- endif %}
+    {%- endif %}
+{%- endmacro %}
 
 {%- if DEVICE_METADATA is defined %}
 {%- set switch_role = DEVICE_METADATA['localhost']['type'] %}
 {%- endif -%}
 
-{# Generate list of ports if not defined #}
-{% if PORT is not defined %}
-    {% set PORT = [] %}
-    {% for port_idx in range(0,default_ports_num) %}
-        {% if PORT.append("Ethernet%d" % (port_idx*2)) %}{% endif %}
-    {% endfor %}
-{% endif -%}
-
 {% set port_names_list = [] %}
 {% for port in PORT %}
     {%- if port_names_list.append(port) %}{% endif %}
@@ -57,64 +65,98 @@
 {% set port_names = port_names_list | join(',') -%}
 
 {
+    "CABLE_LENGTH": {
+        "AZURE": {
+    {% for port in PORT %}
+        {% set cable = cable_length(port) -%}
+        "{{ port }}": "{{ cable }}"{%- if not loop.last -%},{% endif %}
+
+    {% endfor %}
+    }
+    },
     "BUFFER_POOL": {
         "ingress_lossless_pool": {
-            "size": "47218432",
+            "size": "51691264",
             "type": "ingress",
             "mode": "dynamic",
             "xoff": "17708800"
         },
-        "egress_lossy_pool": {
+        "lossy_pool": {
             "size": "18874368",
             "type": "egress",
             "mode": "dynamic",
             "xoff": "0"
+        },
+        "egress_lossless_pool": {
+            "size": "70565632",
+            "type": "egress",
+            "mode": "static"
         }
     },
     "BUFFER_PROFILE": {
         "ingress_lossless_profile": {
             "pool":"ingress_lossless_pool",
-            "xoff":"1433600",
+            "xoff":"38816",
             "size":"1518",
-            "dynamic_th":"-4",
-            "xon_offset":"6272"
+            "dynamic_th":"1",
+            "xon_offset":"9408"
         },
-        "ingress_lossy_profile": {
+        "egress_lossless_profile": {
             "pool":"ingress_lossless_pool",
             "size":"0",
-            "static_th":"9721600"
+            "static_th":"10243072"
         },
-        "egress_lossless_profile": {
-            "pool":"egress_lossy_pool",
+        "ingress_lossy_profile": {
+            "pool":"lossy_pool",
             "size":"0",
-            "static_th":"9721600"
+            "static_th":"10243072"
         },
         "egress_lossy_profile": {
-            "pool":"egress_lossy_pool",
+            "pool":"lossy_pool",
             "size":"1518",
-            "dynamic_th":"3"
+            "dynamic_th":"2"
         }
     },
     "BUFFER_PG": {
-        "{{ port_names }}|0-3": {
-            "profile" : "egress_lossless_profile"
-        },
-        "{{ port_names }}|4-5": {
-            "profile" : "ingress_lossless_profile"
-        },
-        "{{ port_names }}|6-7": {
-            "profile" : "egress_lossless_profile"
-        }
+{% for port in port_names_list %}
+                "{{ port }}|3-4": {
+                     "profile" : "ingress_lossless_profile"
+                },
+{% endfor %}
+{% for port in port_names_list %}
+                "{{ port }}|0": {
+                    "profile" : "ingress_lossy_profile"
+                },
+{% endfor %}
+{% for port in port_names_list %}
+                "{{ port }}|1-2": {
+                    "profile" : "ingress_lossy_profile"
+                },
+{% endfor %}
+{% for port in port_names_list %}
+                "{{ port }}|5-7": {
+                    "profile" : "ingress_lossy_profile"
+                }{% if not loop.last %},{% endif %}
+
+{% endfor %}
     },
+
     "BUFFER_QUEUE": {
-        "{{ port_names }}|4-5": {
-            "profile" : "ingress_lossy_profile"
+{% for port in port_names_list %}
+        "{{ port }}|3-4": {
+             "profile" : "egress_lossless_profile"
         },
-        "{{ port_names }}|0-3": {
+{% endfor %}
+{% for port in port_names_list %}
+        "{{ port }}|0-2": {
             "profile" : "egress_lossy_profile"
         },
-        "{{ port_names }}|6-7": {
+{% endfor %}
+{% for port in port_names_list %}
+        "{{ port }}|5-7": {
             "profile" : "egress_lossy_profile"
-        }
+        }{% if not loop.last %},{% endif %}
+
+{% endfor %}
     }
 }
diff --git a/device/celestica/x86_64-cel_midstone-r0/Midstone-200i_128x100/config_128x100G_midstone200i.yaml b/device/celestica/x86_64-cel_midstone-r0/Midstone-200i_128x100/config_128x100G_midstone200i.yaml
index 342d223a9..9011751a4 100644
--- a/device/celestica/x86_64-cel_midstone-r0/Midstone-200i_128x100/config_128x100G_midstone200i.yaml
+++ b/device/celestica/x86_64-cel_midstone-r0/Midstone-200i_128x100/config_128x100G_midstone200i.yaml
@@ -4,12 +4,17 @@ ifcs:
 nodes:
 - node_id: "0"
   options:
+    sd_low_power_mode_global_default: "true"
     sku: "configs/sku/innovium.77700_B"
     netdev:
     - auto_create: "no"
       multi_interface: "yes"
     buffer_management_mode: "api_driven"
+    wred_cr_ip_proto_list: "17"
+    cr_assignment_mode: "1"
     max_lossless_tc: "2"
+    ilpm_enable: "1"
+    forward_profile: "IFCS_FORWARD_PROFILE_ID_PROFILE_E"
     txring:
     - txring_id: "0"
       desc_count: "1024"
@@ -951,20 +956,6 @@ nodes:
     speed: "100G"
     sysport: "3"
     type: "eth"
-  - fec: "NONE"
-    id: "257"
-    lanes: "0:1"
-    serdes_group: "32"
-    speed: "10G"
-    sysport: "257"
-    type: "mgmt 0"
-  - fec: "NONE"
-    id: "258"
-    lanes: "1:1"
-    serdes_group: "32"
-    speed: "10G"
-    sysport: "258"
-    type: "mgmt 1"
   isg:
   - id: "0"
     lane_swap: "01234567"
diff --git a/device/celestica/x86_64-cel_midstone-r0/Midstone-200i_128x100/innovium.77700_B b/device/celestica/x86_64-cel_midstone-r0/Midstone-200i_128x100/innovium.77700_B
index 27297b313..57ba52cbc 100644
--- a/device/celestica/x86_64-cel_midstone-r0/Midstone-200i_128x100/innovium.77700_B
+++ b/device/celestica/x86_64-cel_midstone-r0/Midstone-200i_128x100/innovium.77700_B
@@ -5,6 +5,7 @@ device_id:         0x1b58
 # Hardware constraint information
 hardware:
         num_ibs:           6
+        ib_active:         0,1,2,3,4,5
 
         ports_per_ib:      32, 32, 32, 32, 20, 20
         recirc_port_num:   32, 32, 32, 32, 32, 32
diff --git a/device/celestica/x86_64-cel_midstone-r0/Midstone-200i_128x100/port_config.ini b/device/celestica/x86_64-cel_midstone-r0/Midstone-200i_128x100/port_config.ini
index 9366905c4..512edc536 100644
--- a/device/celestica/x86_64-cel_midstone-r0/Midstone-200i_128x100/port_config.ini
+++ b/device/celestica/x86_64-cel_midstone-r0/Midstone-200i_128x100/port_config.ini
@@ -1,131 +1,129 @@
-# name              lanes           speed       index   mtu  
-Ethernet0           249,250         100000      0       9126
-Ethernet2           251,252         100000      0       9126
-Ethernet4           253,254         100000      1       9126
-Ethernet6           255,256         100000      1       9126
-Ethernet8           245,246         100000      2       9126
-Ethernet10          247,248         100000      2       9126
-Ethernet12          241,242         100000      3       9126
-Ethernet14          243,244         100000      3       9126
-Ethernet16          233,234         100000      4       9126
-Ethernet18          235,236         100000      4       9126
-Ethernet20          237,238         100000      5       9126
-Ethernet22          239,240         100000      5       9126
-Ethernet24          229,230         100000      6       9126
-Ethernet26          231,232         100000      6       9126
-Ethernet28          225,226         100000      7       9126
-Ethernet30          227,228         100000      7       9126
-Ethernet32          217,218         100000      8       9126
-Ethernet34          219,220         100000      8       9126
-Ethernet36          221,222         100000      9       9126
-Ethernet38          223,224         100000      9       9126
-Ethernet40          213,214         100000      10      9126
-Ethernet42          215,216         100000      10      9126
-Ethernet44          209,210         100000      11      9126
-Ethernet46          211,212         100000      11      9126
-Ethernet48          201,202         100000      12      9126
-Ethernet50          203,204         100000      12      9126
-Ethernet52          205,206         100000      13      9126
-Ethernet54          207,208         100000      13      9126
-Ethernet56          197,198         100000      14      9126
-Ethernet58          199,200         100000      14      9126
-Ethernet60          193,194         100000      15      9126
-Ethernet62          195,196         100000      15      9126
-Ethernet64          185,186         100000      16      9126
-Ethernet66          187,188         100000      16      9126
-Ethernet68          189,190         100000      17      9126
-Ethernet70          191,192         100000      17      9126
-Ethernet72          181,182         100000      18      9126
-Ethernet74          183,184         100000      18      9126
-Ethernet76          177,178         100000      19      9126
-Ethernet78          179,180         100000      19      9126
-Ethernet80          169,170         100000      20      9126
-Ethernet82          171,172         100000      20      9126
-Ethernet84          173,174         100000      21      9126
-Ethernet86          175,176         100000      21      9126
-Ethernet88          165,166         100000      22      9126
-Ethernet90          167,168         100000      22      9126
-Ethernet92          161,162         100000      23      9126
-Ethernet94          163,164         100000      23      9126
-Ethernet96          153,154         100000      24      9126
-Ethernet98          155,156         100000      24      9126
-Ethernet100         157,158         100000      25      9126
-Ethernet102         159,160         100000      25      9126
-Ethernet104         149,150         100000      26      9126
-Ethernet106         151,152         100000      26      9126
-Ethernet108         145,146         100000      27      9126
-Ethernet110         147,148         100000      27      9126
-Ethernet112         137,138         100000      28      9126
-Ethernet114         139,140         100000      28      9126
-Ethernet116         141,142         100000      29      9126
-Ethernet118         143,144         100000      29      9126
-Ethernet120         133,134         100000      30      9126
-Ethernet122         135,136         100000      30      9126
-Ethernet124         129,130         100000      31      9126
-Ethernet126         131,132         100000      31      9126
-Ethernet128         121,122         100000      32      9126
-Ethernet130         123,124         100000      32      9126
-Ethernet132         125,126         100000      33      9126
-Ethernet134         127,128         100000      33      9126
-Ethernet136         117,118         100000      34      9126
-Ethernet138         119,120         100000      34      9126
-Ethernet140         113,114         100000      35      9126
-Ethernet142         115,116         100000      35      9126
-Ethernet144         105,106         100000      36      9126
-Ethernet146         107,108         100000      36      9126
-Ethernet148         109,110         100000      37      9126
-Ethernet150         111,112         100000      37      9126
-Ethernet152         101,102         100000      38      9126
-Ethernet154         103,104         100000      38      9126
-Ethernet156         97,98           100000      39      9126
-Ethernet158         99,100          100000      39      9126
-Ethernet160         89,90           100000      40      9126
-Ethernet162         91,92           100000      40      9126
-Ethernet164         93,94           100000      41      9126
-Ethernet166         95,96           100000      41      9126
-Ethernet168         85,86           100000      42      9126
-Ethernet170         87,88           100000      42      9126
-Ethernet172         81,82           100000      43      9126
-Ethernet174         83,84           100000      43      9126
-Ethernet176         73,74           100000      44      9126
-Ethernet178         75,76           100000      44      9126
-Ethernet180         77,78           100000      45      9126
-Ethernet182         79,80           100000      45      9126
-Ethernet184         69,70           100000      46      9126
-Ethernet186         71,72           100000      46      9126
-Ethernet188         65,66           100000      47      9126
-Ethernet190         67,68           100000      47      9126
-Ethernet192         57,58           100000      48      9126
-Ethernet194         59,60           100000      48      9126
-Ethernet196         61,62           100000      49      9126
-Ethernet198         63,64           100000      49      9126
-Ethernet200         53,54           100000      50      9126
-Ethernet202         55,56           100000      50      9126
-Ethernet204         49,50           100000      51      9126
-Ethernet206         51,52           100000      51      9126
-Ethernet208         41,42           100000      52      9126
-Ethernet210         43,44           100000      52      9126
-Ethernet212         45,46           100000      53      9126
-Ethernet214         47,48           100000      53      9126
-Ethernet216         37,38           100000      54      9126
-Ethernet218         39,40           100000      54      9126
-Ethernet220         33,34           100000      55      9126
-Ethernet222         35,36           100000      55      9126
-Ethernet224         25,26           100000      56      9126
-Ethernet226         27,28           100000      56      9126
-Ethernet228         29,30           100000      57      9126
-Ethernet230         31,32           100000      57      9126
-Ethernet232         21,22           100000      58      9126
-Ethernet234         23,24           100000      58      9126
-Ethernet236         17,18           100000      59      9126
-Ethernet238         19,20           100000      59      9126
-Ethernet240         9,10            100000      60      9126
-Ethernet242         11,12           100000      60      9126
-Ethernet244         13,14           100000      61      9126
-Ethernet246         15,16           100000      61      9126
-Ethernet248         5,6             100000      62      9126
-Ethernet250         7,8             100000      62      9126
-Ethernet252         1,2             100000      63      9126
-Ethernet254         3,4             100000      63      9126
-Ethernet256         257              10000      64      9126
-Ethernet257         258              10000      65      9126
+# name              lanes       alias       speed       index   mtu  
+Ethernet0           249,250     Eth1/1      100000      0       9126
+Ethernet2           251,252     Eth1/2      100000      0       9126
+Ethernet4           253,254     Eth2/1      100000      1       9126
+Ethernet6           255,256     Eth2/2      100000      1       9126
+Ethernet8           245,246     Eth3/1      100000      2       9126
+Ethernet10          247,248     Eth3/2      100000      2       9126
+Ethernet12          241,242     Eth4/1      100000      3       9126
+Ethernet14          243,244     Eth4/2      100000      3       9126
+Ethernet16          233,234     Eth5/1      100000      4       9126
+Ethernet18          235,236     Eth5/2      100000      4       9126
+Ethernet20          237,238     Eth6/1      100000      5       9126
+Ethernet22          239,240     Eth6/2      100000      5       9126
+Ethernet24          229,230     Eth7/1      100000      6       9126
+Ethernet26          231,232     Eth7/2      100000      6       9126
+Ethernet28          225,226     Eth8/1      100000      7       9126
+Ethernet30          227,228     Eth8/2      100000      7       9126
+Ethernet32          217,218     Eth9/1      100000      8       9126
+Ethernet34          219,220     Eth9/2      100000      8       9126
+Ethernet36          221,222     Eth10/1     100000      9       9126
+Ethernet38          223,224     Eth10/2     100000      9       9126
+Ethernet40          213,214     Eth11/1     100000      10      9126
+Ethernet42          215,216     Eth11/2     100000      10      9126
+Ethernet44          209,210     Eth12/1     100000      11      9126
+Ethernet46          211,212     Eth12/2     100000      11      9126
+Ethernet48          201,202     Eth13/1     100000      12      9126
+Ethernet50          203,204     Eth13/2     100000      12      9126
+Ethernet52          205,206     Eth14/1     100000      13      9126
+Ethernet54          207,208     Eth14/2     100000      13      9126
+Ethernet56          197,198     Eth15/1     100000      14      9126
+Ethernet58          199,200     Eth15/2     100000      14      9126
+Ethernet60          193,194     Eth16/1     100000      15      9126
+Ethernet62          195,196     Eth16/2     100000      15      9126
+Ethernet64          185,186     Eth17/1     100000      16      9126
+Ethernet66          187,188     Eth17/2     100000      16      9126
+Ethernet68          189,190     Eth18/1     100000      17      9126
+Ethernet70          191,192     Eth18/2     100000      17      9126
+Ethernet72          181,182     Eth19/1     100000      18      9126
+Ethernet74          183,184     Eth19/2     100000      18      9126
+Ethernet76          177,178     Eth20/1     100000      19      9126
+Ethernet78          179,180     Eth20/2     100000      19      9126
+Ethernet80          169,170     Eth21/1     100000      20      9126
+Ethernet82          171,172     Eth21/2     100000      20      9126
+Ethernet84          173,174     Eth22/1     100000      21      9126
+Ethernet86          175,176     Eth22/2     100000      21      9126
+Ethernet88          165,166     Eth23/1     100000      22      9126
+Ethernet90          167,168     Eth23/2     100000      22      9126
+Ethernet92          161,162     Eth24/1     100000      23      9126
+Ethernet94          163,164     Eth24/2     100000      23      9126
+Ethernet96          153,154     Eth25/1     100000      24      9126
+Ethernet98          155,156     Eth25/2     100000      24      9126
+Ethernet100         157,158     Eth26/1     100000      25      9126
+Ethernet102         159,160     Eth26/2     100000      25      9126
+Ethernet104         149,150     Eth27/1     100000      26      9126
+Ethernet106         151,152     Eth27/2     100000      26      9126
+Ethernet108         145,146     Eth28/1     100000      27      9126
+Ethernet110         147,148     Eth28/2     100000      27      9126
+Ethernet112         137,138     Eth29/1     100000      28      9126
+Ethernet114         139,140     Eth29/2     100000      28      9126
+Ethernet116         141,142     Eth30/1     100000      29      9126
+Ethernet118         143,144     Eth30/2     100000      29      9126
+Ethernet120         133,134     Eth31/1     100000      30      9126
+Ethernet122         135,136     Eth31/2     100000      30      9126
+Ethernet124         129,130     Eth32/1     100000      31      9126
+Ethernet126         131,132     Eth32/2     100000      31      9126
+Ethernet128         121,122     Eth33/1     100000      32      9126
+Ethernet130         123,124     Eth33/2     100000      32      9126
+Ethernet132         125,126     Eth34/1     100000      33      9126
+Ethernet134         127,128     Eth34/2     100000      33      9126
+Ethernet136         117,118     Eth35/1     100000      34      9126
+Ethernet138         119,120     Eth35/2     100000      34      9126
+Ethernet140         113,114     Eth36/1     100000      35      9126
+Ethernet142         115,116     Eth36/2     100000      35      9126
+Ethernet144         105,106     Eth37/1     100000      36      9126
+Ethernet146         107,108     Eth37/2     100000      36      9126
+Ethernet148         109,110     Eth38/1     100000      37      9126
+Ethernet150         111,112     Eth38/2     100000      37      9126
+Ethernet152         101,102     Eth39/1     100000      38      9126
+Ethernet154         103,104     Eth39/2     100000      38      9126
+Ethernet156         97,98       Eth40/1     100000      39      9126
+Ethernet158         99,100      Eth40/2     100000      39      9126
+Ethernet160         89,90       Eth41/1     100000      40      9126
+Ethernet162         91,92       Eth41/2     100000      40      9126
+Ethernet164         93,94       Eth42/1     100000      41      9126
+Ethernet166         95,96       Eth42/2     100000      41      9126
+Ethernet168         85,86       Eth43/1     100000      42      9126
+Ethernet170         87,88       Eth43/2     100000      42      9126
+Ethernet172         81,82       Eth44/1     100000      43      9126
+Ethernet174         83,84       Eth44/2     100000      43      9126
+Ethernet176         73,74       Eth45/1     100000      44      9126
+Ethernet178         75,76       Eth45/2     100000      44      9126
+Ethernet180         77,78       Eth46/1     100000      45      9126
+Ethernet182         79,80       Eth46/2     100000      45      9126
+Ethernet184         69,70       Eth47/1     100000      46      9126
+Ethernet186         71,72       Eth47/2     100000      46      9126
+Ethernet188         65,66       Eth48/1     100000      47      9126
+Ethernet190         67,68       Eth48/2     100000      47      9126
+Ethernet192         57,58       Eth49/1     100000      48      9126
+Ethernet194         59,60       Eth49/2     100000      48      9126
+Ethernet196         61,62       Eth50/1     100000      49      9126
+Ethernet198         63,64       Eth50/2     100000      49      9126
+Ethernet200         53,54       Eth51/1     100000      50      9126
+Ethernet202         55,56       Eth51/2     100000      50      9126
+Ethernet204         49,50       Eth52/1     100000      51      9126
+Ethernet206         51,52       Eth52/2     100000      51      9126
+Ethernet208         41,42       Eth53/1     100000      52      9126
+Ethernet210         43,44       Eth53/2     100000      52      9126
+Ethernet212         45,46       Eth54/1     100000      53      9126
+Ethernet214         47,48       Eth54/2     100000      53      9126
+Ethernet216         37,38       Eth55/1     100000      54      9126
+Ethernet218         39,40       Eth55/2     100000      54      9126
+Ethernet220         33,34       Eth56/1     100000      55      9126
+Ethernet222         35,36       Eth56/2     100000      55      9126
+Ethernet224         25,26       Eth57/1     100000      56      9126
+Ethernet226         27,28       Eth57/2     100000      56      9126
+Ethernet228         29,30       Eth58/1     100000      57      9126
+Ethernet230         31,32       Eth58/2     100000      57      9126
+Ethernet232         21,22       Eth59/1     100000      58      9126
+Ethernet234         23,24       Eth59/2     100000      58      9126
+Ethernet236         17,18       Eth60/1     100000      59      9126
+Ethernet238         19,20       Eth60/2     100000      59      9126
+Ethernet240         9,10        Eth61/1     100000      60      9126
+Ethernet242         11,12       Eth61/2     100000      60      9126
+Ethernet244         13,14       Eth62/1     100000      61      9126
+Ethernet246         15,16       Eth62/2     100000      61      9126
+Ethernet248         5,6         Eth63/1     100000      62      9126
+Ethernet250         7,8         Eth63/2     100000      62      9126
+Ethernet252         1,2         Eth64/1     100000      63      9126
+Ethernet254         3,4         Eth64/2     100000      63      9126
diff --git a/device/celestica/x86_64-cel_midstone-r0/Midstone-200i_128x100/qos.json.j2 b/device/celestica/x86_64-cel_midstone-r0/Midstone-200i_128x100/qos.json.j2
index 05c6368f6..0f1ecd110 100755
--- a/device/celestica/x86_64-cel_midstone-r0/Midstone-200i_128x100/qos.json.j2
+++ b/device/celestica/x86_64-cel_midstone-r0/Midstone-200i_128x100/qos.json.j2
@@ -1,14 +1,3 @@
-{# Default values which will be used if no actual configura available #}
-
-{% set default_ports_num = 128 -%}
-{# Generate list of ports if not defined #}
-{% if PORT is not defined %}
-    {% set PORT = [] %}
-    {% for port_idx in range(0,default_ports_num) %}
-        {% if PORT.append("Ethernet%d" % (port_idx*2)) %}{% endif %}
-    {% endfor %}
-{% endif -%}
-
 {% set port_names_list = [] %}
 {% for port in PORT %}
     {%- if port_names_list.append(port) %}{% endif %}
@@ -19,102 +8,185 @@
 {
    "TC_TO_QUEUE_MAP":{
         "AZURE":{
-            "1":"1",
             "0":"0",
-            "3":"3",
+            "1":"1",
             "2":"2",
-            "5":"5",
+            "3":"3",
             "4":"4",
-            "7":"7",
-            "6":"6"
+            "5":"5",
+            "6":"6",
+            "7":"7"
+        }
+    },
+    "MAP_PFC_PRIORITY_TO_QUEUE": {
+        "AZURE": {
+            "0": "0",
+            "1": "1",
+            "2": "2",
+            "3": "3",
+            "4": "4",
+            "5": "5",
+            "6": "6",
+            "7": "7"
         }
     },
     "TC_TO_PRIORITY_GROUP_MAP": {
     "AZURE": {
-        "1": "0",
         "0": "0",
-        "3": "0",
+        "1": "0",
         "2": "0",
-        "4": "1",
-        "5": "2",
+        "3": "3",
+        "4": "4",
+        "5": "0",
         "6": "0",
         "7": "0"
     }
     },
        "DSCP_TO_TC_MAP": {
         "AZURE": {
-            "0":"0",
-            "1":"0",
-            "2":"0",
-            "3":"0",
-            "4":"4",
-            "5":"5",
-            "6":"0",
-            "7":"0",
-            "8":"1",
-            "9":"0",
-            "10":"0",
-            "11":"0",
-            "12":"0",
-            "13":"0",
-            "14":"0",
-            "15":"0",
-            "16":"0",
-            "17":"0",
-            "18":"0",
-            "19":"0",
-            "20":"0",
-            "21":"0",
-            "22":"0",
-            "23":"0",
-            "24":"0",
-            "25":"0",
-            "26":"0",
-            "27":"0",
-            "28":"0",
-            "29":"0",
-            "30":"0",
-            "31":"0",
-            "32":"0",
-            "33":"0",
-            "34":"0",
-            "35":"0",
-            "36":"0",
-            "37":"0",
-            "38":"0",
-            "39":"0",
-            "40":"0",
-            "41":"0",
-            "42":"0",
-            "43":"0",
-            "44":"0",
-            "45":"0",
-            "46":"0",
-            "47":"0",
-            "48":"0",
-            "49":"0",
-            "50":"0",
-            "51":"0",
-            "52":"0",
-            "53":"0",
-            "54":"0",
-            "55":"0",
-            "56":"0",
-            "57":"0",
-            "58":"0",
-            "59":"0",
-            "60":"0",
-            "61":"0",
-            "62":"0",
-            "63":"0"
+            "0" : "1",
+            "1" : "1",
+            "2" : "1",
+            "3" : "3",
+            "4" : "4",
+            "5" : "2",
+            "6" : "1",
+            "7" : "1",
+            "8" : "0",
+            "9" : "1",
+            "10": "1",
+            "11": "1",
+            "12": "1",
+            "13": "1",
+            "14": "1",
+            "15": "1",
+            "16": "1",
+            "17": "1",
+            "18": "1",
+            "19": "1",
+            "20": "1",
+            "21": "1",
+            "22": "1",
+            "23": "1",
+            "24": "1",
+            "25": "1",
+            "26": "1",
+            "27": "1",
+            "28": "1",
+            "29": "1",
+            "30": "1",
+            "31": "1",
+            "32": "1",
+            "33": "1",
+            "34": "1",
+            "35": "1",
+            "36": "1",
+            "37": "1",
+            "38": "1",
+            "39": "1",
+            "40": "1",
+            "41": "1",
+            "42": "1",
+            "43": "1",
+            "44": "1",
+            "45": "1",
+            "46": "5",
+            "47": "1",
+            "48": "6",
+            "49": "1",
+            "50": "1",
+            "51": "1",
+            "52": "1",
+            "53": "1",
+            "54": "1",
+            "55": "1",
+            "56": "1",
+            "57": "1",
+            "58": "1",
+            "59": "1",
+            "60": "1",
+            "61": "1",
+            "62": "1",
+            "63": "1"
+        }
+    },
+    "SCHEDULER": {
+        "scheduler.0": {
+            "type"  : "DWRR",
+            "weight": "1"
+        },
+        "scheduler.1": {
+            "type"  : "DWRR",
+            "weight": "1"
         }
     },
+    "QUEUE": {
+{% for port in port_names_list %}
+        "{{ port }}|3": {
+            "scheduler"   : "scheduler.1",
+            "wred_profile"  : "AZURE_LOSSLESS"
+        },
+{% endfor %}
+{% for port in port_names_list %}
+        "{{ port }}|4": {
+            "scheduler"   : "scheduler.1",
+            "wred_profile"  : "AZURE_LOSSLESS"
+        },
+{% endfor %}
+{% for port in port_names_list %}
+        "{{ port }}|0": {
+            "scheduler": "scheduler.0"
+        },
+{% endfor %}
+{% for port in port_names_list %}
+        "{{ port }}|1": {
+            "scheduler": "scheduler.0"
+        },
+{% endfor %}
+{% for port in port_names_list %}
+        "{{ port }}|2": {
+            "scheduler": "scheduler.0"
+        },
+{% endfor %}
+{% for port in port_names_list %}
+        "{{ port }}|5": {
+            "scheduler": "scheduler.0"
+        },
+{% endfor %}
+{% for port in port_names_list %}
+        "{{ port }}|6": {
+            "scheduler": "scheduler.0"
+        }{% if not loop.last %},{% endif %}
+
+{% endfor %}
+    },
     "PORT_QOS_MAP": {
-       "{{ port_names }}": {
-            "tc_to_pg_map": "AZURE", 
+{% for port in port_names_list %}
+       "{{ port }}": {
+            "tc_to_pg_map": "AZURE",
             "tc_to_queue_map": "AZURE",
-            "dscp_to_tc_map": "AZURE", 
-            "pfc_enable": "4,5"
+            "dscp_to_tc_map": "AZURE",
+            "pfc_to_queue_map": "AZURE",
+            "pfc_enable": "3,4"
+        }{% if not loop.last %},{% endif %}
+
+{% endfor %}
+    },
+    "WRED_PROFILE": {
+        "AZURE_LOSSLESS" : {
+            "wred_green_enable"      : "true",
+            "wred_yellow_enable"     : "true",
+            "wred_red_enable"        : "true",
+            "ecn"                    : "ecn_all",
+            "green_max_threshold"    : "2097152",
+            "green_min_threshold"    : "1048576",
+            "yellow_max_threshold"   : "2097152",
+            "yellow_min_threshold"   : "1048576",
+            "red_max_threshold"      : "2097152",
+            "red_min_threshold"      : "1048576",
+            "green_drop_probability" : "5",
+            "yellow_drop_probability": "5",
+            "red_drop_probability"   : "5"
         }
     }
 }
diff --git a/device/celestica/x86_64-cel_midstone-r0/Midstone-200i_128x100/sai.profile b/device/celestica/x86_64-cel_midstone-r0/Midstone-200i_128x100/sai.profile
index 0769b3063..aba4fc81f 100755
--- a/device/celestica/x86_64-cel_midstone-r0/Midstone-200i_128x100/sai.profile
+++ b/device/celestica/x86_64-cel_midstone-r0/Midstone-200i_128x100/sai.profile
@@ -1 +1 @@
-SAI_INIT_CONFIG_FILE=/usr/share/sonic/hwsku/inno.config.yaml
+SAI_INIT_CONFIG_FILE=/usr/share/sonic/hwsku/ivm.sai.config.yaml
diff --git a/device/celestica/x86_64-cel_midstone-r0/Midstone-200i_32x400/buffers.json.j2 b/device/celestica/x86_64-cel_midstone-r0/Midstone-200i_32x400/buffers.json.j2
index 9891789c3..020656fdb 100644
--- a/device/celestica/x86_64-cel_midstone-r0/Midstone-200i_32x400/buffers.json.j2
+++ b/device/celestica/x86_64-cel_midstone-r0/Midstone-200i_32x400/buffers.json.j2
@@ -1,6 +1,5 @@
 {# Default values which will be used if no actual configura available #}
-{% set default_cable = '300m' %}
-{% set default_ports_num = 32 -%}
+{% set default_cable = '40m' %}
 
 {# Port configuration to cable length look-up table #}
 {# Each record describes mapping of DUT (DUT port) role and neighbor role to cable length #}
@@ -12,44 +11,53 @@
         }
 %}
 
-{%- macro cable_length(port_name) -%}
-    {%- set cable_len = [] -%}
-    {%- for local_port in DEVICE_NEIGHBOR -%}
-        {%- if local_port == port_name -%}
-            {%- if DEVICE_NEIGHBOR_METADATA[DEVICE_NEIGHBOR[local_port].name] -%}
-                {%- set neighbor = DEVICE_NEIGHBOR_METADATA[DEVICE_NEIGHBOR[local_port].name] -%}
-                {%- set neighbor_role = neighbor.type -%}
+{%- macro cable_length(port_name) %}
+    {%- set cable_len = [] %}
+    {%- for local_port in DEVICE_NEIGHBOR %}
+        {%- if local_port == port_name %}
+            {%- if DEVICE_NEIGHBOR_METADATA is defined and DEVICE_NEIGHBOR_METADATA[DEVICE_NEIGHBOR[local_port].name] %}
+                {%- set neighbor = DEVICE_NEIGHBOR_METADATA[DEVICE_NEIGHBOR[local_port].name] %}
+                {%- set neighbor_role = neighbor.type %}
                 {%- set roles1 = switch_role + '_' + neighbor_role %}
-                {%- set roles2 = neighbor_role + '_' + switch_role -%}
-                {%- set roles1 = roles1 | lower -%}
-                {%- set roles2 = roles2 | lower -%}
-                {%- if roles1 in ports2cable -%}
-                    {%- if cable_len.append(ports2cable[roles1]) -%}{%- endif -%}
-                {%- elif roles2 in ports2cable -%}
-                    {%- if cable_len.append(ports2cable[roles2]) -%}{%- endif -%}
-                {%- endif -%}
-            {%- endif -%}
-        {%- endif -%}
-    {%- endfor -%}
+                {%- set roles2 = neighbor_role + '_' + switch_role %}
+                {%- set roles1 = roles1 | lower %}
+                {%- set roles2 = roles2 | lower %}
+                {%- if roles1 in ports2cable %}
+                    {%- if cable_len.append(ports2cable[roles1]) %}{% endif %}
+                {%- elif roles2 in ports2cable %}
+                    {%- if cable_len.append(ports2cable[roles2]) %}{% endif %}
+                {%- endif %}
+            {%- endif %}
+        {%- endif %}
+    {%- endfor %}
     {%- if cable_len -%}
         {{ cable_len.0 }}
-    {%- else -%}
-        {{ default_cable }}
-    {%- endif -%}
-{% endmacro %}
+    {%- else %}
+        {%- if switch_role.lower() == 'torrouter' %}
+            {%- for local_port in VLAN_MEMBER %}
+                {%- if local_port[1] == port_name %}
+                    {%- set roles3 = switch_role + '_' + 'server' %}
+                    {%- set roles3 = roles3 | lower %}
+                    {%- if roles3 in ports2cable %}
+                        {%- if cable_len.append(ports2cable[roles3]) %}{% endif %}
+                    {%- endif %}
+                {%- endif %}
+            {%- endfor %}
+            {%- if cable_len -%}
+                {{ cable_len.0 }}
+            {%- else -%}
+                {{ default_cable }}
+            {%- endif %}
+        {%- else -%}
+            {{ default_cable }}
+        {%- endif %}
+    {%- endif %}
+{%- endmacro %}
 
 {%- if DEVICE_METADATA is defined %}
 {%- set switch_role = DEVICE_METADATA['localhost']['type'] %}
 {%- endif -%}
 
-{# Generate list of ports if not defined #}
-{% if PORT is not defined %}
-    {% set PORT = [] %}
-    {% for port_idx in range(0,default_ports_num) %}
-        {% if PORT.append("Ethernet%d" % (port_idx*4)) %}{% endif %}
-    {% endfor %}
-{% endif -%}
-
 {% set port_names_list = [] %}
 {% for port in PORT %}
     {%- if port_names_list.append(port) %}{% endif %}
@@ -57,64 +65,98 @@
 {% set port_names = port_names_list | join(',') -%}
 
 {
+    "CABLE_LENGTH": {
+        "AZURE": {
+    {% for port in PORT %}
+        {% set cable = cable_length(port) -%}
+        "{{ port }}": "{{ cable }}"{%- if not loop.last -%},{% endif %}
+
+    {% endfor %}
+    }
+    },
     "BUFFER_POOL": {
         "ingress_lossless_pool": {
-            "size": "47218432",
+            "size": "51691264",
             "type": "ingress",
             "mode": "dynamic",
             "xoff": "17708800"
         },
-        "egress_lossy_pool": {
+        "lossy_pool": {
             "size": "18874368",
             "type": "egress",
             "mode": "dynamic",
             "xoff": "0"
+        },
+        "egress_lossless_pool": {
+            "size": "70565632",
+            "type": "egress",
+            "mode": "static"
         }
     },
     "BUFFER_PROFILE": {
         "ingress_lossless_profile": {
             "pool":"ingress_lossless_pool",
-            "xoff":"1433600",
+            "xoff":"38816",
             "size":"1518",
-            "dynamic_th":"-4",
-            "xon_offset":"6272"
+            "dynamic_th":"1",
+            "xon_offset":"9408"
         },
-        "ingress_lossy_profile": {
+        "egress_lossless_profile": {
             "pool":"ingress_lossless_pool",
             "size":"0",
-            "static_th":"9721600"
+            "static_th":"10243072"
         },
-        "egress_lossless_profile": {
-            "pool":"egress_lossy_pool",
+        "ingress_lossy_profile": {
+            "pool":"lossy_pool",
             "size":"0",
-            "static_th":"9721600"
+            "static_th":"10243072"
         },
         "egress_lossy_profile": {
-            "pool":"egress_lossy_pool",
+            "pool":"lossy_pool",
             "size":"1518",
-            "dynamic_th":"3"
+            "dynamic_th":"2"
         }
     },
     "BUFFER_PG": {
-        "{{ port_names }}|0-3": {
-            "profile" : "egress_lossless_profile"
-        },
-        "{{ port_names }}|4-5": {
-            "profile" : "ingress_lossless_profile"
-        },
-        "{{ port_names }}|6-7": {
-            "profile" : "egress_lossless_profile"
-        }
+{% for port in port_names_list %}
+                "{{ port }}|3-4": {
+                     "profile" : "ingress_lossless_profile"
+                },
+{% endfor %}
+{% for port in port_names_list %}
+                "{{ port }}|0": {
+                    "profile" : "ingress_lossy_profile"
+                },
+{% endfor %}
+{% for port in port_names_list %}
+                "{{ port }}|1-2": {
+                    "profile" : "ingress_lossy_profile"
+                },
+{% endfor %}
+{% for port in port_names_list %}
+                "{{ port }}|5-7": {
+                    "profile" : "ingress_lossy_profile"
+                }{% if not loop.last %},{% endif %}
+
+{% endfor %}
     },
+
     "BUFFER_QUEUE": {
-        "{{ port_names }}|4-5": {
-            "profile" : "ingress_lossy_profile"
+{% for port in port_names_list %}
+        "{{ port }}|3-4": {
+             "profile" : "egress_lossless_profile"
         },
-        "{{ port_names }}|0-3": {
+{% endfor %}
+{% for port in port_names_list %}
+        "{{ port }}|0-2": {
             "profile" : "egress_lossy_profile"
         },
-        "{{ port_names }}|6-7": {
+{% endfor %}
+{% for port in port_names_list %}
+        "{{ port }}|5-7": {
             "profile" : "egress_lossy_profile"
-        }
+        }{% if not loop.last %},{% endif %}
+
+{% endfor %}
     }
 }
diff --git a/device/celestica/x86_64-cel_midstone-r0/Midstone-200i_32x400/config_32x400G_midstone200i.yaml b/device/celestica/x86_64-cel_midstone-r0/Midstone-200i_32x400/config_32x400G_midstone200i.yaml
index 6c387ee17..be26523be 100644
--- a/device/celestica/x86_64-cel_midstone-r0/Midstone-200i_32x400/config_32x400G_midstone200i.yaml
+++ b/device/celestica/x86_64-cel_midstone-r0/Midstone-200i_32x400/config_32x400G_midstone200i.yaml
@@ -4,12 +4,17 @@ ifcs:
 nodes:
 - node_id: "0"
   options:
+    sd_low_power_mode_global_default: "true"
     sku: "configs/sku/innovium.77700_A"
     netdev:
     - auto_create: "no"
       multi_interface: "yes"
     buffer_management_mode: "api_driven"
+    wred_cr_ip_proto_list: "17"
+    cr_assignment_mode: "1"
     max_lossless_tc: "2"
+    ilpm_enable: "1"
+    forward_profile: "IFCS_FORWARD_PROFILE_ID_PROFILE_E"
     txring:
     - txring_id: "0"
       desc_count: "1024"
@@ -280,20 +285,6 @@ nodes:
     speed: "400G"
     sysport: "1"
     type: "eth"
-  - fec: "NONE"
-    id: "257"
-    lanes: "0:1"
-    serdes_group: "32"
-    speed: "10G"
-    sysport: "257"
-    type: "mgmt 0"
-  - fec: "NONE"
-    id: "258"
-    lanes: "1:1"
-    serdes_group: "32"
-    speed: "10G"
-    sysport: "258"
-    type: "mgmt 1"
   isg:
   - id: "0"
     lane_swap: "01234567"
diff --git a/device/celestica/x86_64-cel_midstone-r0/Midstone-200i_32x400/innovium.77700_A b/device/celestica/x86_64-cel_midstone-r0/Midstone-200i_32x400/innovium.77700_A
index 84aa41983..ec1330780 100644
--- a/device/celestica/x86_64-cel_midstone-r0/Midstone-200i_32x400/innovium.77700_A
+++ b/device/celestica/x86_64-cel_midstone-r0/Midstone-200i_32x400/innovium.77700_A
@@ -5,6 +5,7 @@ device_id:         0x1b58
 # Hardware constraint information
 hardware:
         num_ibs:           6
+        ib_active:         0,1,2,3,4,5
 
         ports_per_ib:      32, 32, 32, 32, 20, 20
         recirc_port_num:   32, 32, 32, 32, 32, 32
diff --git a/device/celestica/x86_64-cel_midstone-r0/Midstone-200i_32x400/port_config.ini b/device/celestica/x86_64-cel_midstone-r0/Midstone-200i_32x400/port_config.ini
index c8ded273c..28aab327c 100644
--- a/device/celestica/x86_64-cel_midstone-r0/Midstone-200i_32x400/port_config.ini
+++ b/device/celestica/x86_64-cel_midstone-r0/Midstone-200i_32x400/port_config.ini
@@ -1,35 +1,33 @@
-# name              lanes                   speed       index   mtu      fec
-Ethernet0           249,250,251,252         400000      0       9126     rs
-Ethernet8           241,242,243,244         400000      2       9126     rs
-Ethernet16          233,234,235,236         400000      4       9126     rs
-Ethernet24          225,226,227,228         400000      6       9126     rs
-Ethernet32          217,218,219,220         400000      8       9126     rs
-Ethernet40          209,210,211,212         400000      10      9126     rs
-Ethernet48          201,202,203,204         400000      12      9126     rs
-Ethernet56          193,194,195,196         400000      14      9126     rs
-Ethernet64          185,186,187,188         400000      16      9126     rs
-Ethernet72          177,178,179,180         400000      18      9126     rs
-Ethernet80          169,170,171,172         400000      20      9126     rs
-Ethernet88          161,162,163,164         400000      22      9126     rs
-Ethernet96          153,154,155,156         400000      24      9126     rs
-Ethernet104         145,146,147,148         400000      26      9126     rs
-Ethernet112         137,138,139,140         400000      28      9126     rs
-Ethernet120         129,130,131,132         400000      30      9126     rs
-Ethernet128         121,122,123,124         400000      32      9126     rs
-Ethernet136         113,114,115,116         400000      34      9126     rs
-Ethernet144         105,106,107,108         400000      36      9126     rs
-Ethernet152         97,98,99,100            400000      38      9126     rs
-Ethernet160         89,90,91,92             400000      40      9126     rs
-Ethernet168         81,82,83,84             400000      42      9126     rs
-Ethernet176         73,74,75,76             400000      44      9126     rs
-Ethernet184         65,66,67,68             400000      46      9126     rs
-Ethernet192         57,58,59,60             400000      48      9126     rs
-Ethernet200         49,50,51,52             400000      50      9126     rs
-Ethernet208         41,42,43,44             400000      52      9126     rs
-Ethernet216         33,34,35,36             400000      54      9126     rs
-Ethernet224         25,26,27,28             400000      56      9126     rs
-Ethernet232         17,18,19,20             400000      58      9126     rs
-Ethernet240         9,10,11,12              400000      60      9126     rs
-Ethernet248         1,2,3,4                 400000      62      9126     rs
-Ethernet256         257                     10000       64      9126     none
-Ethernet257         258                     10000       65      9126     none
+# name              lanes                               alias           speed       index   mtu      fec
+Ethernet0           249,250,251,252,253,254,255,256     Ethernet0       400000      0       9126     rs
+Ethernet8           241,242,243,244,245,246,247,248     Ethernet8       400000      2       9126     rs
+Ethernet16          233,234,235,236,237,238,239,240     Ethernet6       400000      4       9126     rs
+Ethernet24          225,226,227,228,229,230,231,232     Ethernet24      400000      6       9126     rs
+Ethernet32          217,218,219,220,221,222,223,224     Ethernet32      400000      8       9126     rs
+Ethernet40          209,210,211,212,213,214,215,216     Ethernet40      400000      10      9126     rs
+Ethernet48          201,202,203,204,205,206,207,208     Ethernet48      400000      12      9126     rs
+Ethernet56          193,194,195,196,197,198,199,200     Ethernet56      400000      14      9126     rs
+Ethernet64          185,186,187,188,189,190,191,192     Ethernet64      400000      16      9126     rs
+Ethernet72          177,178,179,180,181,182,183,184     Ethernet72      400000      18      9126     rs
+Ethernet80          169,170,171,172,173,174,175,176     Ethernet80      400000      20      9126     rs
+Ethernet88          161,162,163,164,165,166,167,168     Ethernet88      400000      22      9126     rs
+Ethernet96          153,154,155,156,157,158,159,160     Ethernet96      400000      24      9126     rs
+Ethernet104         145,146,147,148,149,150,151,152     Ethernet104     400000      26      9126     rs
+Ethernet112         137,138,139,140,141,142,143,144     Ethernet112     400000      28      9126     rs
+Ethernet120         129,130,131,132,133,134,135,136     Ethernet120     400000      30      9126     rs
+Ethernet128         121,122,123,124,125,126,127,128     Ethernet128     400000      32      9126     rs
+Ethernet136         113,114,115,116,117,118,119,120     Ethernet136     400000      34      9126     rs
+Ethernet144         105,106,107,108,109,110,111,112     Ethernet144     400000      36      9126     rs
+Ethernet152         97,98,99,100,101,102,103,104        Ethernet152     400000      38      9126     rs
+Ethernet160         89,90,91,92,93,94,95,96             Ethernet160     400000      40      9126     rs
+Ethernet168         81,82,83,84,85,86,87,88             Ethernet168     400000      42      9126     rs
+Ethernet176         73,74,75,76,77,78,79,80             Ethernet176     400000      44      9126     rs
+Ethernet184         65,66,67,68,69,70,71,72             Ethernet184     400000      46      9126     rs
+Ethernet192         57,58,59,60,61,62,63,64             Ethernet192     400000      48      9126     rs
+Ethernet200         49,50,51,52,53,54,55,56             Ethernet200     400000      50      9126     rs
+Ethernet208         41,42,43,44,45,46,47,48             Ethernet208     400000      52      9126     rs
+Ethernet216         33,34,35,36,37,38,39,40             Ethernet216     400000      54      9126     rs
+Ethernet224         25,26,27,28,29,30,31,32             Ethernet224     400000      56      9126     rs
+Ethernet232         17,18,19,20,21,22,23,24             Ethernet232     400000      58      9126     rs
+Ethernet240         9,10,11,12,13,14,15,16              Ethernet240     400000      60      9126     rs
+Ethernet248         1,2,3,4,5,6,7,8                     Ethernet248     400000      62      9126     rs
diff --git a/device/celestica/x86_64-cel_midstone-r0/Midstone-200i_32x400/qos.json.j2 b/device/celestica/x86_64-cel_midstone-r0/Midstone-200i_32x400/qos.json.j2
index 4e029c11e..0f1ecd110 100755
--- a/device/celestica/x86_64-cel_midstone-r0/Midstone-200i_32x400/qos.json.j2
+++ b/device/celestica/x86_64-cel_midstone-r0/Midstone-200i_32x400/qos.json.j2
@@ -1,14 +1,3 @@
-{# Default values which will be used if no actual configura available #}
-
-{% set default_ports_num = 32 -%}
-{# Generate list of ports if not defined #}
-{% if PORT is not defined %}
-    {% set PORT = [] %}
-    {% for port_idx in range(0,default_ports_num) %}
-        {% if PORT.append("Ethernet%d" % (port_idx*4)) %}{% endif %}
-    {% endfor %}
-{% endif -%}
-
 {% set port_names_list = [] %}
 {% for port in PORT %}
     {%- if port_names_list.append(port) %}{% endif %}
@@ -19,102 +8,185 @@
 {
    "TC_TO_QUEUE_MAP":{
         "AZURE":{
-            "1":"1",
             "0":"0",
-            "3":"3",
+            "1":"1",
             "2":"2",
-            "5":"5",
+            "3":"3",
             "4":"4",
-            "7":"7",
-            "6":"6"
+            "5":"5",
+            "6":"6",
+            "7":"7"
+        }
+    },
+    "MAP_PFC_PRIORITY_TO_QUEUE": {
+        "AZURE": {
+            "0": "0",
+            "1": "1",
+            "2": "2",
+            "3": "3",
+            "4": "4",
+            "5": "5",
+            "6": "6",
+            "7": "7"
         }
     },
     "TC_TO_PRIORITY_GROUP_MAP": {
     "AZURE": {
-        "1": "0",
         "0": "0",
-        "3": "0",
+        "1": "0",
         "2": "0",
-        "4": "1",
-        "5": "2",
+        "3": "3",
+        "4": "4",
+        "5": "0",
         "6": "0",
         "7": "0"
     }
     },
        "DSCP_TO_TC_MAP": {
         "AZURE": {
-            "0":"0",
-            "1":"0",
-            "2":"0",
-            "3":"0",
-            "4":"4",
-            "5":"5",
-            "6":"0",
-            "7":"0",
-            "8":"1",
-            "9":"0",
-            "10":"0",
-            "11":"0",
-            "12":"0",
-            "13":"0",
-            "14":"0",
-            "15":"0",
-            "16":"0",
-            "17":"0",
-            "18":"0",
-            "19":"0",
-            "20":"0",
-            "21":"0",
-            "22":"0",
-            "23":"0",
-            "24":"0",
-            "25":"0",
-            "26":"0",
-            "27":"0",
-            "28":"0",
-            "29":"0",
-            "30":"0",
-            "31":"0",
-            "32":"0",
-            "33":"0",
-            "34":"0",
-            "35":"0",
-            "36":"0",
-            "37":"0",
-            "38":"0",
-            "39":"0",
-            "40":"0",
-            "41":"0",
-            "42":"0",
-            "43":"0",
-            "44":"0",
-            "45":"0",
-            "46":"0",
-            "47":"0",
-            "48":"0",
-            "49":"0",
-            "50":"0",
-            "51":"0",
-            "52":"0",
-            "53":"0",
-            "54":"0",
-            "55":"0",
-            "56":"0",
-            "57":"0",
-            "58":"0",
-            "59":"0",
-            "60":"0",
-            "61":"0",
-            "62":"0",
-            "63":"0"
+            "0" : "1",
+            "1" : "1",
+            "2" : "1",
+            "3" : "3",
+            "4" : "4",
+            "5" : "2",
+            "6" : "1",
+            "7" : "1",
+            "8" : "0",
+            "9" : "1",
+            "10": "1",
+            "11": "1",
+            "12": "1",
+            "13": "1",
+            "14": "1",
+            "15": "1",
+            "16": "1",
+            "17": "1",
+            "18": "1",
+            "19": "1",
+            "20": "1",
+            "21": "1",
+            "22": "1",
+            "23": "1",
+            "24": "1",
+            "25": "1",
+            "26": "1",
+            "27": "1",
+            "28": "1",
+            "29": "1",
+            "30": "1",
+            "31": "1",
+            "32": "1",
+            "33": "1",
+            "34": "1",
+            "35": "1",
+            "36": "1",
+            "37": "1",
+            "38": "1",
+            "39": "1",
+            "40": "1",
+            "41": "1",
+            "42": "1",
+            "43": "1",
+            "44": "1",
+            "45": "1",
+            "46": "5",
+            "47": "1",
+            "48": "6",
+            "49": "1",
+            "50": "1",
+            "51": "1",
+            "52": "1",
+            "53": "1",
+            "54": "1",
+            "55": "1",
+            "56": "1",
+            "57": "1",
+            "58": "1",
+            "59": "1",
+            "60": "1",
+            "61": "1",
+            "62": "1",
+            "63": "1"
+        }
+    },
+    "SCHEDULER": {
+        "scheduler.0": {
+            "type"  : "DWRR",
+            "weight": "1"
+        },
+        "scheduler.1": {
+            "type"  : "DWRR",
+            "weight": "1"
         }
     },
+    "QUEUE": {
+{% for port in port_names_list %}
+        "{{ port }}|3": {
+            "scheduler"   : "scheduler.1",
+            "wred_profile"  : "AZURE_LOSSLESS"
+        },
+{% endfor %}
+{% for port in port_names_list %}
+        "{{ port }}|4": {
+            "scheduler"   : "scheduler.1",
+            "wred_profile"  : "AZURE_LOSSLESS"
+        },
+{% endfor %}
+{% for port in port_names_list %}
+        "{{ port }}|0": {
+            "scheduler": "scheduler.0"
+        },
+{% endfor %}
+{% for port in port_names_list %}
+        "{{ port }}|1": {
+            "scheduler": "scheduler.0"
+        },
+{% endfor %}
+{% for port in port_names_list %}
+        "{{ port }}|2": {
+            "scheduler": "scheduler.0"
+        },
+{% endfor %}
+{% for port in port_names_list %}
+        "{{ port }}|5": {
+            "scheduler": "scheduler.0"
+        },
+{% endfor %}
+{% for port in port_names_list %}
+        "{{ port }}|6": {
+            "scheduler": "scheduler.0"
+        }{% if not loop.last %},{% endif %}
+
+{% endfor %}
+    },
     "PORT_QOS_MAP": {
-       "{{ port_names }}": {
+{% for port in port_names_list %}
+       "{{ port }}": {
             "tc_to_pg_map": "AZURE",
             "tc_to_queue_map": "AZURE",
             "dscp_to_tc_map": "AZURE",
-            "pfc_enable": "4,5"
+            "pfc_to_queue_map": "AZURE",
+            "pfc_enable": "3,4"
+        }{% if not loop.last %},{% endif %}
+
+{% endfor %}
+    },
+    "WRED_PROFILE": {
+        "AZURE_LOSSLESS" : {
+            "wred_green_enable"      : "true",
+            "wred_yellow_enable"     : "true",
+            "wred_red_enable"        : "true",
+            "ecn"                    : "ecn_all",
+            "green_max_threshold"    : "2097152",
+            "green_min_threshold"    : "1048576",
+            "yellow_max_threshold"   : "2097152",
+            "yellow_min_threshold"   : "1048576",
+            "red_max_threshold"      : "2097152",
+            "red_min_threshold"      : "1048576",
+            "green_drop_probability" : "5",
+            "yellow_drop_probability": "5",
+            "red_drop_probability"   : "5"
         }
     }
 }
diff --git a/device/celestica/x86_64-cel_midstone-r0/Midstone-200i_32x400/sai.profile b/device/celestica/x86_64-cel_midstone-r0/Midstone-200i_32x400/sai.profile
index 0769b3063..aba4fc81f 100755
--- a/device/celestica/x86_64-cel_midstone-r0/Midstone-200i_32x400/sai.profile
+++ b/device/celestica/x86_64-cel_midstone-r0/Midstone-200i_32x400/sai.profile
@@ -1 +1 @@
-SAI_INIT_CONFIG_FILE=/usr/share/sonic/hwsku/inno.config.yaml
+SAI_INIT_CONFIG_FILE=/usr/share/sonic/hwsku/ivm.sai.config.yaml
diff --git a/device/celestica/x86_64-cel_midstone-r0/Midstone-200i_64x100/buffers.json.j2 b/device/celestica/x86_64-cel_midstone-r0/Midstone-200i_64x100/buffers.json.j2
index 477c7ce6b..020656fdb 100644
--- a/device/celestica/x86_64-cel_midstone-r0/Midstone-200i_64x100/buffers.json.j2
+++ b/device/celestica/x86_64-cel_midstone-r0/Midstone-200i_64x100/buffers.json.j2
@@ -1,6 +1,5 @@
 {# Default values which will be used if no actual configura available #}
-{% set default_cable = '300m' %}
-{% set default_ports_num = 64 -%}
+{% set default_cable = '40m' %}
 
 {# Port configuration to cable length look-up table #}
 {# Each record describes mapping of DUT (DUT port) role and neighbor role to cable length #}
@@ -12,44 +11,53 @@
         }
 %}
 
-{%- macro cable_length(port_name) -%}
-    {%- set cable_len = [] -%}
-    {%- for local_port in DEVICE_NEIGHBOR -%}
-        {%- if local_port == port_name -%}
-            {%- if DEVICE_NEIGHBOR_METADATA[DEVICE_NEIGHBOR[local_port].name] -%}
-                {%- set neighbor = DEVICE_NEIGHBOR_METADATA[DEVICE_NEIGHBOR[local_port].name] -%}
-                {%- set neighbor_role = neighbor.type -%}
+{%- macro cable_length(port_name) %}
+    {%- set cable_len = [] %}
+    {%- for local_port in DEVICE_NEIGHBOR %}
+        {%- if local_port == port_name %}
+            {%- if DEVICE_NEIGHBOR_METADATA is defined and DEVICE_NEIGHBOR_METADATA[DEVICE_NEIGHBOR[local_port].name] %}
+                {%- set neighbor = DEVICE_NEIGHBOR_METADATA[DEVICE_NEIGHBOR[local_port].name] %}
+                {%- set neighbor_role = neighbor.type %}
                 {%- set roles1 = switch_role + '_' + neighbor_role %}
-                {%- set roles2 = neighbor_role + '_' + switch_role -%}
-                {%- set roles1 = roles1 | lower -%}
-                {%- set roles2 = roles2 | lower -%}
-                {%- if roles1 in ports2cable -%}
-                    {%- if cable_len.append(ports2cable[roles1]) -%}{%- endif -%}
-                {%- elif roles2 in ports2cable -%}
-                    {%- if cable_len.append(ports2cable[roles2]) -%}{%- endif -%}
-                {%- endif -%}
-            {%- endif -%}
-        {%- endif -%}
-    {%- endfor -%}
+                {%- set roles2 = neighbor_role + '_' + switch_role %}
+                {%- set roles1 = roles1 | lower %}
+                {%- set roles2 = roles2 | lower %}
+                {%- if roles1 in ports2cable %}
+                    {%- if cable_len.append(ports2cable[roles1]) %}{% endif %}
+                {%- elif roles2 in ports2cable %}
+                    {%- if cable_len.append(ports2cable[roles2]) %}{% endif %}
+                {%- endif %}
+            {%- endif %}
+        {%- endif %}
+    {%- endfor %}
     {%- if cable_len -%}
         {{ cable_len.0 }}
-    {%- else -%}
-        {{ default_cable }}
-    {%- endif -%}
-{% endmacro %}
+    {%- else %}
+        {%- if switch_role.lower() == 'torrouter' %}
+            {%- for local_port in VLAN_MEMBER %}
+                {%- if local_port[1] == port_name %}
+                    {%- set roles3 = switch_role + '_' + 'server' %}
+                    {%- set roles3 = roles3 | lower %}
+                    {%- if roles3 in ports2cable %}
+                        {%- if cable_len.append(ports2cable[roles3]) %}{% endif %}
+                    {%- endif %}
+                {%- endif %}
+            {%- endfor %}
+            {%- if cable_len -%}
+                {{ cable_len.0 }}
+            {%- else -%}
+                {{ default_cable }}
+            {%- endif %}
+        {%- else -%}
+            {{ default_cable }}
+        {%- endif %}
+    {%- endif %}
+{%- endmacro %}
 
 {%- if DEVICE_METADATA is defined %}
 {%- set switch_role = DEVICE_METADATA['localhost']['type'] %}
 {%- endif -%}
 
-{# Generate list of ports if not defined #}
-{% if PORT is not defined %}
-    {% set PORT = [] %}
-    {% for port_idx in range(0,default_ports_num) %}
-        {% if PORT.append("Ethernet%d" % (port_idx*4)) %}{% endif %}
-    {% endfor %}
-{% endif -%}
-
 {% set port_names_list = [] %}
 {% for port in PORT %}
     {%- if port_names_list.append(port) %}{% endif %}
@@ -57,64 +65,98 @@
 {% set port_names = port_names_list | join(',') -%}
 
 {
+    "CABLE_LENGTH": {
+        "AZURE": {
+    {% for port in PORT %}
+        {% set cable = cable_length(port) -%}
+        "{{ port }}": "{{ cable }}"{%- if not loop.last -%},{% endif %}
+
+    {% endfor %}
+    }
+    },
     "BUFFER_POOL": {
         "ingress_lossless_pool": {
-            "size": "47218432",
+            "size": "51691264",
             "type": "ingress",
             "mode": "dynamic",
             "xoff": "17708800"
         },
-        "egress_lossy_pool": {
+        "lossy_pool": {
             "size": "18874368",
             "type": "egress",
             "mode": "dynamic",
             "xoff": "0"
+        },
+        "egress_lossless_pool": {
+            "size": "70565632",
+            "type": "egress",
+            "mode": "static"
         }
     },
     "BUFFER_PROFILE": {
         "ingress_lossless_profile": {
             "pool":"ingress_lossless_pool",
-            "xoff":"1433600",
+            "xoff":"38816",
             "size":"1518",
-            "dynamic_th":"-4",
-            "xon_offset":"6272"
+            "dynamic_th":"1",
+            "xon_offset":"9408"
         },
-        "ingress_lossy_profile": {
+        "egress_lossless_profile": {
             "pool":"ingress_lossless_pool",
             "size":"0",
-            "static_th":"9721600"
+            "static_th":"10243072"
         },
-        "egress_lossless_profile": {
-            "pool":"egress_lossy_pool",
+        "ingress_lossy_profile": {
+            "pool":"lossy_pool",
             "size":"0",
-            "static_th":"9721600"
+            "static_th":"10243072"
         },
         "egress_lossy_profile": {
-            "pool":"egress_lossy_pool",
+            "pool":"lossy_pool",
             "size":"1518",
-            "dynamic_th":"3"
+            "dynamic_th":"2"
         }
     },
     "BUFFER_PG": {
-        "{{ port_names }}|0-3": {
-            "profile" : "egress_lossless_profile"
-        },
-        "{{ port_names }}|4-5": {
-            "profile" : "ingress_lossless_profile"
-        },
-        "{{ port_names }}|6-7": {
-            "profile" : "egress_lossless_profile"
-        }
+{% for port in port_names_list %}
+                "{{ port }}|3-4": {
+                     "profile" : "ingress_lossless_profile"
+                },
+{% endfor %}
+{% for port in port_names_list %}
+                "{{ port }}|0": {
+                    "profile" : "ingress_lossy_profile"
+                },
+{% endfor %}
+{% for port in port_names_list %}
+                "{{ port }}|1-2": {
+                    "profile" : "ingress_lossy_profile"
+                },
+{% endfor %}
+{% for port in port_names_list %}
+                "{{ port }}|5-7": {
+                    "profile" : "ingress_lossy_profile"
+                }{% if not loop.last %},{% endif %}
+
+{% endfor %}
     },
+
     "BUFFER_QUEUE": {
-        "{{ port_names }}|4-5": {
-            "profile" : "ingress_lossy_profile"
+{% for port in port_names_list %}
+        "{{ port }}|3-4": {
+             "profile" : "egress_lossless_profile"
         },
-        "{{ port_names }}|0-3": {
+{% endfor %}
+{% for port in port_names_list %}
+        "{{ port }}|0-2": {
             "profile" : "egress_lossy_profile"
         },
-        "{{ port_names }}|6-7": {
+{% endfor %}
+{% for port in port_names_list %}
+        "{{ port }}|5-7": {
             "profile" : "egress_lossy_profile"
-        }
+        }{% if not loop.last %},{% endif %}
+
+{% endfor %}
     }
 }
diff --git a/device/celestica/x86_64-cel_midstone-r0/Midstone-200i_64x100/config_64x100G_nrz_midstone200i.yaml b/device/celestica/x86_64-cel_midstone-r0/Midstone-200i_64x100/config_64x100G_nrz_midstone200i.yaml
index 813d012ca..340f61113 100644
--- a/device/celestica/x86_64-cel_midstone-r0/Midstone-200i_64x100/config_64x100G_nrz_midstone200i.yaml
+++ b/device/celestica/x86_64-cel_midstone-r0/Midstone-200i_64x100/config_64x100G_nrz_midstone200i.yaml
@@ -4,12 +4,17 @@ ifcs:
 nodes:
 - node_id: "0"
   options:
+    sd_low_power_mode_global_default: "true"
     sku: "configs/sku/innovium.77700_B"
     netdev:
     - auto_create: "no"
       multi_interface: "yes"
     buffer_management_mode: "api_driven"
+    wred_cr_ip_proto_list: "17"
+    cr_assignment_mode: "1"
     max_lossless_tc: "2"
+    ilpm_enable: "1"
+    forward_profile: "IFCS_FORWARD_PROFILE_ID_PROFILE_E"
     txring:
     - txring_id: "0"
       desc_count: "1024"
@@ -632,24 +637,6 @@ nodes:
     type: "eth"
     admin_state: "true"
     loopback: "none"
-  - fec: "NONE"
-    id: "257"
-    lanes: "0:1"
-    serdes_group: "32"
-    speed: "10G"
-    sysport: "257"
-    type: "mgmt 0"
-    admin_state: "true"
-    loopback: "none"
-  - fec: "NONE"
-    id: "258"
-    lanes: "1:1"
-    serdes_group: "32"
-    speed: "10G"
-    sysport: "258"
-    type: "mgmt 1"
-    admin_state: "true"
-    loopback: "none"
   isg:
   - id: "0"
     lane_swap: "01234567"
diff --git a/device/celestica/x86_64-cel_midstone-r0/Midstone-200i_64x100/innovium.77700_B b/device/celestica/x86_64-cel_midstone-r0/Midstone-200i_64x100/innovium.77700_B
index 27297b313..57ba52cbc 100644
--- a/device/celestica/x86_64-cel_midstone-r0/Midstone-200i_64x100/innovium.77700_B
+++ b/device/celestica/x86_64-cel_midstone-r0/Midstone-200i_64x100/innovium.77700_B
@@ -5,6 +5,7 @@ device_id:         0x1b58
 # Hardware constraint information
 hardware:
         num_ibs:           6
+        ib_active:         0,1,2,3,4,5
 
         ports_per_ib:      32, 32, 32, 32, 20, 20
         recirc_port_num:   32, 32, 32, 32, 32, 32
diff --git a/device/celestica/x86_64-cel_midstone-r0/Midstone-200i_64x100/port_config.ini b/device/celestica/x86_64-cel_midstone-r0/Midstone-200i_64x100/port_config.ini
index cb862ff9b..6ac13773d 100644
--- a/device/celestica/x86_64-cel_midstone-r0/Midstone-200i_64x100/port_config.ini
+++ b/device/celestica/x86_64-cel_midstone-r0/Midstone-200i_64x100/port_config.ini
@@ -1,67 +1,65 @@
-# name              lanes                   speed       index   mtu
-Ethernet0           249,250,251,252         100000      0       9126
-Ethernet4           253,254,255,256         100000      1       9126
-Ethernet8           245,246,247,248         100000      2       9126
-Ethernet12          241,242,243,244         100000      3       9126
-Ethernet16          233,234,235,236         100000      4       9126
-Ethernet20          237,238,239,240         100000      5       9126
-Ethernet24          229,230,231,232         100000      6       9126
-Ethernet28          225,226,227,228         100000      7       9126
-Ethernet32          217,218,219,220         100000      8       9126
-Ethernet36          221,222,223,224         100000      9       9126
-Ethernet40          213,214,215,216         100000      10      9126
-Ethernet44          209,210,211,212         100000      11      9126
-Ethernet48          201,202,203,204         100000      12      9126
-Ethernet52          205,206,207,208         100000      13      9126
-Ethernet56          197,198,199,200         100000      14      9126
-Ethernet60          193,194,195,196         100000      15      9126
-Ethernet64          185,186,187,188         100000      16      9126
-Ethernet68          189,190,191,192         100000      17      9126
-Ethernet72          181,182,183,184         100000      18      9126
-Ethernet76          177,178,179,180         100000      19      9126
-Ethernet80          169,170,171,172         100000      20      9126
-Ethernet84          173,174,175,176         100000      21      9126
-Ethernet88          165,166,167,168         100000      22      9126
-Ethernet92          161,162,163,164         100000      23      9126
-Ethernet96          153,154,155,156         100000      24      9126
-Ethernet100         157,158,159,160         100000      25      9126
-Ethernet104         149,150,151,152         100000      26      9126
-Ethernet108         145,146,147,148         100000      27      9126
-Ethernet112         137,138,139,140         100000      28      9126
-Ethernet116         141,142,143,144         100000      29      9126
-Ethernet120         133,134,135,136         100000      30      9126
-Ethernet124         129,130,131,132         100000      31      9126
-Ethernet128         121,122,123,124         100000      32      9126
-Ethernet132         125,126,127,128         100000      33      9126
-Ethernet136         117,118,119,120         100000      34      9126
-Ethernet140         113,114,115,116         100000      35      9126
-Ethernet144         105,106,107,108         100000      36      9126
-Ethernet148         109,110,111,112         100000      37      9126
-Ethernet152         101,102,103,104         100000      38      9126
-Ethernet156         97,98,99,100            100000      39      9126
-Ethernet160         89,90,91,92             100000      40      9126
-Ethernet164         93,94,95,96             100000      41      9126
-Ethernet168         85,86,87,88             100000      42      9126
-Ethernet172         81,82,83,84             100000      43      9126
-Ethernet176         73,74,75,76             100000      44      9126
-Ethernet180         77,78,79,80             100000      45      9126
-Ethernet184         69,70,71,72             100000      46      9126
-Ethernet188         65,66,67,68             100000      47      9126
-Ethernet192         57,58,59,60             100000      48      9126
-Ethernet196         61,62,63,64             100000      49      9126
-Ethernet200         53,54,55,56             100000      50      9126
-Ethernet204         49,50,51,52             100000      51      9126
-Ethernet208         41,42,43,44             100000      52      9126
-Ethernet212         45,46,47,48             100000      53      9126
-Ethernet216         37,38,39,40             100000      54      9126
-Ethernet220         33,34,35,36             100000      55      9126
-Ethernet224         25,26,27,28             100000      56      9126
-Ethernet228         29,30,31,32             100000      57      9126
-Ethernet232         21,22,23,24             100000      58      9126
-Ethernet236         17,18,19,20             100000      59      9126
-Ethernet240         9,10,11,12              100000      60      9126
-Ethernet244         13,14,15,16             100000      61      9126
-Ethernet248         5,6,7,8                 100000      62      9126
-Ethernet252         1,2,3,4                 100000      63      9126
-Ethernet256         257                      10000      64      9126
-Ethernet257         258                      10000      65      9126
+# name              lanes               alias   speed       index   mtu
+Ethernet0           249,250,251,252     Eth1    100000      0       9126
+Ethernet4           253,254,255,256     Eth2    100000      1       9126
+Ethernet8           245,246,247,248     Eth3    100000      2       9126
+Ethernet12          241,242,243,244     Eth4    100000      3       9126
+Ethernet16          233,234,235,236     Eth5    100000      4       9126
+Ethernet20          237,238,239,240     Eth6    100000      5       9126
+Ethernet24          229,230,231,232     Eth7    100000      6       9126
+Ethernet28          225,226,227,228     Eth8    100000      7       9126
+Ethernet32          217,218,219,220     Eth9    100000      8       9126
+Ethernet36          221,222,223,224     Eth10   100000      9       9126
+Ethernet40          213,214,215,216     Eth11   100000      10      9126
+Ethernet44          209,210,211,212     Eth12   100000      11      9126
+Ethernet48          201,202,203,204     Eth13   100000      12      9126
+Ethernet52          205,206,207,208     Eth14   100000      13      9126
+Ethernet56          197,198,199,200     Eth15   100000      14      9126
+Ethernet60          193,194,195,196     Eth16   100000      15      9126
+Ethernet64          185,186,187,188     Eth17   100000      16      9126
+Ethernet68          189,190,191,192     Eth18   100000      17      9126
+Ethernet72          181,182,183,184     Eth19   100000      18      9126
+Ethernet76          177,178,179,180     Eth20   100000      19      9126
+Ethernet80          169,170,171,172     Eth21   100000      20      9126
+Ethernet84          173,174,175,176     Eth22   100000      21      9126
+Ethernet88          165,166,167,168     Eth23   100000      22      9126
+Ethernet92          161,162,163,164     Eth24   100000      23      9126
+Ethernet96          153,154,155,156     Eth25   100000      24      9126
+Ethernet100         157,158,159,160     Eth26   100000      25      9126
+Ethernet104         149,150,151,152     Eth27   100000      26      9126
+Ethernet108         145,146,147,148     Eth28   100000      27      9126
+Ethernet112         137,138,139,140     Eth29   100000      28      9126
+Ethernet116         141,142,143,144     Eth30   100000      29      9126
+Ethernet120         133,134,135,136     Eth31   100000      30      9126
+Ethernet124         129,130,131,132     Eth32   100000      31      9126
+Ethernet128         121,122,123,124     Eth33   100000      32      9126
+Ethernet132         125,126,127,128     Eth34   100000      33      9126
+Ethernet136         117,118,119,120     Eth35   100000      34      9126
+Ethernet140         113,114,115,116     Eth36   100000      35      9126
+Ethernet144         105,106,107,108     Eth37   100000      36      9126
+Ethernet148         109,110,111,112     Eth38   100000      37      9126
+Ethernet152         101,102,103,104     Eth39   100000      38      9126
+Ethernet156         97,98,99,100        Eth40   100000      39      9126
+Ethernet160         89,90,91,92         Eth41   100000      40      9126
+Ethernet164         93,94,95,96         Eth42   100000      41      9126
+Ethernet168         85,86,87,88         Eth43   100000      42      9126
+Ethernet172         81,82,83,84         Eth44   100000      43      9126
+Ethernet176         73,74,75,76         Eth45   100000      44      9126
+Ethernet180         77,78,79,80         Eth46   100000      45      9126
+Ethernet184         69,70,71,72         Eth47   100000      46      9126
+Ethernet188         65,66,67,68         Eth48   100000      47      9126
+Ethernet192         57,58,59,60         Eth49   100000      48      9126
+Ethernet196         61,62,63,64         Eth50   100000      49      9126
+Ethernet200         53,54,55,56         Eth51   100000      50      9126
+Ethernet204         49,50,51,52         Eth52   100000      51      9126
+Ethernet208         41,42,43,44         Eth53   100000      52      9126
+Ethernet212         45,46,47,48         Eth54   100000      53      9126
+Ethernet216         37,38,39,40         Eth55   100000      54      9126
+Ethernet220         33,34,35,36         Eth56   100000      55      9126
+Ethernet224         25,26,27,28         Eth57   100000      56      9126
+Ethernet228         29,30,31,32         Eth58   100000      57      9126
+Ethernet232         21,22,23,24         Eth59   100000      58      9126
+Ethernet236         17,18,19,20         Eth60   100000      59      9126
+Ethernet240         9,10,11,12          Eth61   100000      60      9126
+Ethernet244         13,14,15,16         Eth62   100000      61      9126
+Ethernet248         5,6,7,8             Eth63   100000      62      9126
+Ethernet252         1,2,3,4             Eth64   100000      63      9126
diff --git a/device/celestica/x86_64-cel_midstone-r0/Midstone-200i_64x100/qos.json.j2 b/device/celestica/x86_64-cel_midstone-r0/Midstone-200i_64x100/qos.json.j2
index 73c878e66..0f1ecd110 100755
--- a/device/celestica/x86_64-cel_midstone-r0/Midstone-200i_64x100/qos.json.j2
+++ b/device/celestica/x86_64-cel_midstone-r0/Midstone-200i_64x100/qos.json.j2
@@ -1,14 +1,3 @@
-{# Default values which will be used if no actual configura available #}
-
-{% set default_ports_num = 64 -%}
-{# Generate list of ports if not defined #}
-{% if PORT is not defined %}
-    {% set PORT = [] %}
-    {% for port_idx in range(0,default_ports_num) %}
-        {% if PORT.append("Ethernet%d" % (port_idx*4)) %}{% endif %}
-    {% endfor %}
-{% endif -%}
-
 {% set port_names_list = [] %}
 {% for port in PORT %}
     {%- if port_names_list.append(port) %}{% endif %}
@@ -19,102 +8,185 @@
 {
    "TC_TO_QUEUE_MAP":{
         "AZURE":{
-            "1":"1",
             "0":"0",
-            "3":"3",
+            "1":"1",
             "2":"2",
-            "5":"5",
+            "3":"3",
             "4":"4",
-            "7":"7",
-            "6":"6"
+            "5":"5",
+            "6":"6",
+            "7":"7"
+        }
+    },
+    "MAP_PFC_PRIORITY_TO_QUEUE": {
+        "AZURE": {
+            "0": "0",
+            "1": "1",
+            "2": "2",
+            "3": "3",
+            "4": "4",
+            "5": "5",
+            "6": "6",
+            "7": "7"
         }
     },
     "TC_TO_PRIORITY_GROUP_MAP": {
     "AZURE": {
-        "1": "0",
         "0": "0",
-        "3": "0",
+        "1": "0",
         "2": "0",
-        "4": "1",
-        "5": "2",
+        "3": "3",
+        "4": "4",
+        "5": "0",
         "6": "0",
         "7": "0"
     }
     },
        "DSCP_TO_TC_MAP": {
         "AZURE": {
-            "0":"0",
-            "1":"0",
-            "2":"0",
-            "3":"0",
-            "4":"4",
-            "5":"5",
-            "6":"0",
-            "7":"0",
-            "8":"1",
-            "9":"0",
-            "10":"0",
-            "11":"0",
-            "12":"0",
-            "13":"0",
-            "14":"0",
-            "15":"0",
-            "16":"0",
-            "17":"0",
-            "18":"0",
-            "19":"0",
-            "20":"0",
-            "21":"0",
-            "22":"0",
-            "23":"0",
-            "24":"0",
-            "25":"0",
-            "26":"0",
-            "27":"0",
-            "28":"0",
-            "29":"0",
-            "30":"0",
-            "31":"0",
-            "32":"0",
-            "33":"0",
-            "34":"0",
-            "35":"0",
-            "36":"0",
-            "37":"0",
-            "38":"0",
-            "39":"0",
-            "40":"0",
-            "41":"0",
-            "42":"0",
-            "43":"0",
-            "44":"0",
-            "45":"0",
-            "46":"0",
-            "47":"0",
-            "48":"0",
-            "49":"0",
-            "50":"0",
-            "51":"0",
-            "52":"0",
-            "53":"0",
-            "54":"0",
-            "55":"0",
-            "56":"0",
-            "57":"0",
-            "58":"0",
-            "59":"0",
-            "60":"0",
-            "61":"0",
-            "62":"0",
-            "63":"0"
+            "0" : "1",
+            "1" : "1",
+            "2" : "1",
+            "3" : "3",
+            "4" : "4",
+            "5" : "2",
+            "6" : "1",
+            "7" : "1",
+            "8" : "0",
+            "9" : "1",
+            "10": "1",
+            "11": "1",
+            "12": "1",
+            "13": "1",
+            "14": "1",
+            "15": "1",
+            "16": "1",
+            "17": "1",
+            "18": "1",
+            "19": "1",
+            "20": "1",
+            "21": "1",
+            "22": "1",
+            "23": "1",
+            "24": "1",
+            "25": "1",
+            "26": "1",
+            "27": "1",
+            "28": "1",
+            "29": "1",
+            "30": "1",
+            "31": "1",
+            "32": "1",
+            "33": "1",
+            "34": "1",
+            "35": "1",
+            "36": "1",
+            "37": "1",
+            "38": "1",
+            "39": "1",
+            "40": "1",
+            "41": "1",
+            "42": "1",
+            "43": "1",
+            "44": "1",
+            "45": "1",
+            "46": "5",
+            "47": "1",
+            "48": "6",
+            "49": "1",
+            "50": "1",
+            "51": "1",
+            "52": "1",
+            "53": "1",
+            "54": "1",
+            "55": "1",
+            "56": "1",
+            "57": "1",
+            "58": "1",
+            "59": "1",
+            "60": "1",
+            "61": "1",
+            "62": "1",
+            "63": "1"
+        }
+    },
+    "SCHEDULER": {
+        "scheduler.0": {
+            "type"  : "DWRR",
+            "weight": "1"
+        },
+        "scheduler.1": {
+            "type"  : "DWRR",
+            "weight": "1"
         }
     },
+    "QUEUE": {
+{% for port in port_names_list %}
+        "{{ port }}|3": {
+            "scheduler"   : "scheduler.1",
+            "wred_profile"  : "AZURE_LOSSLESS"
+        },
+{% endfor %}
+{% for port in port_names_list %}
+        "{{ port }}|4": {
+            "scheduler"   : "scheduler.1",
+            "wred_profile"  : "AZURE_LOSSLESS"
+        },
+{% endfor %}
+{% for port in port_names_list %}
+        "{{ port }}|0": {
+            "scheduler": "scheduler.0"
+        },
+{% endfor %}
+{% for port in port_names_list %}
+        "{{ port }}|1": {
+            "scheduler": "scheduler.0"
+        },
+{% endfor %}
+{% for port in port_names_list %}
+        "{{ port }}|2": {
+            "scheduler": "scheduler.0"
+        },
+{% endfor %}
+{% for port in port_names_list %}
+        "{{ port }}|5": {
+            "scheduler": "scheduler.0"
+        },
+{% endfor %}
+{% for port in port_names_list %}
+        "{{ port }}|6": {
+            "scheduler": "scheduler.0"
+        }{% if not loop.last %},{% endif %}
+
+{% endfor %}
+    },
     "PORT_QOS_MAP": {
-       "{{ port_names }}": {
+{% for port in port_names_list %}
+       "{{ port }}": {
             "tc_to_pg_map": "AZURE",
             "tc_to_queue_map": "AZURE",
             "dscp_to_tc_map": "AZURE",
-            "pfc_enable": "4,5"
+            "pfc_to_queue_map": "AZURE",
+            "pfc_enable": "3,4"
+        }{% if not loop.last %},{% endif %}
+
+{% endfor %}
+    },
+    "WRED_PROFILE": {
+        "AZURE_LOSSLESS" : {
+            "wred_green_enable"      : "true",
+            "wred_yellow_enable"     : "true",
+            "wred_red_enable"        : "true",
+            "ecn"                    : "ecn_all",
+            "green_max_threshold"    : "2097152",
+            "green_min_threshold"    : "1048576",
+            "yellow_max_threshold"   : "2097152",
+            "yellow_min_threshold"   : "1048576",
+            "red_max_threshold"      : "2097152",
+            "red_min_threshold"      : "1048576",
+            "green_drop_probability" : "5",
+            "yellow_drop_probability": "5",
+            "red_drop_probability"   : "5"
         }
     }
 }
diff --git a/device/celestica/x86_64-cel_midstone-r0/Midstone-200i_64x100/sai.profile b/device/celestica/x86_64-cel_midstone-r0/Midstone-200i_64x100/sai.profile
index 0769b3063..aba4fc81f 100755
--- a/device/celestica/x86_64-cel_midstone-r0/Midstone-200i_64x100/sai.profile
+++ b/device/celestica/x86_64-cel_midstone-r0/Midstone-200i_64x100/sai.profile
@@ -1 +1 @@
-SAI_INIT_CONFIG_FILE=/usr/share/sonic/hwsku/inno.config.yaml
+SAI_INIT_CONFIG_FILE=/usr/share/sonic/hwsku/ivm.sai.config.yaml
diff --git a/device/celestica/x86_64-cel_midstone-r0/Midstone-200i_64x100nrz/buffers.json.j2 b/device/celestica/x86_64-cel_midstone-r0/Midstone-200i_64x100nrz/buffers.json.j2
index 4d43df442..020656fdb 100644
--- a/device/celestica/x86_64-cel_midstone-r0/Midstone-200i_64x100nrz/buffers.json.j2
+++ b/device/celestica/x86_64-cel_midstone-r0/Midstone-200i_64x100nrz/buffers.json.j2
@@ -1,7 +1,5 @@
 {# Default values which will be used if no actual configura available #}
-{% set default_cable = '300m' %}
-{% set default_speed = '100G' %}
-{% set default_ports_num = 32 -%}
+{% set default_cable = '40m' %}
 
 {# Port configuration to cable length look-up table #}
 {# Each record describes mapping of DUT (DUT port) role and neighbor role to cable length #}
@@ -13,44 +11,53 @@
         }
 %}
 
-{%- macro cable_length(port_name) -%}
-    {%- set cable_len = [] -%}
-    {%- for local_port in DEVICE_NEIGHBOR -%}
-        {%- if local_port == port_name -%}
-            {%- if DEVICE_NEIGHBOR_METADATA[DEVICE_NEIGHBOR[local_port].name] -%}
-                {%- set neighbor = DEVICE_NEIGHBOR_METADATA[DEVICE_NEIGHBOR[local_port].name] -%}
-                {%- set neighbor_role = neighbor.type -%}
+{%- macro cable_length(port_name) %}
+    {%- set cable_len = [] %}
+    {%- for local_port in DEVICE_NEIGHBOR %}
+        {%- if local_port == port_name %}
+            {%- if DEVICE_NEIGHBOR_METADATA is defined and DEVICE_NEIGHBOR_METADATA[DEVICE_NEIGHBOR[local_port].name] %}
+                {%- set neighbor = DEVICE_NEIGHBOR_METADATA[DEVICE_NEIGHBOR[local_port].name] %}
+                {%- set neighbor_role = neighbor.type %}
                 {%- set roles1 = switch_role + '_' + neighbor_role %}
-                {%- set roles2 = neighbor_role + '_' + switch_role -%}
-                {%- set roles1 = roles1 | lower -%}
-                {%- set roles2 = roles2 | lower -%}
-                {%- if roles1 in ports2cable -%}
-                    {%- if cable_len.append(ports2cable[roles1]) -%}{%- endif -%}
-                {%- elif roles2 in ports2cable -%}
-                    {%- if cable_len.append(ports2cable[roles2]) -%}{%- endif -%}
-                {%- endif -%}
-            {%- endif -%}
-        {%- endif -%}
-    {%- endfor -%}
+                {%- set roles2 = neighbor_role + '_' + switch_role %}
+                {%- set roles1 = roles1 | lower %}
+                {%- set roles2 = roles2 | lower %}
+                {%- if roles1 in ports2cable %}
+                    {%- if cable_len.append(ports2cable[roles1]) %}{% endif %}
+                {%- elif roles2 in ports2cable %}
+                    {%- if cable_len.append(ports2cable[roles2]) %}{% endif %}
+                {%- endif %}
+            {%- endif %}
+        {%- endif %}
+    {%- endfor %}
     {%- if cable_len -%}
         {{ cable_len.0 }}
-    {%- else -%}
-        {{ default_cable }}
-    {%- endif -%}
-{% endmacro %}
+    {%- else %}
+        {%- if switch_role.lower() == 'torrouter' %}
+            {%- for local_port in VLAN_MEMBER %}
+                {%- if local_port[1] == port_name %}
+                    {%- set roles3 = switch_role + '_' + 'server' %}
+                    {%- set roles3 = roles3 | lower %}
+                    {%- if roles3 in ports2cable %}
+                        {%- if cable_len.append(ports2cable[roles3]) %}{% endif %}
+                    {%- endif %}
+                {%- endif %}
+            {%- endfor %}
+            {%- if cable_len -%}
+                {{ cable_len.0 }}
+            {%- else -%}
+                {{ default_cable }}
+            {%- endif %}
+        {%- else -%}
+            {{ default_cable }}
+        {%- endif %}
+    {%- endif %}
+{%- endmacro %}
 
 {%- if DEVICE_METADATA is defined %}
 {%- set switch_role = DEVICE_METADATA['localhost']['type'] %}
 {%- endif -%}
 
-{# Generate list of ports if not defined #}
-{% if PORT is not defined %}
-    {% set PORT = [] %}
-    {% for port_idx in range(0,default_ports_num) %}
-        {% if PORT.append("Ethernet%d" % (port_idx*4)) %}{% endif %}
-    {% endfor %}
-{% endif -%}
-
 {% set port_names_list = [] %}
 {% for port in PORT %}
     {%- if port_names_list.append(port) %}{% endif %}
@@ -58,64 +65,98 @@
 {% set port_names = port_names_list | join(',') -%}
 
 {
+    "CABLE_LENGTH": {
+        "AZURE": {
+    {% for port in PORT %}
+        {% set cable = cable_length(port) -%}
+        "{{ port }}": "{{ cable }}"{%- if not loop.last -%},{% endif %}
+
+    {% endfor %}
+    }
+    },
     "BUFFER_POOL": {
         "ingress_lossless_pool": {
-            "size": "47218432",
+            "size": "51691264",
             "type": "ingress",
             "mode": "dynamic",
             "xoff": "17708800"
         },
-        "egress_lossy_pool": {
+        "lossy_pool": {
             "size": "18874368",
             "type": "egress",
             "mode": "dynamic",
             "xoff": "0"
+        },
+        "egress_lossless_pool": {
+            "size": "70565632",
+            "type": "egress",
+            "mode": "static"
         }
     },
     "BUFFER_PROFILE": {
         "ingress_lossless_profile": {
             "pool":"ingress_lossless_pool",
-            "xoff":"1433600",
+            "xoff":"38816",
             "size":"1518",
-            "dynamic_th":"-4",
-            "xon_offset":"6272"
+            "dynamic_th":"1",
+            "xon_offset":"9408"
         },
-        "ingress_lossy_profile": {
+        "egress_lossless_profile": {
             "pool":"ingress_lossless_pool",
             "size":"0",
-            "static_th":"9721600"
+            "static_th":"10243072"
         },
-        "egress_lossless_profile": {
-            "pool":"egress_lossy_pool",
+        "ingress_lossy_profile": {
+            "pool":"lossy_pool",
             "size":"0",
-            "static_th":"9721600"
+            "static_th":"10243072"
         },
         "egress_lossy_profile": {
-            "pool":"egress_lossy_pool",
+            "pool":"lossy_pool",
             "size":"1518",
-            "dynamic_th":"3"
+            "dynamic_th":"2"
         }
     },
     "BUFFER_PG": {
-        "{{ port_names }}|0-3": {
-            "profile" : "egress_lossless_profile"
-        },
-        "{{ port_names }}|4-5": {
-            "profile" : "ingress_lossless_profile"
-        },
-        "{{ port_names }}|6-7": {
-            "profile" : "egress_lossless_profile"
-        }
+{% for port in port_names_list %}
+                "{{ port }}|3-4": {
+                     "profile" : "ingress_lossless_profile"
+                },
+{% endfor %}
+{% for port in port_names_list %}
+                "{{ port }}|0": {
+                    "profile" : "ingress_lossy_profile"
+                },
+{% endfor %}
+{% for port in port_names_list %}
+                "{{ port }}|1-2": {
+                    "profile" : "ingress_lossy_profile"
+                },
+{% endfor %}
+{% for port in port_names_list %}
+                "{{ port }}|5-7": {
+                    "profile" : "ingress_lossy_profile"
+                }{% if not loop.last %},{% endif %}
+
+{% endfor %}
     },
+
     "BUFFER_QUEUE": {
-        "{{ port_names }}|4-5": {
-            "profile" : "ingress_lossy_profile"
+{% for port in port_names_list %}
+        "{{ port }}|3-4": {
+             "profile" : "egress_lossless_profile"
         },
-        "{{ port_names }}|0-3": {
+{% endfor %}
+{% for port in port_names_list %}
+        "{{ port }}|0-2": {
             "profile" : "egress_lossy_profile"
         },
-        "{{ port_names }}|6-7": {
+{% endfor %}
+{% for port in port_names_list %}
+        "{{ port }}|5-7": {
             "profile" : "egress_lossy_profile"
-        }
+        }{% if not loop.last %},{% endif %}
+
+{% endfor %}
     }
 }
diff --git a/device/celestica/x86_64-cel_midstone-r0/Midstone-200i_64x100nrz/config_64x100G_nrz_midstone200i.yaml b/device/celestica/x86_64-cel_midstone-r0/Midstone-200i_64x100nrz/config_64x100G_nrz_midstone200i.yaml
index 8fb6a114a..d67071f05 100644
--- a/device/celestica/x86_64-cel_midstone-r0/Midstone-200i_64x100nrz/config_64x100G_nrz_midstone200i.yaml
+++ b/device/celestica/x86_64-cel_midstone-r0/Midstone-200i_64x100nrz/config_64x100G_nrz_midstone200i.yaml
@@ -4,11 +4,14 @@ ifcs:
 nodes:
 - node_id: "0"
   options:
+    sd_low_power_mode_global_default: "true"
     sku: "configs/sku/innovium.77700_B"
     netdev:
     - auto_create: "no"
       multi_interface: "yes"
     buffer_management_mode: "bootstrap_lossless"
+    wred_cr_ip_proto_list: "17"
+    cr_assignment_mode: "1"
     max_lossless_tc: "2"
     txring:
     - txring_id: "0"
diff --git a/device/celestica/x86_64-cel_midstone-r0/Midstone-200i_64x100nrz/innovium.77700_B b/device/celestica/x86_64-cel_midstone-r0/Midstone-200i_64x100nrz/innovium.77700_B
index 27297b313..57ba52cbc 100644
--- a/device/celestica/x86_64-cel_midstone-r0/Midstone-200i_64x100nrz/innovium.77700_B
+++ b/device/celestica/x86_64-cel_midstone-r0/Midstone-200i_64x100nrz/innovium.77700_B
@@ -5,6 +5,7 @@ device_id:         0x1b58
 # Hardware constraint information
 hardware:
         num_ibs:           6
+        ib_active:         0,1,2,3,4,5
 
         ports_per_ib:      32, 32, 32, 32, 20, 20
         recirc_port_num:   32, 32, 32, 32, 32, 32
diff --git a/device/celestica/x86_64-cel_midstone-r0/Midstone-200i_64x100nrz/qos.json.j2 b/device/celestica/x86_64-cel_midstone-r0/Midstone-200i_64x100nrz/qos.json.j2
index f1b770187..0f1ecd110 100755
--- a/device/celestica/x86_64-cel_midstone-r0/Midstone-200i_64x100nrz/qos.json.j2
+++ b/device/celestica/x86_64-cel_midstone-r0/Midstone-200i_64x100nrz/qos.json.j2
@@ -1,102 +1,192 @@
+{% set port_names_list = [] %}
+{% for port in PORT %}
+    {%- if port_names_list.append(port) %}{% endif %}
+{% endfor %}
+{% set port_names = port_names_list | join(',') -%}
+
+
 {
    "TC_TO_QUEUE_MAP":{
         "AZURE":{
-            "1":"1",
             "0":"0",
-            "3":"3",
+            "1":"1",
             "2":"2",
-            "5":"5",
+            "3":"3",
             "4":"4",
-            "7":"7",
-            "6":"6"
+            "5":"5",
+            "6":"6",
+            "7":"7"
+        }
+    },
+    "MAP_PFC_PRIORITY_TO_QUEUE": {
+        "AZURE": {
+            "0": "0",
+            "1": "1",
+            "2": "2",
+            "3": "3",
+            "4": "4",
+            "5": "5",
+            "6": "6",
+            "7": "7"
         }
     },
     "TC_TO_PRIORITY_GROUP_MAP": {
     "AZURE": {
-        "1": "0",
         "0": "0",
-        "3": "0",
+        "1": "0",
         "2": "0",
-        "4": "1",
-        "5": "2",
+        "3": "3",
+        "4": "4",
+        "5": "0",
         "6": "0",
         "7": "0"
     }
     },
        "DSCP_TO_TC_MAP": {
         "AZURE": {
-            "0":"0",
-            "1":"0",
-            "2":"0",
-            "3":"0",
-            "4":"4",
-            "5":"5",
-            "6":"0",
-            "7":"0",
-            "8":"1",
-            "9":"0",
-            "10":"0",
-            "11":"0",
-            "12":"0",
-            "13":"0",
-            "14":"0",
-            "15":"0",
-            "16":"0",
-            "17":"0",
-            "18":"0",
-            "19":"0",
-            "20":"0",
-            "21":"0",
-            "22":"0",
-            "23":"0",
-            "24":"0",
-            "25":"0",
-            "26":"0",
-            "27":"0",
-            "28":"0",
-            "29":"0",
-            "30":"0",
-            "31":"0",
-            "32":"0",
-            "33":"0",
-            "34":"0",
-            "35":"0",
-            "36":"0",
-            "37":"0",
-            "38":"0",
-            "39":"0",
-            "40":"0",
-            "41":"0",
-            "42":"0",
-            "43":"0",
-            "44":"0",
-            "45":"0",
-            "46":"0",
-            "47":"0",
-            "48":"0",
-            "49":"0",
-            "50":"0",
-            "51":"0",
-            "52":"0",
-            "53":"0",
-            "54":"0",
-            "55":"0",
-            "56":"0",
-            "57":"0",
-            "58":"0",
-            "59":"0",
-            "60":"0",
-            "61":"0",
-            "62":"0",
-            "63":"0"
+            "0" : "1",
+            "1" : "1",
+            "2" : "1",
+            "3" : "3",
+            "4" : "4",
+            "5" : "2",
+            "6" : "1",
+            "7" : "1",
+            "8" : "0",
+            "9" : "1",
+            "10": "1",
+            "11": "1",
+            "12": "1",
+            "13": "1",
+            "14": "1",
+            "15": "1",
+            "16": "1",
+            "17": "1",
+            "18": "1",
+            "19": "1",
+            "20": "1",
+            "21": "1",
+            "22": "1",
+            "23": "1",
+            "24": "1",
+            "25": "1",
+            "26": "1",
+            "27": "1",
+            "28": "1",
+            "29": "1",
+            "30": "1",
+            "31": "1",
+            "32": "1",
+            "33": "1",
+            "34": "1",
+            "35": "1",
+            "36": "1",
+            "37": "1",
+            "38": "1",
+            "39": "1",
+            "40": "1",
+            "41": "1",
+            "42": "1",
+            "43": "1",
+            "44": "1",
+            "45": "1",
+            "46": "5",
+            "47": "1",
+            "48": "6",
+            "49": "1",
+            "50": "1",
+            "51": "1",
+            "52": "1",
+            "53": "1",
+            "54": "1",
+            "55": "1",
+            "56": "1",
+            "57": "1",
+            "58": "1",
+            "59": "1",
+            "60": "1",
+            "61": "1",
+            "62": "1",
+            "63": "1"
         }
     },
+    "SCHEDULER": {
+        "scheduler.0": {
+            "type"  : "DWRR",
+            "weight": "1"
+        },
+        "scheduler.1": {
+            "type"  : "DWRR",
+            "weight": "1"
+        }
+    },
+    "QUEUE": {
+{% for port in port_names_list %}
+        "{{ port }}|3": {
+            "scheduler"   : "scheduler.1",
+            "wred_profile"  : "AZURE_LOSSLESS"
+        },
+{% endfor %}
+{% for port in port_names_list %}
+        "{{ port }}|4": {
+            "scheduler"   : "scheduler.1",
+            "wred_profile"  : "AZURE_LOSSLESS"
+        },
+{% endfor %}
+{% for port in port_names_list %}
+        "{{ port }}|0": {
+            "scheduler": "scheduler.0"
+        },
+{% endfor %}
+{% for port in port_names_list %}
+        "{{ port }}|1": {
+            "scheduler": "scheduler.0"
+        },
+{% endfor %}
+{% for port in port_names_list %}
+        "{{ port }}|2": {
+            "scheduler": "scheduler.0"
+        },
+{% endfor %}
+{% for port in port_names_list %}
+        "{{ port }}|5": {
+            "scheduler": "scheduler.0"
+        },
+{% endfor %}
+{% for port in port_names_list %}
+        "{{ port }}|6": {
+            "scheduler": "scheduler.0"
+        }{% if not loop.last %},{% endif %}
+
+{% endfor %}
+    },
     "PORT_QOS_MAP": {
-       "Ethernet180,Ethernet8,Ethernet44,Ethernet184,Ethernet188,Ethernet0,Ethernet4,Ethernet108,Ethernet248,Ethernet100,Ethernet244,Ethernet128,Ethernet104,Ethernet240,Ethernet40,Ethernet228,Ethernet96,Ethernet168,Ethernet148,Ethernet204,Ethernet120,Ethernet220,Ethernet144,Ethernet208,Ethernet160,Ethernet224,Ethernet140,Ethernet56,Ethernet164,Ethernet76,Ethernet72,Ethernet32,Ethernet16,Ethernet36,Ethernet12,Ethernet196,Ethernet28,Ethernet192,Ethernet200,Ethernet124,Ethernet24,Ethernet116,Ethernet80,Ethernet112,Ethernet84,Ethernet152,Ethernet136,Ethernet156,Ethernet92,Ethernet132,Ethernet48,Ethernet232,Ethernet172,Ethernet216,Ethernet236,Ethernet176,Ethernet212,Ethernet64,Ethernet88,Ethernet60,Ethernet52,Ethernet20,Ethernet68,Ethernet252": {
-            "tc_to_pg_map": "AZURE", 
+{% for port in port_names_list %}
+       "{{ port }}": {
+            "tc_to_pg_map": "AZURE",
             "tc_to_queue_map": "AZURE",
-            "dscp_to_tc_map": "AZURE", 
-            "pfc_enable": "4,5"
+            "dscp_to_tc_map": "AZURE",
+            "pfc_to_queue_map": "AZURE",
+            "pfc_enable": "3,4"
+        }{% if not loop.last %},{% endif %}
+
+{% endfor %}
+    },
+    "WRED_PROFILE": {
+        "AZURE_LOSSLESS" : {
+            "wred_green_enable"      : "true",
+            "wred_yellow_enable"     : "true",
+            "wred_red_enable"        : "true",
+            "ecn"                    : "ecn_all",
+            "green_max_threshold"    : "2097152",
+            "green_min_threshold"    : "1048576",
+            "yellow_max_threshold"   : "2097152",
+            "yellow_min_threshold"   : "1048576",
+            "red_max_threshold"      : "2097152",
+            "red_min_threshold"      : "1048576",
+            "green_drop_probability" : "5",
+            "yellow_drop_probability": "5",
+            "red_drop_probability"   : "5"
         }
     }
 }
diff --git a/device/celestica/x86_64-cel_midstone-r0/Midstone-200i_64x100nrz/sai.profile b/device/celestica/x86_64-cel_midstone-r0/Midstone-200i_64x100nrz/sai.profile
index 0769b3063..aba4fc81f 100755
--- a/device/celestica/x86_64-cel_midstone-r0/Midstone-200i_64x100nrz/sai.profile
+++ b/device/celestica/x86_64-cel_midstone-r0/Midstone-200i_64x100nrz/sai.profile
@@ -1 +1 @@
-SAI_INIT_CONFIG_FILE=/usr/share/sonic/hwsku/inno.config.yaml
+SAI_INIT_CONFIG_FILE=/usr/share/sonic/hwsku/ivm.sai.config.yaml
diff --git a/device/celestica/x86_64-cel_midstone-r0/Midstone-200i_64x200/buffers.json.j2 b/device/celestica/x86_64-cel_midstone-r0/Midstone-200i_64x200/buffers.json.j2
index 477c7ce6b..020656fdb 100644
--- a/device/celestica/x86_64-cel_midstone-r0/Midstone-200i_64x200/buffers.json.j2
+++ b/device/celestica/x86_64-cel_midstone-r0/Midstone-200i_64x200/buffers.json.j2
@@ -1,6 +1,5 @@
 {# Default values which will be used if no actual configura available #}
-{% set default_cable = '300m' %}
-{% set default_ports_num = 64 -%}
+{% set default_cable = '40m' %}
 
 {# Port configuration to cable length look-up table #}
 {# Each record describes mapping of DUT (DUT port) role and neighbor role to cable length #}
@@ -12,44 +11,53 @@
         }
 %}
 
-{%- macro cable_length(port_name) -%}
-    {%- set cable_len = [] -%}
-    {%- for local_port in DEVICE_NEIGHBOR -%}
-        {%- if local_port == port_name -%}
-            {%- if DEVICE_NEIGHBOR_METADATA[DEVICE_NEIGHBOR[local_port].name] -%}
-                {%- set neighbor = DEVICE_NEIGHBOR_METADATA[DEVICE_NEIGHBOR[local_port].name] -%}
-                {%- set neighbor_role = neighbor.type -%}
+{%- macro cable_length(port_name) %}
+    {%- set cable_len = [] %}
+    {%- for local_port in DEVICE_NEIGHBOR %}
+        {%- if local_port == port_name %}
+            {%- if DEVICE_NEIGHBOR_METADATA is defined and DEVICE_NEIGHBOR_METADATA[DEVICE_NEIGHBOR[local_port].name] %}
+                {%- set neighbor = DEVICE_NEIGHBOR_METADATA[DEVICE_NEIGHBOR[local_port].name] %}
+                {%- set neighbor_role = neighbor.type %}
                 {%- set roles1 = switch_role + '_' + neighbor_role %}
-                {%- set roles2 = neighbor_role + '_' + switch_role -%}
-                {%- set roles1 = roles1 | lower -%}
-                {%- set roles2 = roles2 | lower -%}
-                {%- if roles1 in ports2cable -%}
-                    {%- if cable_len.append(ports2cable[roles1]) -%}{%- endif -%}
-                {%- elif roles2 in ports2cable -%}
-                    {%- if cable_len.append(ports2cable[roles2]) -%}{%- endif -%}
-                {%- endif -%}
-            {%- endif -%}
-        {%- endif -%}
-    {%- endfor -%}
+                {%- set roles2 = neighbor_role + '_' + switch_role %}
+                {%- set roles1 = roles1 | lower %}
+                {%- set roles2 = roles2 | lower %}
+                {%- if roles1 in ports2cable %}
+                    {%- if cable_len.append(ports2cable[roles1]) %}{% endif %}
+                {%- elif roles2 in ports2cable %}
+                    {%- if cable_len.append(ports2cable[roles2]) %}{% endif %}
+                {%- endif %}
+            {%- endif %}
+        {%- endif %}
+    {%- endfor %}
     {%- if cable_len -%}
         {{ cable_len.0 }}
-    {%- else -%}
-        {{ default_cable }}
-    {%- endif -%}
-{% endmacro %}
+    {%- else %}
+        {%- if switch_role.lower() == 'torrouter' %}
+            {%- for local_port in VLAN_MEMBER %}
+                {%- if local_port[1] == port_name %}
+                    {%- set roles3 = switch_role + '_' + 'server' %}
+                    {%- set roles3 = roles3 | lower %}
+                    {%- if roles3 in ports2cable %}
+                        {%- if cable_len.append(ports2cable[roles3]) %}{% endif %}
+                    {%- endif %}
+                {%- endif %}
+            {%- endfor %}
+            {%- if cable_len -%}
+                {{ cable_len.0 }}
+            {%- else -%}
+                {{ default_cable }}
+            {%- endif %}
+        {%- else -%}
+            {{ default_cable }}
+        {%- endif %}
+    {%- endif %}
+{%- endmacro %}
 
 {%- if DEVICE_METADATA is defined %}
 {%- set switch_role = DEVICE_METADATA['localhost']['type'] %}
 {%- endif -%}
 
-{# Generate list of ports if not defined #}
-{% if PORT is not defined %}
-    {% set PORT = [] %}
-    {% for port_idx in range(0,default_ports_num) %}
-        {% if PORT.append("Ethernet%d" % (port_idx*4)) %}{% endif %}
-    {% endfor %}
-{% endif -%}
-
 {% set port_names_list = [] %}
 {% for port in PORT %}
     {%- if port_names_list.append(port) %}{% endif %}
@@ -57,64 +65,98 @@
 {% set port_names = port_names_list | join(',') -%}
 
 {
+    "CABLE_LENGTH": {
+        "AZURE": {
+    {% for port in PORT %}
+        {% set cable = cable_length(port) -%}
+        "{{ port }}": "{{ cable }}"{%- if not loop.last -%},{% endif %}
+
+    {% endfor %}
+    }
+    },
     "BUFFER_POOL": {
         "ingress_lossless_pool": {
-            "size": "47218432",
+            "size": "51691264",
             "type": "ingress",
             "mode": "dynamic",
             "xoff": "17708800"
         },
-        "egress_lossy_pool": {
+        "lossy_pool": {
             "size": "18874368",
             "type": "egress",
             "mode": "dynamic",
             "xoff": "0"
+        },
+        "egress_lossless_pool": {
+            "size": "70565632",
+            "type": "egress",
+            "mode": "static"
         }
     },
     "BUFFER_PROFILE": {
         "ingress_lossless_profile": {
             "pool":"ingress_lossless_pool",
-            "xoff":"1433600",
+            "xoff":"38816",
             "size":"1518",
-            "dynamic_th":"-4",
-            "xon_offset":"6272"
+            "dynamic_th":"1",
+            "xon_offset":"9408"
         },
-        "ingress_lossy_profile": {
+        "egress_lossless_profile": {
             "pool":"ingress_lossless_pool",
             "size":"0",
-            "static_th":"9721600"
+            "static_th":"10243072"
         },
-        "egress_lossless_profile": {
-            "pool":"egress_lossy_pool",
+        "ingress_lossy_profile": {
+            "pool":"lossy_pool",
             "size":"0",
-            "static_th":"9721600"
+            "static_th":"10243072"
         },
         "egress_lossy_profile": {
-            "pool":"egress_lossy_pool",
+            "pool":"lossy_pool",
             "size":"1518",
-            "dynamic_th":"3"
+            "dynamic_th":"2"
         }
     },
     "BUFFER_PG": {
-        "{{ port_names }}|0-3": {
-            "profile" : "egress_lossless_profile"
-        },
-        "{{ port_names }}|4-5": {
-            "profile" : "ingress_lossless_profile"
-        },
-        "{{ port_names }}|6-7": {
-            "profile" : "egress_lossless_profile"
-        }
+{% for port in port_names_list %}
+                "{{ port }}|3-4": {
+                     "profile" : "ingress_lossless_profile"
+                },
+{% endfor %}
+{% for port in port_names_list %}
+                "{{ port }}|0": {
+                    "profile" : "ingress_lossy_profile"
+                },
+{% endfor %}
+{% for port in port_names_list %}
+                "{{ port }}|1-2": {
+                    "profile" : "ingress_lossy_profile"
+                },
+{% endfor %}
+{% for port in port_names_list %}
+                "{{ port }}|5-7": {
+                    "profile" : "ingress_lossy_profile"
+                }{% if not loop.last %},{% endif %}
+
+{% endfor %}
     },
+
     "BUFFER_QUEUE": {
-        "{{ port_names }}|4-5": {
-            "profile" : "ingress_lossy_profile"
+{% for port in port_names_list %}
+        "{{ port }}|3-4": {
+             "profile" : "egress_lossless_profile"
         },
-        "{{ port_names }}|0-3": {
+{% endfor %}
+{% for port in port_names_list %}
+        "{{ port }}|0-2": {
             "profile" : "egress_lossy_profile"
         },
-        "{{ port_names }}|6-7": {
+{% endfor %}
+{% for port in port_names_list %}
+        "{{ port }}|5-7": {
             "profile" : "egress_lossy_profile"
-        }
+        }{% if not loop.last %},{% endif %}
+
+{% endfor %}
     }
 }
diff --git a/device/celestica/x86_64-cel_midstone-r0/Midstone-200i_64x200/config_64x200G_midstone200i.yaml b/device/celestica/x86_64-cel_midstone-r0/Midstone-200i_64x200/config_64x200G_midstone200i.yaml
index 7133de54e..8271bd6c4 100644
--- a/device/celestica/x86_64-cel_midstone-r0/Midstone-200i_64x200/config_64x200G_midstone200i.yaml
+++ b/device/celestica/x86_64-cel_midstone-r0/Midstone-200i_64x200/config_64x200G_midstone200i.yaml
@@ -4,12 +4,17 @@ ifcs:
 nodes:
 - node_id: "0"
   options:
+    sd_low_power_mode_global_default: "true"
     sku: "configs/sku/innovium.77700_B"
     netdev:
     - auto_create: "no"
       multi_interface: "yes"
     buffer_management_mode: "api_driven"
+    wred_cr_ip_proto_list: "17"
+    cr_assignment_mode: "1"
     max_lossless_tc: "2"
+    ilpm_enable: "1"
+    forward_profile: "IFCS_FORWARD_PROFILE_ID_PROFILE_E"
     txring:
     - txring_id: "0"
       desc_count: "1024"
@@ -504,20 +509,6 @@ nodes:
     speed: "200G"
     sysport: "1"
     type: "eth"
-  - fec: "NONE"
-    id: "257"
-    lanes: "0:1"
-    serdes_group: "32"
-    speed: "10G"
-    sysport: "257"
-    type: "mgmt 0"
-  - fec: "NONE"
-    id: "258"
-    lanes: "1:1"
-    serdes_group: "32"
-    speed: "10G"
-    sysport: "258"
-    type: "mgmt 0"
   isg:
   - id: "0"
     lane_swap: "01234567"
diff --git a/device/celestica/x86_64-cel_midstone-r0/Midstone-200i_64x200/innovium.77700_B b/device/celestica/x86_64-cel_midstone-r0/Midstone-200i_64x200/innovium.77700_B
index 27297b313..57ba52cbc 100644
--- a/device/celestica/x86_64-cel_midstone-r0/Midstone-200i_64x200/innovium.77700_B
+++ b/device/celestica/x86_64-cel_midstone-r0/Midstone-200i_64x200/innovium.77700_B
@@ -5,6 +5,7 @@ device_id:         0x1b58
 # Hardware constraint information
 hardware:
         num_ibs:           6
+        ib_active:         0,1,2,3,4,5
 
         ports_per_ib:      32, 32, 32, 32, 20, 20
         recirc_port_num:   32, 32, 32, 32, 32, 32
diff --git a/device/celestica/x86_64-cel_midstone-r0/Midstone-200i_64x200/port_config.ini b/device/celestica/x86_64-cel_midstone-r0/Midstone-200i_64x200/port_config.ini
index 3dcbf72bc..a45a17b52 100644
--- a/device/celestica/x86_64-cel_midstone-r0/Midstone-200i_64x200/port_config.ini
+++ b/device/celestica/x86_64-cel_midstone-r0/Midstone-200i_64x200/port_config.ini
@@ -1,67 +1,65 @@
-# name              lanes                   speed       index   mtu      fec
-Ethernet0           249,250,251,252         200000      0       9126     rs
-Ethernet4           253,254,255,256         200000      1       9126     rs
-Ethernet8           245,246,247,248         200000      2       9126     rs
-Ethernet12          241,242,243,244         200000      3       9126     rs
-Ethernet16          233,234,235,236         200000      4       9126     rs
-Ethernet20          237,238,239,240         200000      5       9126     rs
-Ethernet24          229,230,231,232         200000      6       9126     rs
-Ethernet28          225,226,227,228         200000      7       9126     rs
-Ethernet32          217,218,219,220         200000      8       9126     rs
-Ethernet36          221,222,223,224         200000      9       9126     rs
-Ethernet40          213,214,215,216         200000      10      9126     rs
-Ethernet44          209,210,211,212         200000      11      9126     rs
-Ethernet48          201,202,203,204         200000      12      9126     rs
-Ethernet52          205,206,207,208         200000      13      9126     rs
-Ethernet56          197,198,199,200         200000      14      9126     rs
-Ethernet60          193,194,195,196         200000      15      9126     rs
-Ethernet64          185,186,187,188         200000      16      9126     rs
-Ethernet68          189,190,191,192         200000      17      9126     rs
-Ethernet72          181,182,183,184         200000      18      9126     rs
-Ethernet76          177,178,179,180         200000      19      9126     rs
-Ethernet80          169,170,171,172         200000      20      9126     rs
-Ethernet84          173,174,175,176         200000      21      9126     rs
-Ethernet88          165,166,167,168         200000      22      9126     rs
-Ethernet92          161,162,163,164         200000      23      9126     rs
-Ethernet96          153,154,155,156         200000      24      9126     rs
-Ethernet100         157,158,159,160         200000      25      9126     rs
-Ethernet104         149,150,151,152         200000      26      9126     rs
-Ethernet108         145,146,147,148         200000      27      9126     rs
-Ethernet112         137,138,139,140         200000      28      9126     rs
-Ethernet116         141,142,143,144         200000      29      9126     rs
-Ethernet120         133,134,135,136         200000      30      9126     rs
-Ethernet124         129,130,131,132         200000      31      9126     rs
-Ethernet128         121,122,123,124         200000      32      9126     rs
-Ethernet132         125,126,127,128         200000      33      9126     rs
-Ethernet136         117,118,119,120         200000      34      9126     rs
-Ethernet140         113,114,115,116         200000      35      9126     rs
-Ethernet144         105,106,107,108         200000      36      9126     rs
-Ethernet148         109,110,111,112         200000      37      9126     rs
-Ethernet152         101,102,103,104         200000      38      9126     rs
-Ethernet156         97,98,99,100            200000      39      9126     rs
-Ethernet160         89,90,91,92             200000      40      9126     rs
-Ethernet164         93,94,95,96             200000      41      9126     rs
-Ethernet168         85,86,87,88             200000      42      9126     rs
-Ethernet172         81,82,83,84             200000      43      9126     rs
-Ethernet176         73,74,75,76             200000      44      9126     rs
-Ethernet180         77,78,79,80             200000      45      9126     rs
-Ethernet184         69,70,71,72             200000      46      9126     rs
-Ethernet188         65,66,67,68             200000      47      9126     rs
-Ethernet192         57,58,59,60             200000      48      9126     rs
-Ethernet196         61,62,63,64             200000      49      9126     rs
-Ethernet200         53,54,55,56             200000      50      9126     rs
-Ethernet204         49,50,51,52             200000      51      9126     rs
-Ethernet208         41,42,43,44             200000      52      9126     rs
-Ethernet212         45,46,47,48             200000      53      9126     rs
-Ethernet216         37,38,39,40             200000      54      9126     rs
-Ethernet220         33,34,35,36             200000      55      9126     rs
-Ethernet224         25,26,27,28             200000      56      9126     rs
-Ethernet228         29,30,31,32             200000      57      9126     rs
-Ethernet232         21,22,23,24             200000      58      9126     rs
-Ethernet236         17,18,19,20             200000      59      9126     rs
-Ethernet240         9,10,11,12              200000      60      9126     rs
-Ethernet244         13,14,15,16             200000      61      9126     rs
-Ethernet248         5,6,7,8                 200000      62      9126     rs
-Ethernet252         1,2,3,4                 200000      63      9126     rs
-Ethernet256         257                      10000      64      9126     none
-Ethernet257         258                      10000      65      9126     none
+# name              lanes               alias   speed       index   mtu      fec
+Ethernet0           249,250,251,252     Eth1    200000      0       9126     rs
+Ethernet4           253,254,255,256     Eth2    200000      1       9126     rs
+Ethernet8           245,246,247,248     Eth3    200000      2       9126     rs
+Ethernet12          241,242,243,244     Eth4    200000      3       9126     rs
+Ethernet16          233,234,235,236     Eth5    200000      4       9126     rs
+Ethernet20          237,238,239,240     Eth6    200000      5       9126     rs
+Ethernet24          229,230,231,232     Eth7    200000      6       9126     rs
+Ethernet28          225,226,227,228     Eth8    200000      7       9126     rs
+Ethernet32          217,218,219,220     Eth9    200000      8       9126     rs
+Ethernet36          221,222,223,224     Eth10   200000      9       9126     rs
+Ethernet40          213,214,215,216     Eth11   200000      10      9126     rs
+Ethernet44          209,210,211,212     Eth12   200000      11      9126     rs
+Ethernet48          201,202,203,204     Eth13   200000      12      9126     rs
+Ethernet52          205,206,207,208     Eth14   200000      13      9126     rs
+Ethernet56          197,198,199,200     Eth15   200000      14      9126     rs
+Ethernet60          193,194,195,196     Eth16   200000      15      9126     rs
+Ethernet64          185,186,187,188     Eth17   200000      16      9126     rs
+Ethernet68          189,190,191,192     Eth18   200000      17      9126     rs
+Ethernet72          181,182,183,184     Eth19   200000      18      9126     rs
+Ethernet76          177,178,179,180     Eth20   200000      19      9126     rs
+Ethernet80          169,170,171,172     Eth21   200000      20      9126     rs
+Ethernet84          173,174,175,176     Eth22   200000      21      9126     rs
+Ethernet88          165,166,167,168     Eth23   200000      22      9126     rs
+Ethernet92          161,162,163,164     Eth24   200000      23      9126     rs
+Ethernet96          153,154,155,156     Eth25   200000      24      9126     rs
+Ethernet100         157,158,159,160     Eth26   200000      25      9126     rs
+Ethernet104         149,150,151,152     Eth27   200000      26      9126     rs
+Ethernet108         145,146,147,148     Eth28   200000      27      9126     rs
+Ethernet112         137,138,139,140     Eth29   200000      28      9126     rs
+Ethernet116         141,142,143,144     Eth30   200000      29      9126     rs
+Ethernet120         133,134,135,136     Eth31   200000      30      9126     rs
+Ethernet124         129,130,131,132     Eth32   200000      31      9126     rs
+Ethernet128         121,122,123,124     Eth33   200000      32      9126     rs
+Ethernet132         125,126,127,128     Eth34   200000      33      9126     rs
+Ethernet136         117,118,119,120     Eth35   200000      34      9126     rs
+Ethernet140         113,114,115,116     Eth36   200000      35      9126     rs
+Ethernet144         105,106,107,108     Eth37   200000      36      9126     rs
+Ethernet148         109,110,111,112     Eth38   200000      37      9126     rs
+Ethernet152         101,102,103,104     Eth39   200000      38      9126     rs
+Ethernet156         97,98,99,100        Eth40   200000      39      9126     rs
+Ethernet160         89,90,91,92         Eth41   200000      40      9126     rs
+Ethernet164         93,94,95,96         Eth42   200000      41      9126     rs
+Ethernet168         85,86,87,88         Eth43   200000      42      9126     rs
+Ethernet172         81,82,83,84         Eth44   200000      43      9126     rs
+Ethernet176         73,74,75,76         Eth45   200000      44      9126     rs
+Ethernet180         77,78,79,80         Eth46   200000      45      9126     rs
+Ethernet184         69,70,71,72         Eth47   200000      46      9126     rs
+Ethernet188         65,66,67,68         Eth48   200000      47      9126     rs
+Ethernet192         57,58,59,60         Eth49   200000      48      9126     rs
+Ethernet196         61,62,63,64         Eth50   200000      49      9126     rs
+Ethernet200         53,54,55,56         Eth51   200000      50      9126     rs
+Ethernet204         49,50,51,52         Eth52   200000      51      9126     rs
+Ethernet208         41,42,43,44         Eth53   200000      52      9126     rs
+Ethernet212         45,46,47,48         Eth54   200000      53      9126     rs
+Ethernet216         37,38,39,40         Eth55   200000      54      9126     rs
+Ethernet220         33,34,35,36         Eth56   200000      55      9126     rs
+Ethernet224         25,26,27,28         Eth57   200000      56      9126     rs
+Ethernet228         29,30,31,32         Eth58   200000      57      9126     rs
+Ethernet232         21,22,23,24         Eth59   200000      58      9126     rs
+Ethernet236         17,18,19,20         Eth60   200000      59      9126     rs
+Ethernet240         9,10,11,12          Eth61   200000      60      9126     rs
+Ethernet244         13,14,15,16         Eth62   200000      61      9126     rs
+Ethernet248         5,6,7,8             Eth63   200000      62      9126     rs
+Ethernet252         1,2,3,4             Eth64   200000      63      9126     rs
diff --git a/device/celestica/x86_64-cel_midstone-r0/Midstone-200i_64x200/qos.json.j2 b/device/celestica/x86_64-cel_midstone-r0/Midstone-200i_64x200/qos.json.j2
index 73c878e66..0f1ecd110 100755
--- a/device/celestica/x86_64-cel_midstone-r0/Midstone-200i_64x200/qos.json.j2
+++ b/device/celestica/x86_64-cel_midstone-r0/Midstone-200i_64x200/qos.json.j2
@@ -1,14 +1,3 @@
-{# Default values which will be used if no actual configura available #}
-
-{% set default_ports_num = 64 -%}
-{# Generate list of ports if not defined #}
-{% if PORT is not defined %}
-    {% set PORT = [] %}
-    {% for port_idx in range(0,default_ports_num) %}
-        {% if PORT.append("Ethernet%d" % (port_idx*4)) %}{% endif %}
-    {% endfor %}
-{% endif -%}
-
 {% set port_names_list = [] %}
 {% for port in PORT %}
     {%- if port_names_list.append(port) %}{% endif %}
@@ -19,102 +8,185 @@
 {
    "TC_TO_QUEUE_MAP":{
         "AZURE":{
-            "1":"1",
             "0":"0",
-            "3":"3",
+            "1":"1",
             "2":"2",
-            "5":"5",
+            "3":"3",
             "4":"4",
-            "7":"7",
-            "6":"6"
+            "5":"5",
+            "6":"6",
+            "7":"7"
+        }
+    },
+    "MAP_PFC_PRIORITY_TO_QUEUE": {
+        "AZURE": {
+            "0": "0",
+            "1": "1",
+            "2": "2",
+            "3": "3",
+            "4": "4",
+            "5": "5",
+            "6": "6",
+            "7": "7"
         }
     },
     "TC_TO_PRIORITY_GROUP_MAP": {
     "AZURE": {
-        "1": "0",
         "0": "0",
-        "3": "0",
+        "1": "0",
         "2": "0",
-        "4": "1",
-        "5": "2",
+        "3": "3",
+        "4": "4",
+        "5": "0",
         "6": "0",
         "7": "0"
     }
     },
        "DSCP_TO_TC_MAP": {
         "AZURE": {
-            "0":"0",
-            "1":"0",
-            "2":"0",
-            "3":"0",
-            "4":"4",
-            "5":"5",
-            "6":"0",
-            "7":"0",
-            "8":"1",
-            "9":"0",
-            "10":"0",
-            "11":"0",
-            "12":"0",
-            "13":"0",
-            "14":"0",
-            "15":"0",
-            "16":"0",
-            "17":"0",
-            "18":"0",
-            "19":"0",
-            "20":"0",
-            "21":"0",
-            "22":"0",
-            "23":"0",
-            "24":"0",
-            "25":"0",
-            "26":"0",
-            "27":"0",
-            "28":"0",
-            "29":"0",
-            "30":"0",
-            "31":"0",
-            "32":"0",
-            "33":"0",
-            "34":"0",
-            "35":"0",
-            "36":"0",
-            "37":"0",
-            "38":"0",
-            "39":"0",
-            "40":"0",
-            "41":"0",
-            "42":"0",
-            "43":"0",
-            "44":"0",
-            "45":"0",
-            "46":"0",
-            "47":"0",
-            "48":"0",
-            "49":"0",
-            "50":"0",
-            "51":"0",
-            "52":"0",
-            "53":"0",
-            "54":"0",
-            "55":"0",
-            "56":"0",
-            "57":"0",
-            "58":"0",
-            "59":"0",
-            "60":"0",
-            "61":"0",
-            "62":"0",
-            "63":"0"
+            "0" : "1",
+            "1" : "1",
+            "2" : "1",
+            "3" : "3",
+            "4" : "4",
+            "5" : "2",
+            "6" : "1",
+            "7" : "1",
+            "8" : "0",
+            "9" : "1",
+            "10": "1",
+            "11": "1",
+            "12": "1",
+            "13": "1",
+            "14": "1",
+            "15": "1",
+            "16": "1",
+            "17": "1",
+            "18": "1",
+            "19": "1",
+            "20": "1",
+            "21": "1",
+            "22": "1",
+            "23": "1",
+            "24": "1",
+            "25": "1",
+            "26": "1",
+            "27": "1",
+            "28": "1",
+            "29": "1",
+            "30": "1",
+            "31": "1",
+            "32": "1",
+            "33": "1",
+            "34": "1",
+            "35": "1",
+            "36": "1",
+            "37": "1",
+            "38": "1",
+            "39": "1",
+            "40": "1",
+            "41": "1",
+            "42": "1",
+            "43": "1",
+            "44": "1",
+            "45": "1",
+            "46": "5",
+            "47": "1",
+            "48": "6",
+            "49": "1",
+            "50": "1",
+            "51": "1",
+            "52": "1",
+            "53": "1",
+            "54": "1",
+            "55": "1",
+            "56": "1",
+            "57": "1",
+            "58": "1",
+            "59": "1",
+            "60": "1",
+            "61": "1",
+            "62": "1",
+            "63": "1"
+        }
+    },
+    "SCHEDULER": {
+        "scheduler.0": {
+            "type"  : "DWRR",
+            "weight": "1"
+        },
+        "scheduler.1": {
+            "type"  : "DWRR",
+            "weight": "1"
         }
     },
+    "QUEUE": {
+{% for port in port_names_list %}
+        "{{ port }}|3": {
+            "scheduler"   : "scheduler.1",
+            "wred_profile"  : "AZURE_LOSSLESS"
+        },
+{% endfor %}
+{% for port in port_names_list %}
+        "{{ port }}|4": {
+            "scheduler"   : "scheduler.1",
+            "wred_profile"  : "AZURE_LOSSLESS"
+        },
+{% endfor %}
+{% for port in port_names_list %}
+        "{{ port }}|0": {
+            "scheduler": "scheduler.0"
+        },
+{% endfor %}
+{% for port in port_names_list %}
+        "{{ port }}|1": {
+            "scheduler": "scheduler.0"
+        },
+{% endfor %}
+{% for port in port_names_list %}
+        "{{ port }}|2": {
+            "scheduler": "scheduler.0"
+        },
+{% endfor %}
+{% for port in port_names_list %}
+        "{{ port }}|5": {
+            "scheduler": "scheduler.0"
+        },
+{% endfor %}
+{% for port in port_names_list %}
+        "{{ port }}|6": {
+            "scheduler": "scheduler.0"
+        }{% if not loop.last %},{% endif %}
+
+{% endfor %}
+    },
     "PORT_QOS_MAP": {
-       "{{ port_names }}": {
+{% for port in port_names_list %}
+       "{{ port }}": {
             "tc_to_pg_map": "AZURE",
             "tc_to_queue_map": "AZURE",
             "dscp_to_tc_map": "AZURE",
-            "pfc_enable": "4,5"
+            "pfc_to_queue_map": "AZURE",
+            "pfc_enable": "3,4"
+        }{% if not loop.last %},{% endif %}
+
+{% endfor %}
+    },
+    "WRED_PROFILE": {
+        "AZURE_LOSSLESS" : {
+            "wred_green_enable"      : "true",
+            "wred_yellow_enable"     : "true",
+            "wred_red_enable"        : "true",
+            "ecn"                    : "ecn_all",
+            "green_max_threshold"    : "2097152",
+            "green_min_threshold"    : "1048576",
+            "yellow_max_threshold"   : "2097152",
+            "yellow_min_threshold"   : "1048576",
+            "red_max_threshold"      : "2097152",
+            "red_min_threshold"      : "1048576",
+            "green_drop_probability" : "5",
+            "yellow_drop_probability": "5",
+            "red_drop_probability"   : "5"
         }
     }
 }
diff --git a/device/celestica/x86_64-cel_midstone-r0/Midstone-200i_64x200/sai.profile b/device/celestica/x86_64-cel_midstone-r0/Midstone-200i_64x200/sai.profile
index 0769b3063..aba4fc81f 100755
--- a/device/celestica/x86_64-cel_midstone-r0/Midstone-200i_64x200/sai.profile
+++ b/device/celestica/x86_64-cel_midstone-r0/Midstone-200i_64x200/sai.profile
@@ -1 +1 @@
-SAI_INIT_CONFIG_FILE=/usr/share/sonic/hwsku/inno.config.yaml
+SAI_INIT_CONFIG_FILE=/usr/share/sonic/hwsku/ivm.sai.config.yaml
diff --git a/device/celestica/x86_64-cel_midstone-r0/installer.conf b/device/celestica/x86_64-cel_midstone-r0/installer.conf
index 925a32fc0..9544f1a63 100755
--- a/device/celestica/x86_64-cel_midstone-r0/installer.conf
+++ b/device/celestica/x86_64-cel_midstone-r0/installer.conf
@@ -1,3 +1,4 @@
+ONIE_PLATFORM_EXTRA_CMDLINE_LINUX="intel_iommu=off"
 CONSOLE_PORT=0x3f8
 CONSOLE_DEV=0
 CONSOLE_SPEED=115200
diff --git a/device/wistron/x86_64-wistron_6512_32r-r0/installer.conf b/device/wistron/x86_64-wistron_6512_32r-r0/installer.conf
index d5f9419d7..0bd1a8bae 100644
--- a/device/wistron/x86_64-wistron_6512_32r-r0/installer.conf
+++ b/device/wistron/x86_64-wistron_6512_32r-r0/installer.conf
@@ -1,4 +1,4 @@
 CONSOLE_PORT=0x3f8
 CONSOLE_DEV=0
 CONSOLE_SPEED=115200
-ONIE_PLATFORM_EXTRA_CMDLINE_LINUX="pcie_aspm=off"
+ONIE_PLATFORM_EXTRA_CMDLINE_LINUX="pcie_aspm=off intel_iommu=off"
diff --git a/device/wistron/x86_64-wistron_6512_32r-r0/plugins/sfputil.py b/device/wistron/x86_64-wistron_6512_32r-r0/plugins/sfputil.py
index 8dbc6ba85..c38b792bb 100644
--- a/device/wistron/x86_64-wistron_6512_32r-r0/plugins/sfputil.py
+++ b/device/wistron/x86_64-wistron_6512_32r-r0/plugins/sfputil.py
@@ -111,6 +111,7 @@ class SfpUtil(SfpUtilBase):
             val_file.close()
         except IOError as e:
             print("Error: unable to access file: %s" % str(e))
+            val_file.close()
             return False
 
         if content == "1":
@@ -134,6 +135,7 @@ class SfpUtil(SfpUtilBase):
             val_file.close()
         except IOError as e:
             print("Error: unable to access file: %s" % str(e))
+            val_file.close()
             return False
 
         if content == "1":
@@ -158,10 +160,35 @@ class SfpUtil(SfpUtilBase):
             return True
         except IOError as e:
             print("Error: unable to open file: %s" % str(e))
+            val_file.close()
             return False
 
     def reset(self, port_num):
-        raise NotImplementedError
+        if port_num < self.port_start or port_num > self.port_end:
+            return False
+        if not self.get_presence(port_num):
+            return False  # Port is not present, unable to set reset
+
+        if port_num < 16:
+            reset_path = self.BASE_CPLD1_PATH + "port" + str(port_num+1) + "_reset"
+        else:
+            reset_path = self.BASE_CPLD2_PATH + "port" + str(port_num+1) + "_reset"
+
+        self.__port_to_mod_rst = reset_path
+
+        try:
+            val_file = open(self.__port_to_mod_rst, 'w')
+            val_file.write('1')
+            time.sleep(1)
+            val_file.write('0')
+            time.sleep(1)
+            val_file.close()
+            return True
+        except IOError as e:
+            print("Error: unable to open file: %s" % str(e))
+            val_file.close()
+            return False
+
 
     def _get_sfp_presence(self):
         port_pres = {}
diff --git a/device/wistron/x86_64-wistron_6512_32r-r0/sonic_platform/sfp.py b/device/wistron/x86_64-wistron_6512_32r-r0/sonic_platform/sfp.py
index 7664999e5..226cf6eab 100644
--- a/device/wistron/x86_64-wistron_6512_32r-r0/sonic_platform/sfp.py
+++ b/device/wistron/x86_64-wistron_6512_32r-r0/sonic_platform/sfp.py
@@ -5,198 +5,33 @@
 # provides the sfp device status which are available in the platform
 #############################################################################
 try:
-    from sonic_platform_base.sfp_base import SfpBase
-    from sonic_platform_base.sonic_sfp.sff8436 import sff8436InterfaceId
-    from sonic_platform_base.sonic_sfp.sff8436 import sff8436Dom
-    from sonic_platform_base.sonic_sfp.qsfp_dd import qsfp_dd_InterfaceId
-    from sonic_platform_base.sonic_sfp.qsfp_dd import qsfp_dd_Dom
+    from sonic_platform_base.sonic_xcvr.sfp_optoe_base import SfpOptoeBase
     from sonic_py_common.logger import Logger
     import sys
-except ImportError as e:
-    raise ImportError(str(e) + "- required module not found")
+    import time
+except ImportError as err:
+    raise ImportError(str(err) + "- required module not found")
 
-# definitions of the offset and width for values in XCVR info eeprom
-XCVR_INTFACE_BULK_OFFSET = 0
-XCVR_INTFACE_BULK_WIDTH_QSFP = 20
-XCVR_INTFACE_BULK_WIDTH_SFP = 21
-XCVR_TYPE_OFFSET = 0
-XCVR_TYPE_WIDTH = 1
-XCVR_EXT_TYPE_OFFSET = 1
-XCVR_EXT_TYPE_WIDTH = 1
-XCVR_CONNECTOR_OFFSET = 2
-XCVR_CONNECTOR_WIDTH = 1
-XCVR_COMPLIANCE_CODE_OFFSET = 3
-XCVR_COMPLIANCE_CODE_WIDTH = 8
-XCVR_ENCODING_OFFSET = 11
-XCVR_ENCODING_WIDTH = 1
-XCVR_NBR_OFFSET = 12
-XCVR_NBR_WIDTH = 1
-XCVR_EXT_RATE_SEL_OFFSET = 13
-XCVR_EXT_RATE_SEL_WIDTH = 1
-XCVR_CABLE_LENGTH_OFFSET = 14
-XCVR_CABLE_LENGTH_WIDTH_QSFP = 5
-XCVR_CABLE_LENGTH_WIDTH_SFP = 6
-XCVR_VENDOR_NAME_OFFSET = 20
-XCVR_VENDOR_NAME_WIDTH = 16
-XCVR_VENDOR_OUI_OFFSET = 37
-XCVR_VENDOR_OUI_WIDTH = 3
-XCVR_VENDOR_PN_OFFSET = 40
-XCVR_VENDOR_PN_WIDTH = 16
-XCVR_HW_REV_OFFSET = 56
-XCVR_HW_REV_WIDTH_OSFP = 2
-XCVR_HW_REV_WIDTH_QSFP = 2
-XCVR_HW_REV_WIDTH_SFP = 4
-XCVR_EXT_SPECIFICATION_COMPLIANCE_OFFSET = 64
-XCVR_EXT_SPECIFICATION_COMPLIANCE_WIDTH = 1
-XCVR_VENDOR_SN_OFFSET = 68
-XCVR_VENDOR_SN_WIDTH = 16
-XCVR_VENDOR_DATE_OFFSET = 84
-XCVR_VENDOR_DATE_WIDTH = 8
-XCVR_DOM_CAPABILITY_OFFSET = 92
-XCVR_DOM_CAPABILITY_WIDTH = 2
-
-# definitions of the offset and width for values in XCVR_QSFP_DD info eeprom
-XCVR_EXT_TYPE_OFFSET_QSFP_DD = 72
-XCVR_EXT_TYPE_WIDTH_QSFP_DD = 2
-XCVR_CONNECTOR_OFFSET_QSFP_DD = 75
-XCVR_CONNECTOR_WIDTH_QSFP_DD = 1
-XCVR_CABLE_LENGTH_OFFSET_QSFP_DD = 74
-XCVR_CABLE_LENGTH_WIDTH_QSFP_DD = 1
-XCVR_HW_REV_OFFSET_QSFP_DD = 36
-XCVR_HW_REV_WIDTH_QSFP_DD = 2
-XCVR_VENDOR_DATE_OFFSET_QSFP_DD = 54
-XCVR_VENDOR_DATE_WIDTH_QSFP_DD = 8
-XCVR_DOM_CAPABILITY_OFFSET_QSFP_DD = 2
-XCVR_DOM_CAPABILITY_WIDTH_QSFP_DD = 1
-XCVR_MEDIA_TYPE_OFFSET_QSFP_DD = 85
-XCVR_MEDIA_TYPE_WIDTH_QSFP_DD = 1
-XCVR_FIRST_APPLICATION_LIST_OFFSET_QSFP_DD = 86
-XCVR_FIRST_APPLICATION_LIST_WIDTH_QSFP_DD = 32
-XCVR_SECOND_APPLICATION_LIST_OFFSET_QSFP_DD = 351
-XCVR_SECOND_APPLICATION_LIST_WIDTH_QSFP_DD = 28
-
-XCVR_INTERFACE_DATA_START = 0
-XCVR_INTERFACE_DATA_SIZE = 92
-SFP_MODULE_ADDRA2_OFFSET = 256
-SFP_MODULE_THRESHOLD_OFFSET = 0
-SFP_MODULE_THRESHOLD_WIDTH = 56
-
-QSFP_DOM_BULK_DATA_START = 22
-QSFP_DOM_BULK_DATA_SIZE = 36
-SFP_DOM_BULK_DATA_START = 96
-SFP_DOM_BULK_DATA_SIZE = 10
-
-QSFP_DD_DOM_BULK_DATA_START = 14
-QSFP_DD_DOM_BULK_DATA_SIZE = 4
-
-# definitions of the offset for values in OSFP info eeprom
-OSFP_TYPE_OFFSET = 0
-OSFP_VENDOR_NAME_OFFSET = 129
-OSFP_VENDOR_PN_OFFSET = 148
-OSFP_HW_REV_OFFSET = 164
-OSFP_VENDOR_SN_OFFSET = 166
-
-# definitions of the offset for values in QSFP_DD info eeprom
-QSFP_DD_TYPE_OFFSET = 0
-QSFP_DD_VENDOR_NAME_OFFSET = 1
-QSFP_DD_VENDOR_PN_OFFSET = 20
-QSFP_DD_VENDOR_SN_OFFSET = 38
-QSFP_DD_VENDOR_OUI_OFFSET = 17
-
-#definitions of the offset and width for values in DOM info eeprom
-QSFP_DOM_REV_OFFSET = 1
-QSFP_DOM_REV_WIDTH = 1
-QSFP_TEMPE_OFFSET = 22
-QSFP_TEMPE_WIDTH = 2
-QSFP_VOLT_OFFSET = 26
-QSFP_VOLT_WIDTH = 2
-QSFP_VERSION_COMPLIANCE_OFFSET = 1
-QSFP_VERSION_COMPLIANCE_WIDTH = 2
-QSFP_CHANNL_MON_OFFSET = 34
-QSFP_CHANNL_MON_WIDTH = 16
-QSFP_CHANNL_MON_WITH_TX_POWER_WIDTH = 24
-QSFP_CHANNL_DISABLE_STATUS_OFFSET = 86
-QSFP_CHANNL_DISABLE_STATUS_WIDTH = 1
-QSFP_CHANNL_RX_LOS_STATUS_OFFSET = 3
-QSFP_CHANNL_RX_LOS_STATUS_WIDTH = 1
-QSFP_CHANNL_TX_FAULT_STATUS_OFFSET = 4
-QSFP_CHANNL_TX_FAULT_STATUS_WIDTH = 1
-QSFP_CONTROL_OFFSET = 86
-QSFP_CONTROL_WIDTH = 8
-QSFP_MODULE_MONITOR_OFFSET = 0
-QSFP_MODULE_MONITOR_WIDTH = 9
-QSFP_POWEROVERRIDE_OFFSET = 93
-QSFP_POWEROVERRIDE_WIDTH = 1
-QSFP_POWEROVERRIDE_BIT = 0
-QSFP_POWERSET_BIT = 1
-QSFP_OPTION_VALUE_OFFSET = 192
-QSFP_OPTION_VALUE_WIDTH = 4
-
-QSFP_MODULE_UPPER_PAGE3_START = 384
-QSFP_MODULE_THRESHOLD_OFFSET = 128
-QSFP_MODULE_THRESHOLD_WIDTH = 24
-QSFP_CHANNL_THRESHOLD_OFFSET = 176
-QSFP_CHANNL_THRESHOLD_WIDTH = 24
-
-#definitions of the offset and width for values in DOM info eeprom
-QSFP_DD_TEMPE_OFFSET = 14
-QSFP_DD_TEMPE_WIDTH = 2
-QSFP_DD_VOLT_OFFSET = 16
-QSFP_DD_VOLT_WIDTH = 2
-QSFP_DD_TX_BIAS_OFFSET = 42
-QSFP_DD_TX_BIAS_WIDTH = 16
-QSFP_DD_RX_POWER_OFFSET = 58
-QSFP_DD_RX_POWER_WIDTH = 16
-QSFP_DD_TX_POWER_OFFSET = 26
-QSFP_DD_TX_POWER_WIDTH = 16
-QSFP_DD_CHANNL_MON_OFFSET = 154
-QSFP_DD_CHANNL_MON_WIDTH = 48
-QSFP_DD_CHANNL_DISABLE_STATUS_OFFSET = 86
-QSFP_DD_CHANNL_DISABLE_STATUS_WIDTH = 1
-QSFP_DD_CHANNL_RX_LOS_STATUS_OFFSET = 19
-QSFP_DD_CHANNL_RX_LOS_STATUS_WIDTH = 1
-QSFP_DD_CHANNL_TX_FAULT_STATUS_OFFSET = 7
-QSFP_DD_CHANNL_TX_FAULT_STATUS_WIDTH = 1
-QSFP_DD_MODULE_THRESHOLD_OFFSET = 0
-QSFP_DD_MODULE_THRESHOLD_WIDTH = 72
-QSFP_DD_CHANNL_STATUS_OFFSET = 26
-QSFP_DD_CHANNL_STATUS_WIDTH = 1
 
 QSFP_TYPE_CODE_LIST = [
-    '0d', # QSFP+ or later
-    '11' # QSFP28 or later
+    '0x0d', # QSFP+ or later
+    '0x11'  # QSFP28 or later
 ]
 
 QSFP_DD_TYPE_CODE_LIST = [
-    '18' # QSFP-DD Double Density 8X Pluggable Transceiver
+    '0x18' # QSFP-DD Double Density 8X Pluggable Transceiver
 ]
 
-qsfp_cable_length_tup = ('Length(km)', 'Length OM3(2m)',
-                         'Length OM2(m)', 'Length OM1(m)',
-                         'Length Cable Assembly(m)')
-
-sfp_cable_length_tup = ('LengthSMFkm-UnitsOfKm', 'LengthSMF(UnitsOf100m)',
-                        'Length50um(UnitsOf10m)', 'Length62.5um(UnitsOfm)',
-                        'LengthCable(UnitsOfm)', 'LengthOM3(UnitsOf10m)')
-
-sfp_compliance_code_tup = ('10GEthernetComplianceCode', 'InfinibandComplianceCode',
-                            'ESCONComplianceCodes', 'SONETComplianceCodes',
-                            'EthernetComplianceCodes','FibreChannelLinkLength',
-                            'FibreChannelTechnology', 'SFP+CableTechnology',
-                            'FibreChannelTransmissionMedia','FibreChannelSpeed')
-
-qsfp_compliance_code_tup = ('10/40G Ethernet Compliance Code', 'SONET Compliance codes',
-                            'SAS/SATA compliance codes', 'Gigabit Ethernet Compliant codes',
-                            'Fibre Channel link length/Transmitter Technology',
-                            'Fibre Channel transmission media', 'Fibre Channel Speed')
 
 QSFP_TYPE = "QSFP"
 QSFP_DD_TYPE = "QSFP_DD"
 
+
 # Global logger class instance
 logger = Logger()
 
-class Sfp(SfpBase):
+
+class Sfp(SfpOptoeBase):
     """Platform-specific Sfp class"""
 
     # Port number
@@ -235,35 +70,66 @@ class Sfp(SfpBase):
         28: '2c',
         29: '2d',
         30: '2e',
-        31: '2f',
+        31: '2f'
     }
 
-    _sfp_port = range(32, PORT_END + 1)
     RESET_1_16_PATH = "/sys/bus/i2c/devices/0-0006/port{}_reset"
     RESET_17_32_PATH = "/sys/bus/i2c/devices/0-0007/port{}_reset"
     PRS_1_16_PATH = "/sys/bus/i2c/devices/0-0006/port{}_present"
     PRS_17_32_PATH = "/sys/bus/i2c/devices/0-0007/port{}_present"
+    LPMODE_1_16_PATH = "/sys/bus/i2c/devices/0-0006/port{}_lpmode"
+    LPMODE_17_32_PATH = "/sys/bus/i2c/devices/0-0007/port{}_lpmode"
 
     def __init__(self, sfp_index, sfp_type):
         # Init index
+        SfpOptoeBase.__init__(self)
         self.index = sfp_index
+        self.sfp_type = sfp_type
+
         self.port_num = self.index + 1
+        self.port_type = self.sfp_type
 
         # Init eeprom path
         eeprom_path_prefix = '/sys/bus/i2c/devices/0-00'
         self.port_to_eeprom1_mapping = {}
         self.port_to_eeprom2_mapping = {}
+        self.port_to_eeprom3_mapping = {}
+        self.port_to_eeprom4_mapping = {}
+        self.port_to_eeprom12_mapping = {}
+        self.port_to_power_mode_mapping = {}
+        self.port_to_grid_mapping = {}
+        self.port_to_freq_mapping = {}
+        self.port_to_outp_mapping = {}
         for x in range(self.PORT_START, self.PORT_END + 1):
             self.port_to_eeprom1_mapping[x] = eeprom_path_prefix + self.port_to_i2c_mapping[x] + '/eeprom1'
             self.port_to_eeprom2_mapping[x] = eeprom_path_prefix + self.port_to_i2c_mapping[x] + '/eeprom2'
+            self.port_to_eeprom3_mapping[x] = eeprom_path_prefix + self.port_to_i2c_mapping[x] + '/eeprom3'
+            self.port_to_eeprom4_mapping[x] = eeprom_path_prefix + self.port_to_i2c_mapping[x] + '/eeprom_pg4'
+            self.port_to_eeprom12_mapping[x] = eeprom_path_prefix + self.port_to_i2c_mapping[x] + '/eeprom_pg12'
+            self.port_to_power_mode_mapping[x] = eeprom_path_prefix + self.port_to_i2c_mapping[x] + '/power_mode'
+            self.port_to_grid_mapping[x] = eeprom_path_prefix + self.port_to_i2c_mapping[x] + '/grid'
+            self.port_to_freq_mapping[x] = eeprom_path_prefix + self.port_to_i2c_mapping[x] + '/freq'
+            self.port_to_outp_mapping[x] = eeprom_path_prefix + self.port_to_i2c_mapping[x] + '/output_power'
 
-        self._detect_sfp_type(sfp_type)
-        self._dom_capability_detect()
-        SfpBase.__init__(self)
+        self.reinit()
 
     def reinit(self):
         self._detect_sfp_type(self.sfp_type)
-        self._dom_capability_detect()
+
+    def _detect_sfp_type(self, sfp_type):
+        eeprom_raw = []
+        eeprom_raw = self._xcvr_api_factory._get_id()
+        if eeprom_raw is not None:
+            eeprom_raw = hex(eeprom_raw)
+            if eeprom_raw in QSFP_TYPE_CODE_LIST:
+                self.sfp_type = QSFP_TYPE
+            elif eeprom_raw in QSFP_DD_TYPE_CODE_LIST:
+                self.sfp_type = QSFP_DD_TYPE
+            else:
+                # Set native port type if EEPROM type is not recognized/readable
+                self.sfp_type = self.port_type
+        else:
+            self.sfp_type = self.port_type
 
     def get_presence(self):
         """
@@ -274,671 +140,15 @@ class Sfp(SfpBase):
         presence = False
         try:
             if self.index < 16:
-                pres_path=self.PRS_1_16_PATH.format(self.port_num)
+                pres_path = self.PRS_1_16_PATH.format(self.port_num)
             else:
-                pres_path=self.PRS_17_32_PATH.format(self.port_num)
+                pres_path = self.PRS_17_32_PATH.format(self.port_num)
             with open(pres_path, 'r') as sfp_presence:
                 presence = int(sfp_presence.read(), 16)
         except IOError:
             return False
         logger.log_info("debug:port_ %s sfp presence is %s" % (str(self.index), str(presence)))
-        return presence
-
-    def _read_eeprom_specific_bytes(self, offset, num_bytes):
-        sysfsfile_eeprom = None
-        eeprom_raw = []
-        for i in range(0, num_bytes):
-            eeprom_raw.append("0x00")
-
-        if offset < 256:
-            sysfs_sfp_i2c_client_eeprom_path = self.port_to_eeprom1_mapping[self.index]
-        else:
-            sysfs_sfp_i2c_client_eeprom_path = self.port_to_eeprom2_mapping[self.index]
-            offset = offset - 256
-
-        try:
-            sysfsfile_eeprom = open(sysfs_sfp_i2c_client_eeprom_path, mode="rb", buffering=0)
-            sysfsfile_eeprom.seek(offset)
-            raw = sysfsfile_eeprom.read(num_bytes)
-            if sys.version_info[0] >= 3:
-                for n in range(0, num_bytes):
-                    eeprom_raw[n] = hex(raw[n])[2:].zfill(2)
-            else:
-                for n in range(0, num_bytes):
-                    eeprom_raw[n] = hex(ord(raw[n]))[2:].zfill(2)
-
-        except BaseException:
-            pass
-        finally:
-            if sysfsfile_eeprom:
-                sysfsfile_eeprom.close()
-
-        return eeprom_raw
-
-    def _detect_sfp_type(self, sfp_type):
-        eeprom_raw = []
-        eeprom_raw = self._read_eeprom_specific_bytes(XCVR_TYPE_OFFSET, XCVR_TYPE_WIDTH)
-        if eeprom_raw:
-            if eeprom_raw[0] in QSFP_TYPE_CODE_LIST:
-                self.sfp_type = QSFP_TYPE
-            elif eeprom_raw[0] in QSFP_DD_TYPE_CODE_LIST:
-                self.sfp_type = QSFP_DD_TYPE
-            else:
-                # we don't regonize this identifier value, treat the xSFP module as the default type
-                self.sfp_type = sfp_type
-                logger.log_info("Identifier value of {} module {} is {} which isn't regonized and will be treated as default type ({})".format(
-                    sfp_type, self.index, eeprom_raw[0], sfp_type
-                ))
-        else:
-            # eeprom_raw being None indicates the module is not present.
-            # in this case we treat it as the default type according to the SKU
-            self.sfp_type = sfp_type
-
-    def _dom_capability_detect(self):
-        if not self.get_presence():
-            self.dom_supported = False
-            self.dom_temp_supported = False
-            self.dom_volt_supported = False
-            self.dom_rx_power_supported = False
-            self.dom_tx_bias_power_supported = False
-            self.dom_tx_power_supported = False
-            self.dom_channel_monitor_supported = False
-            self.dom_module_monitor_supported = False
-            self.dom_channel_treshold_supported = False
-            self.dom_module_treshold_supported =False
-            self.calibration = 0
-            return
-
-        self.dom_channel_monitor_supported = False
-        self.dom_module_monitor_supported = True
-        self.dom_channel_treshold_supported = False
-        self.dom_module_treshold_supported =False
-
-        if self.sfp_type == QSFP_TYPE:
-            self.calibration = 1
-            sfpi_obj = sff8436InterfaceId()
-            if sfpi_obj is None:
-                self.dom_supported = False
-            offset = 128
-
-            # QSFP capability byte parse, through this byte can know whether it support tx_power or not.
-            # TODO: in the future when decided to migrate to support SFF-8636 instead of SFF-8436,
-            # need to add more code for determining the capability and version compliance
-            # in SFF-8636 dom capability definitions evolving with the versions.
-            qsfp_dom_capability_raw = self._read_eeprom_specific_bytes((offset + XCVR_DOM_CAPABILITY_OFFSET), XCVR_DOM_CAPABILITY_WIDTH)
-            if qsfp_dom_capability_raw is not None:
-                qsfp_version_compliance_raw = self._read_eeprom_specific_bytes(QSFP_VERSION_COMPLIANCE_OFFSET, QSFP_VERSION_COMPLIANCE_WIDTH)
-                qsfp_version_compliance = int(qsfp_version_compliance_raw[0], 16)
-                dom_capability = sfpi_obj.parse_qsfp_dom_capability(qsfp_dom_capability_raw, 0)
-                if qsfp_version_compliance >= 0x08:
-                    self.dom_temp_supported = dom_capability['data']['Temp_support']['value'] == 'On'
-                    self.dom_volt_supported = dom_capability['data']['Voltage_support']['value'] == 'On'
-                    self.dom_rx_power_supported = dom_capability['data']['Rx_power_support']['value'] == 'On'
-                    self.dom_tx_power_supported = dom_capability['data']['Tx_power_support']['value'] == 'On'
-                else:
-                    self.dom_temp_supported = True
-                    self.dom_volt_supported = True
-                    self.dom_rx_power_supported = dom_capability['data']['Rx_power_support']['value'] == 'On'
-                    self.dom_tx_power_supported = True
-                self.dom_supported = True
-                self.calibration = 1
-                sfpd_obj = sff8436Dom()
-                if sfpd_obj is None:
-                    return None
-                qsfp_option_value_raw = self._read_eeprom_specific_bytes(QSFP_OPTION_VALUE_OFFSET, QSFP_OPTION_VALUE_WIDTH)
-                if qsfp_option_value_raw is not None:
-                    optional_capability = sfpd_obj.parse_option_params(qsfp_option_value_raw, 0)
-                    self.dom_tx_disable_supported = optional_capability['data']['TxDisable']['value'] == 'On'
-                dom_status_indicator = sfpd_obj.parse_dom_status_indicator(qsfp_version_compliance_raw, 1)
-                self.qsfp_page3_available = dom_status_indicator['data']['FlatMem']['value'] == 'Off'
-            else:
-                self.dom_supported = False
-                self.dom_temp_supported = False
-                self.dom_volt_supported = False
-                self.dom_rx_power_supported = False
-                self.dom_tx_power_supported = False
-                self.calibration = 0
-                self.qsfp_page3_available = False
-
-        elif self.sfp_type == QSFP_DD_TYPE:
-            sfpi_obj = qsfp_dd_InterfaceId()
-            if sfpi_obj is None:
-                self.dom_supported = False
-
-            offset = 0
-            # two types of QSFP-DD cable types supported: Copper and Optical.
-            qsfp_dom_capability_raw = self._read_eeprom_specific_bytes((offset + XCVR_DOM_CAPABILITY_OFFSET_QSFP_DD), XCVR_DOM_CAPABILITY_WIDTH_QSFP_DD)
-            if qsfp_dom_capability_raw is not None:
-                self.dom_temp_supported = True
-                self.dom_volt_supported = True
-                dom_capability = sfpi_obj.parse_dom_capability(qsfp_dom_capability_raw, 0)
-                if dom_capability['data']['Flat_MEM']['value'] == 'Off':
-                    self.dom_supported = False
-                    self.dom_rx_power_supported = False
-                    self.dom_tx_power_supported = False
-                    self.dom_tx_bias_power_supported = False
-                    self.dom_thresholds_supported = False
-                else:
-                    self.dom_supported = False
-                    self.dom_rx_power_supported = False
-                    self.dom_tx_power_supported = False
-                    self.dom_tx_bias_power_supported = False
-                    self.dom_thresholds_supported = False
-            else:
-                self.dom_supported = False
-                self.dom_temp_supported = False
-                self.dom_volt_supported = False
-                self.dom_rx_power_supported = False
-                self.dom_tx_power_supported = False
-                self.dom_tx_bias_power_supported = False
-                self.dom_thresholds_supported = False
-
-        else:
-            self.dom_supported = False
-            self.dom_temp_supported = False
-            self.dom_volt_supported = False
-            self.dom_rx_power_supported = False
-            self.dom_tx_power_supported = False
-
-    def _convert_string_to_num(self, value_str):
-        if "-inf" in value_str:
-            return 'N/A'
-        elif "Unknown" in value_str:
-            return 'N/A'
-        elif 'dBm' in value_str:
-            t_str = value_str.rstrip('dBm')
-            return float(t_str)
-        elif 'mA' in value_str:
-            t_str = value_str.rstrip('mA')
-            return float(t_str)
-        elif 'C' in value_str:
-            t_str = value_str.rstrip('C')
-            return float(t_str)
-        elif 'Volts' in value_str:
-            t_str = value_str.rstrip('Volts')
-            return float(t_str)
-        else:
-            return 'N/A'
-
-    def get_transceiver_info(self):
-        """
-        Retrieves transceiver info of this SFP
-
-        Returns:
-            A dict which contains following keys/values :
-        ================================================================================
-        keys                       |Value Format   |Information
-        ---------------------------|---------------|----------------------------
-        type                       |1*255VCHAR     |type of SFP
-        hardware_rev               |1*255VCHAR     |hardware version of SFP
-        serial                     |1*255VCHAR     |serial number of the SFP
-        manufacturer               |1*255VCHAR     |SFP vendor name
-        model                      |1*255VCHAR     |SFP model name
-        connector                  |1*255VCHAR     |connector information
-        encoding                   |1*255VCHAR     |encoding information
-        ext_identifier             |1*255VCHAR     |extend identifier
-        ext_rateselect_compliance  |1*255VCHAR     |extended rateSelect compliance
-        cable_length               |INT            |cable length in m
-        mominal_bit_rate           |INT            |nominal bit rate by 100Mbs
-        specification_compliance   |1*255VCHAR     |specification compliance
-        vendor_date                |1*255VCHAR     |vendor date
-        vendor_oui                 |1*255VCHAR     |vendor OUI
-        application_advertisement  |1*255VCHAR     |supported applications advertisement
-        ================================================================================
-        """
-        transceiver_info_dict = {}
-        compliance_code_dict = {}
-
-        #QSFP
-        if self.sfp_type == QSFP_TYPE:
-            offset = 128
-            vendor_rev_width = XCVR_HW_REV_WIDTH_QSFP
-            interface_info_bulk_width = XCVR_INTFACE_BULK_WIDTH_QSFP
-
-            sfpi_obj = sff8436InterfaceId()
-            if sfpi_obj is None:
-                print("Error: sfp_object open failed")
-                return None
-
-            sfp_interface_bulk_raw = self._read_eeprom_specific_bytes(offset + XCVR_INTERFACE_DATA_START, XCVR_INTERFACE_DATA_SIZE)
-            if sfp_interface_bulk_raw is None:
-                return None
-
-            start = XCVR_INTFACE_BULK_OFFSET - XCVR_INTERFACE_DATA_START
-            end = start + interface_info_bulk_width
-            sfp_interface_bulk_data = sfpi_obj.parse_sfp_info_bulk(sfp_interface_bulk_raw[start : end], 0)
-
-            start = XCVR_VENDOR_NAME_OFFSET - XCVR_INTERFACE_DATA_START
-            end = start + XCVR_VENDOR_NAME_WIDTH
-            sfp_vendor_name_data = sfpi_obj.parse_vendor_name(sfp_interface_bulk_raw[start : end], 0)
-
-            start = XCVR_VENDOR_PN_OFFSET - XCVR_INTERFACE_DATA_START
-            end = start + XCVR_VENDOR_PN_WIDTH
-            sfp_vendor_pn_data = sfpi_obj.parse_vendor_pn(sfp_interface_bulk_raw[start : end], 0)
-
-            start = XCVR_HW_REV_OFFSET - XCVR_INTERFACE_DATA_START
-            end = start + vendor_rev_width
-            sfp_vendor_rev_data = sfpi_obj.parse_vendor_rev(sfp_interface_bulk_raw[start : end], 0)
-
-            start = XCVR_VENDOR_SN_OFFSET - XCVR_INTERFACE_DATA_START
-            end = start + XCVR_VENDOR_SN_WIDTH
-            sfp_vendor_sn_data = sfpi_obj.parse_vendor_sn(sfp_interface_bulk_raw[start : end], 0)
-
-            start = XCVR_VENDOR_OUI_OFFSET - XCVR_INTERFACE_DATA_START
-            end = start + XCVR_VENDOR_OUI_WIDTH
-            sfp_vendor_oui_data = sfpi_obj.parse_vendor_oui(sfp_interface_bulk_raw[start : end], 0)
-
-            start = XCVR_VENDOR_DATE_OFFSET - XCVR_INTERFACE_DATA_START
-            end = start + XCVR_VENDOR_DATE_WIDTH
-            sfp_vendor_date_data = sfpi_obj.parse_vendor_date(sfp_interface_bulk_raw[start : end], 0)
-
-            transceiver_info_dict['type'] = sfp_interface_bulk_data['data']['type']['value']
-            transceiver_info_dict['manufacturer'] = sfp_vendor_name_data['data']['Vendor Name']['value']
-            transceiver_info_dict['model'] = sfp_vendor_pn_data['data']['Vendor PN']['value']
-            transceiver_info_dict['hardware_rev'] = sfp_vendor_rev_data['data']['Vendor Rev']['value']
-            transceiver_info_dict['serial'] = sfp_vendor_sn_data['data']['Vendor SN']['value']
-            transceiver_info_dict['vendor_oui'] = sfp_vendor_oui_data['data']['Vendor OUI']['value']
-            transceiver_info_dict['vendor_date'] = sfp_vendor_date_data['data']['VendorDataCode(YYYY-MM-DD Lot)']['value']
-            transceiver_info_dict['connector'] = sfp_interface_bulk_data['data']['Connector']['value']
-            transceiver_info_dict['encoding'] = sfp_interface_bulk_data['data']['EncodingCodes']['value']
-            transceiver_info_dict['ext_identifier'] = sfp_interface_bulk_data['data']['Extended Identifier']['value']
-            transceiver_info_dict['ext_rateselect_compliance'] = sfp_interface_bulk_data['data']['RateIdentifier']['value']
-            transceiver_info_dict['application_advertisement'] = 'N/A'
-
-            for key in qsfp_cable_length_tup:
-                if key in sfp_interface_bulk_data['data']:
-                    transceiver_info_dict['cable_type'] = key
-                    transceiver_info_dict['cable_length'] = str(sfp_interface_bulk_data['data'][key]['value'])
-
-            for key in qsfp_compliance_code_tup:
-                if key in sfp_interface_bulk_data['data']['Specification compliance']['value']:
-                    compliance_code_dict[key] = sfp_interface_bulk_data['data']['Specification compliance']['value'][key]['value']
-            sfp_ext_specification_compliance_raw = self._read_eeprom_specific_bytes(offset + XCVR_EXT_SPECIFICATION_COMPLIANCE_OFFSET, XCVR_EXT_SPECIFICATION_COMPLIANCE_WIDTH)
-            if sfp_ext_specification_compliance_raw is not None:
-                sfp_ext_specification_compliance_data = sfpi_obj.parse_ext_specification_compliance(sfp_ext_specification_compliance_raw[0 : 1], 0)
-                if sfp_ext_specification_compliance_data['data']['Extended Specification compliance']['value'] != "Unspecified":
-                    compliance_code_dict['Extended Specification compliance'] = sfp_ext_specification_compliance_data['data']['Extended Specification compliance']['value']
-            transceiver_info_dict['specification_compliance'] = str(compliance_code_dict)
-            transceiver_info_dict['nominal_bit_rate'] = str(sfp_interface_bulk_data['data']['Nominal Bit Rate(100Mbs)']['value'])
-
-        #QSFP-DD
-        else:
-            offset = 128
-
-            sfpi_obj = qsfp_dd_InterfaceId()
-            if sfpi_obj is None:
-                print("Error: sfp_object open failed")
-                return None
-
-            sfp_type_raw = self._read_eeprom_specific_bytes((offset + QSFP_DD_TYPE_OFFSET), XCVR_TYPE_WIDTH)
-            if sfp_type_raw is not None:
-                sfp_type_data = sfpi_obj.parse_sfp_type(sfp_type_raw, 0)
-            else:
-                return None
-
-            sfp_vendor_name_raw = self._read_eeprom_specific_bytes((offset + QSFP_DD_VENDOR_NAME_OFFSET), XCVR_VENDOR_NAME_WIDTH)
-            if sfp_vendor_name_raw is not None:
-                sfp_vendor_name_data = sfpi_obj.parse_vendor_name(sfp_vendor_name_raw, 0)
-            else:
-                return None
-
-            sfp_vendor_pn_raw = self._read_eeprom_specific_bytes((offset + QSFP_DD_VENDOR_PN_OFFSET), XCVR_VENDOR_PN_WIDTH)
-            if sfp_vendor_pn_raw is not None:
-                sfp_vendor_pn_data = sfpi_obj.parse_vendor_pn(sfp_vendor_pn_raw, 0)
-            else:
-                return None
-
-            sfp_vendor_rev_raw = self._read_eeprom_specific_bytes((offset + XCVR_HW_REV_OFFSET_QSFP_DD), XCVR_HW_REV_WIDTH_QSFP_DD)
-            if sfp_vendor_rev_raw is not None:
-                sfp_vendor_rev_data = sfpi_obj.parse_vendor_rev(sfp_vendor_rev_raw, 0)
-            else:
-                return None
-
-            sfp_vendor_sn_raw = self._read_eeprom_specific_bytes((offset + QSFP_DD_VENDOR_SN_OFFSET), XCVR_VENDOR_SN_WIDTH)
-            if sfp_vendor_sn_raw is not None:
-                sfp_vendor_sn_data = sfpi_obj.parse_vendor_sn(sfp_vendor_sn_raw, 0)
-            else:
-                return None
-
-            sfp_vendor_oui_raw = self._read_eeprom_specific_bytes((offset + QSFP_DD_VENDOR_OUI_OFFSET), XCVR_VENDOR_OUI_WIDTH)
-            if sfp_vendor_oui_raw is not None:
-                sfp_vendor_oui_data = sfpi_obj.parse_vendor_oui(sfp_vendor_oui_raw, 0)
-            else:
-                return None
-
-            sfp_vendor_date_raw = self._read_eeprom_specific_bytes((offset + XCVR_VENDOR_DATE_OFFSET_QSFP_DD), XCVR_VENDOR_DATE_WIDTH_QSFP_DD)
-            if sfp_vendor_date_raw is not None:
-                sfp_vendor_date_data = sfpi_obj.parse_vendor_date(sfp_vendor_date_raw, 0)
-            else:
-                return None
-
-            sfp_connector_raw = self._read_eeprom_specific_bytes((offset + XCVR_CONNECTOR_OFFSET_QSFP_DD), XCVR_CONNECTOR_WIDTH_QSFP_DD)
-            if sfp_connector_raw is not None:
-                sfp_connector_data = sfpi_obj.parse_connector(sfp_connector_raw, 0)
-            else:
-                return None
-
-            sfp_ext_identifier_raw = self._read_eeprom_specific_bytes((offset + XCVR_EXT_TYPE_OFFSET_QSFP_DD), XCVR_EXT_TYPE_WIDTH_QSFP_DD)
-            if sfp_ext_identifier_raw is not None:
-                sfp_ext_identifier_data = sfpi_obj.parse_ext_iden(sfp_ext_identifier_raw, 0)
-            else:
-                return None
-
-            sfp_cable_len_raw = self._read_eeprom_specific_bytes((offset + XCVR_CABLE_LENGTH_OFFSET_QSFP_DD), XCVR_CABLE_LENGTH_WIDTH_QSFP_DD)
-            if sfp_cable_len_raw is not None:
-                sfp_cable_len_data = sfpi_obj.parse_cable_len(sfp_cable_len_raw, 0)
-            else:
-                return None
-
-            sfp_media_type_raw = self._read_eeprom_specific_bytes(XCVR_MEDIA_TYPE_OFFSET_QSFP_DD, XCVR_MEDIA_TYPE_WIDTH_QSFP_DD)
-            if sfp_media_type_raw is not None:
-                sfp_media_type_dict = sfpi_obj.parse_media_type(sfp_media_type_raw, 0)
-                if sfp_media_type_dict is None:
-                    return None
-
-                host_media_list = ""
-                sfp_application_type_first_list = self._read_eeprom_specific_bytes((XCVR_FIRST_APPLICATION_LIST_OFFSET_QSFP_DD), XCVR_FIRST_APPLICATION_LIST_WIDTH_QSFP_DD)
-                possible_application_count = 8
-                if sfp_application_type_first_list is not None:
-                    sfp_application_type_list = sfp_application_type_first_list
-                else:
-                    return None
-
-                for i in range(0, possible_application_count):
-                    if sfp_application_type_list[i * 4] == 'ff':
-                        break
-                    host_electrical, media_interface = sfpi_obj.parse_application(sfp_media_type_dict, sfp_application_type_list[i * 4], sfp_application_type_list[i * 4 + 1])
-                    host_media_list = host_media_list + host_electrical + ' - ' + media_interface + '\n\t\t\t\t   '
-            else:
-                return None
-
-            transceiver_info_dict['type'] = str(sfp_type_data['data']['type']['value'])
-            transceiver_info_dict['manufacturer'] = str(sfp_vendor_name_data['data']['Vendor Name']['value'])
-            transceiver_info_dict['model'] = str(sfp_vendor_pn_data['data']['Vendor PN']['value'])
-            transceiver_info_dict['hardware_rev'] = str(sfp_vendor_rev_data['data']['Vendor Rev']['value'])
-            transceiver_info_dict['serial'] = str(sfp_vendor_sn_data['data']['Vendor SN']['value'])
-            transceiver_info_dict['vendor_oui'] = str(sfp_vendor_oui_data['data']['Vendor OUI']['value'])
-            transceiver_info_dict['vendor_date'] = str(sfp_vendor_date_data['data']['VendorDataCode(YYYY-MM-DD Lot)']['value'])
-            transceiver_info_dict['connector'] = str(sfp_connector_data['data']['Connector']['value'])
-            transceiver_info_dict['encoding'] = "Not supported for CMIS cables"
-            transceiver_info_dict['ext_identifier'] = str(sfp_ext_identifier_data['data']['Extended Identifier']['value'])
-            transceiver_info_dict['ext_rateselect_compliance'] = "Not supported for CMIS cables"
-            transceiver_info_dict['specification_compliance'] = "Not supported for CMIS cables"
-            transceiver_info_dict['cable_type'] = "Length Cable Assembly(m)"
-            transceiver_info_dict['cable_length'] = str(sfp_cable_len_data['data']['Length Cable Assembly(m)']['value'])
-            transceiver_info_dict['nominal_bit_rate'] = "Not supported for CMIS cables"
-            transceiver_info_dict['application_advertisement'] = host_media_list
-
-        return transceiver_info_dict
-
-    def get_transceiver_bulk_status(self):
-        """
-        Retrieves transceiver bulk status of this SFP
-
-        Returns:
-            A dict which contains following keys/values :
-        ========================================================================
-        keys                       |Value Format   |Information
-        ---------------------------|---------------|----------------------------
-        RX LOS                     |BOOLEAN        |RX lost-of-signal status,
-                                   |               |True if has RX los, False if not.
-        TX FAULT                   |BOOLEAN        |TX fault status,
-                                   |               |True if has TX fault, False if not.
-        Reset status               |BOOLEAN        |reset status,
-                                   |               |True if SFP in reset, False if not.
-        LP mode                    |BOOLEAN        |low power mode status,
-                                   |               |True in lp mode, False if not.
-        TX disable                 |BOOLEAN        |TX disable status,
-                                   |               |True TX disabled, False if not.
-        TX disabled channel        |HEX            |disabled TX channles in hex,
-                                   |               |bits 0 to 3 represent channel 0
-                                   |               |to channel 3.
-        Temperature                |INT            |module temperature in Celsius
-        Voltage                    |INT            |supply voltage in mV
-        TX bias                    |INT            |TX Bias Current in mA
-        RX power                   |INT            |received optical power in mW
-        TX power                   |INT            |TX output power in mW
-        ========================================================================
-        """
-        transceiver_dom_info_dict = {}
-
-        dom_info_dict_keys = ['temperature',    'voltage',
-                              'rx1power',       'rx2power',
-                              'rx3power',       'rx4power',
-                              'rx5power',       'rx6power',
-                              'rx7power',       'rx8power',
-                              'tx1bias',        'tx2bias',
-                              'tx3bias',        'tx4bias',
-                              'tx5bias',        'tx6bias',
-                              'tx7bias',        'tx8bias',
-                              'tx1power',       'tx2power',
-                              'tx3power',       'tx4power',
-                              'tx5power',       'tx6power',
-                              'tx7power',       'tx8power'
-                             ]
-        transceiver_dom_info_dict = dict.fromkeys(dom_info_dict_keys, 'N/A')
-
-        #QSFP
-        if self.sfp_type == QSFP_TYPE:
-            if not self.dom_supported:
-                return transceiver_dom_info_dict
-
-            offset = 0
-            sfpd_obj = sff8436Dom()
-            if sfpd_obj is None:
-                return transceiver_dom_info_dict
-
-            dom_data_raw = self._read_eeprom_specific_bytes((offset + QSFP_DOM_BULK_DATA_START), QSFP_DOM_BULK_DATA_SIZE)
-            if dom_data_raw is None:
-                return transceiver_dom_info_dict
-
-            if self.dom_module_monitor_supported:
-                if self.dom_temp_supported:
-                    start = QSFP_TEMPE_OFFSET - QSFP_DOM_BULK_DATA_START
-                    end = start + QSFP_TEMPE_WIDTH
-                    dom_temperature_data = sfpd_obj.parse_temperature(dom_data_raw[start : end], 0)
-                    temp = self._convert_string_to_num(dom_temperature_data['data']['Temperature']['value'])
-                    if temp is not None:
-                        transceiver_dom_info_dict['temperature'] = temp
-
-                if self.dom_volt_supported:
-                    start = QSFP_VOLT_OFFSET - QSFP_DOM_BULK_DATA_START
-                    end = start + QSFP_VOLT_WIDTH
-                    dom_voltage_data = sfpd_obj.parse_voltage(dom_data_raw[start : end], 0)
-                    volt = self._convert_string_to_num(dom_voltage_data['data']['Vcc']['value'])
-                    if volt is not None:
-                        transceiver_dom_info_dict['voltage'] = volt
-            if self.dom_channel_monitor_supported:
-                start = QSFP_CHANNL_MON_OFFSET - QSFP_DOM_BULK_DATA_START
-                end = start + QSFP_CHANNL_MON_WITH_TX_POWER_WIDTH
-                dom_channel_monitor_data = sfpd_obj.parse_channel_monitor_params_with_tx_power(dom_data_raw[start : end], 0)
-
-                if self.dom_tx_power_supported:
-                    transceiver_dom_info_dict['tx1power'] = self._convert_string_to_num(dom_channel_monitor_data['data']['TX1Power']['value'])
-                    transceiver_dom_info_dict['tx2power'] = self._convert_string_to_num(dom_channel_monitor_data['data']['TX2Power']['value'])
-                    transceiver_dom_info_dict['tx3power'] = self._convert_string_to_num(dom_channel_monitor_data['data']['TX3Power']['value'])
-                    transceiver_dom_info_dict['tx4power'] = self._convert_string_to_num(dom_channel_monitor_data['data']['TX4Power']['value'])
-
-                if self.dom_rx_power_supported:
-                    transceiver_dom_info_dict['rx1power'] = self._convert_string_to_num(dom_channel_monitor_data['data']['RX1Power']['value'])
-                    transceiver_dom_info_dict['rx2power'] = self._convert_string_to_num(dom_channel_monitor_data['data']['RX2Power']['value'])
-                    transceiver_dom_info_dict['rx3power'] = self._convert_string_to_num(dom_channel_monitor_data['data']['RX3Power']['value'])
-                    transceiver_dom_info_dict['rx4power'] = self._convert_string_to_num(dom_channel_monitor_data['data']['RX4Power']['value'])
-
-                transceiver_dom_info_dict['tx1bias'] = dom_channel_monitor_data['data']['TX1Bias']['value']
-                transceiver_dom_info_dict['tx2bias'] = dom_channel_monitor_data['data']['TX2Bias']['value']
-                transceiver_dom_info_dict['tx3bias'] = dom_channel_monitor_data['data']['TX3Bias']['value']
-                transceiver_dom_info_dict['tx4bias'] = dom_channel_monitor_data['data']['TX4Bias']['value']
-
-        #QSFP-DD
-        else:
-            offset = 0
-            sfpd_obj = qsfp_dd_Dom()
-            if sfpd_obj is None:
-                return transceiver_dom_info_dict
-
-            dom_data_raw = self._read_eeprom_specific_bytes((offset + QSFP_DD_DOM_BULK_DATA_START), QSFP_DD_DOM_BULK_DATA_SIZE)
-            if dom_data_raw is None:
-                return transceiver_dom_info_dict
-
-            if self.dom_module_monitor_supported:
-                if self.dom_temp_supported:
-                    start = QSFP_DD_TEMPE_OFFSET - QSFP_DD_DOM_BULK_DATA_START
-                    end = start + QSFP_DD_TEMPE_WIDTH
-                    dom_temperature_data = sfpd_obj.parse_temperature(dom_data_raw[start : end], 0)
-                    temp = self._convert_string_to_num(dom_temperature_data['data']['Temperature']['value'])
-                    if temp is not None:
-                        transceiver_dom_info_dict['temperature'] = temp
-
-                if self.dom_volt_supported:
-                    start = QSFP_DD_VOLT_OFFSET - QSFP_DD_DOM_BULK_DATA_START
-                    end = start + QSFP_DD_VOLT_WIDTH
-                    dom_voltage_data = sfpd_obj.parse_voltage(dom_data_raw[start : end], 0)
-                    volt = self._convert_string_to_num(dom_voltage_data['data']['Vcc']['value'])
-                    if volt is not None:
-                        transceiver_dom_info_dict['voltage'] = volt
-
-        return transceiver_dom_info_dict
-
-    def get_transceiver_threshold_info(self):
-        """
-        Retrieves transceiver threshold info of this SFP
-
-        Returns:
-            A dict which contains following keys/values :
-        ========================================================================
-        keys                       |Value Format   |Information
-        ---------------------------|---------------|----------------------------
-        temphighalarm              |FLOAT          |High Alarm Threshold value of temperature in Celsius.
-        templowalarm               |FLOAT          |Low Alarm Threshold value of temperature in Celsius.
-        temphighwarning            |FLOAT          |High Warning Threshold value of temperature in Celsius.
-        templowwarning             |FLOAT          |Low Warning Threshold value of temperature in Celsius.
-        vcchighalarm               |FLOAT          |High Alarm Threshold value of supply voltage in mV.
-        vcclowalarm                |FLOAT          |Low Alarm Threshold value of supply voltage in mV.
-        vcchighwarning             |FLOAT          |High Warning Threshold value of supply voltage in mV.
-        vcclowwarning              |FLOAT          |Low Warning Threshold value of supply voltage in mV.
-        rxpowerhighalarm           |FLOAT          |High Alarm Threshold value of received power in dBm.
-        rxpowerlowalarm            |FLOAT          |Low Alarm Threshold value of received power in dBm.
-        rxpowerhighwarning         |FLOAT          |High Warning Threshold value of received power in dBm.
-        rxpowerlowwarning          |FLOAT          |Low Warning Threshold value of received power in dBm.
-        txpowerhighalarm           |FLOAT          |High Alarm Threshold value of transmit power in dBm.
-        txpowerlowalarm            |FLOAT          |Low Alarm Threshold value of transmit power in dBm.
-        txpowerhighwarning         |FLOAT          |High Warning Threshold value of transmit power in dBm.
-        txpowerlowwarning          |FLOAT          |Low Warning Threshold value of transmit power in dBm.
-        txbiashighalarm            |FLOAT          |High Alarm Threshold value of tx Bias Current in mA.
-        txbiaslowalarm             |FLOAT          |Low Alarm Threshold value of tx Bias Current in mA.
-        txbiashighwarning          |FLOAT          |High Warning Threshold value of tx Bias Current in mA.
-        txbiaslowwarning           |FLOAT          |Low Warning Threshold value of tx Bias Current in mA.
-        ========================================================================
-        """
-        transceiver_dom_threshold_info_dict = {}
-
-        dom_info_dict_keys = ['temphighalarm',    'temphighwarning',
-                              'templowalarm',     'templowwarning',
-                              'vcchighalarm',     'vcchighwarning',
-                              'vcclowalarm',      'vcclowwarning',
-                              'rxpowerhighalarm', 'rxpowerhighwarning',
-                              'rxpowerlowalarm',  'rxpowerlowwarning',
-                              'txpowerhighalarm', 'txpowerhighwarning',
-                              'txpowerlowalarm',  'txpowerlowwarning',
-                              'txbiashighalarm',  'txbiashighwarning',
-                              'txbiaslowalarm',   'txbiaslowwarning'
-                             ]
-        transceiver_dom_threshold_info_dict = dict.fromkeys(dom_info_dict_keys, 'N/A')
-
-        #QSFP
-        if self.sfp_type == QSFP_TYPE:
-            if not self.dom_supported or not self.qsfp_page3_available:
-                return transceiver_dom_threshold_info_dict
-
-            # Dom Threshold data starts from offset 384
-            # Revert offset back to 0 once data is retrieved
-            offset = QSFP_MODULE_UPPER_PAGE3_START
-            sfpd_obj = sff8436Dom()
-            if sfpd_obj is None:
-                return transceiver_dom_threshold_info_dict
-
-            dom_module_threshold_raw = self._read_eeprom_specific_bytes((offset + QSFP_MODULE_THRESHOLD_OFFSET), QSFP_MODULE_THRESHOLD_WIDTH)
-            if dom_module_threshold_raw is None:
-                return transceiver_dom_threshold_info_dict
-
-            dom_module_threshold_data = sfpd_obj.parse_module_threshold_values(dom_module_threshold_raw, 0)
-
-            dom_channel_threshold_raw = self._read_eeprom_specific_bytes((offset + QSFP_CHANNL_THRESHOLD_OFFSET),
-                                      QSFP_CHANNL_THRESHOLD_WIDTH)
-            if dom_channel_threshold_raw is None:
-                return transceiver_dom_threshold_info_dict
-            dom_channel_threshold_data = sfpd_obj.parse_channel_threshold_values(dom_channel_threshold_raw, 0)
-
-            # Threshold Data
-            if self.dom_module_treshold_supported:
-                transceiver_dom_threshold_info_dict['temphighalarm'] = dom_module_threshold_data['data']['TempHighAlarm']['value']
-                transceiver_dom_threshold_info_dict['temphighwarning'] = dom_module_threshold_data['data']['TempHighWarning']['value']
-                transceiver_dom_threshold_info_dict['templowalarm'] = dom_module_threshold_data['data']['TempLowAlarm']['value']
-                transceiver_dom_threshold_info_dict['templowwarning'] = dom_module_threshold_data['data']['TempLowWarning']['value']
-                transceiver_dom_threshold_info_dict['vcchighalarm'] = dom_module_threshold_data['data']['VccHighAlarm']['value']
-                transceiver_dom_threshold_info_dict['vcchighwarning'] = dom_module_threshold_data['data']['VccHighWarning']['value']
-                transceiver_dom_threshold_info_dict['vcclowalarm'] = dom_module_threshold_data['data']['VccLowAlarm']['value']
-                transceiver_dom_threshold_info_dict['vcclowwarning'] = dom_module_threshold_data['data']['VccLowWarning']['value']
-            if self.dom_channel_treshold_supported:
-                transceiver_dom_threshold_info_dict['rxpowerhighalarm'] = dom_channel_threshold_data['data']['RxPowerHighAlarm']['value']
-                transceiver_dom_threshold_info_dict['rxpowerhighwarning'] = dom_channel_threshold_data['data']['RxPowerHighWarning']['value']
-                transceiver_dom_threshold_info_dict['rxpowerlowalarm'] = dom_channel_threshold_data['data']['RxPowerLowAlarm']['value']
-                transceiver_dom_threshold_info_dict['rxpowerlowwarning'] = dom_channel_threshold_data['data']['RxPowerLowWarning']['value']
-                transceiver_dom_threshold_info_dict['txbiashighalarm'] = dom_channel_threshold_data['data']['TxBiasHighAlarm']['value']
-                transceiver_dom_threshold_info_dict['txbiashighwarning'] = dom_channel_threshold_data['data']['TxBiasHighWarning']['value']
-                transceiver_dom_threshold_info_dict['txbiaslowalarm'] = dom_channel_threshold_data['data']['TxBiasLowAlarm']['value']
-                transceiver_dom_threshold_info_dict['txbiaslowwarning'] = dom_channel_threshold_data['data']['TxBiasLowWarning']['value']
-                transceiver_dom_threshold_info_dict['txpowerhighalarm'] = dom_channel_threshold_data['data']['TxPowerHighAlarm']['value']
-                transceiver_dom_threshold_info_dict['txpowerhighwarning'] = dom_channel_threshold_data['data']['TxPowerHighWarning']['value']
-                transceiver_dom_threshold_info_dict['txpowerlowalarm'] = dom_channel_threshold_data['data']['TxPowerLowAlarm']['value']
-                transceiver_dom_threshold_info_dict['txpowerlowwarning'] = dom_channel_threshold_data['data']['TxPowerLowWarning']['value']
-
-        #QSFP-DD
-        else:
-            if not self.dom_supported:
-                return transceiver_dom_threshold_info_dict
-
-            if not self.dom_thresholds_supported:
-                return transceiver_dom_threshold_info_dict
-
-            sfpd_obj = qsfp_dd_Dom()
-            if sfpd_obj is None:
-                return transceiver_dom_threshold_info_dict
-
-            # page 02 (we put page 2 to byte 256~384)
-            offset = 256
-            dom_module_threshold_raw = self._read_eeprom_specific_bytes((offset + QSFP_DD_MODULE_THRESHOLD_OFFSET), QSFP_DD_MODULE_THRESHOLD_WIDTH)
-            if dom_module_threshold_raw is None:
-                return transceiver_dom_threshold_info_dict
-
-            dom_module_threshold_data = sfpd_obj.parse_module_threshold_values(dom_module_threshold_raw, 0)
-
-            # Threshold Data
-            if self.dom_module_treshold_supported:
-                transceiver_dom_threshold_info_dict['temphighalarm'] = dom_module_threshold_data['data']['TempHighAlarm']['value']
-                transceiver_dom_threshold_info_dict['temphighwarning'] = dom_module_threshold_data['data']['TempHighWarning']['value']
-                transceiver_dom_threshold_info_dict['templowalarm'] = dom_module_threshold_data['data']['TempLowAlarm']['value']
-                transceiver_dom_threshold_info_dict['templowwarning'] = dom_module_threshold_data['data']['TempLowWarning']['value']
-                transceiver_dom_threshold_info_dict['vcchighalarm'] = dom_module_threshold_data['data']['VccHighAlarm']['value']
-                transceiver_dom_threshold_info_dict['vcchighwarning'] = dom_module_threshold_data['data']['VccHighWarning']['value']
-                transceiver_dom_threshold_info_dict['vcclowalarm'] = dom_module_threshold_data['data']['VccLowAlarm']['value']
-                transceiver_dom_threshold_info_dict['vcclowwarning'] = dom_module_threshold_data['data']['VccLowWarning']['value']
-            if self.dom_channel_treshold_supported:
-                transceiver_dom_threshold_info_dict['rxpowerhighalarm'] = dom_module_threshold_data['data']['RxPowerHighAlarm']['value']
-                transceiver_dom_threshold_info_dict['rxpowerhighwarning'] = dom_module_threshold_data['data']['RxPowerHighWarning']['value']
-                transceiver_dom_threshold_info_dict['rxpowerlowalarm'] = dom_module_threshold_data['data']['RxPowerLowAlarm']['value']
-                transceiver_dom_threshold_info_dict['rxpowerlowwarning'] = dom_module_threshold_data['data']['RxPowerLowWarning']['value']
-                transceiver_dom_threshold_info_dict['txbiashighalarm'] = dom_module_threshold_data['data']['TxBiasHighAlarm']['value']
-                transceiver_dom_threshold_info_dict['txbiashighwarning'] = dom_module_threshold_data['data']['TxBiasHighWarning']['value']
-                transceiver_dom_threshold_info_dict['txbiaslowalarm'] = dom_module_threshold_data['data']['TxBiasLowAlarm']['value']
-                transceiver_dom_threshold_info_dict['txbiaslowwarning'] = dom_module_threshold_data['data']['TxBiasLowWarning']['value']
-                transceiver_dom_threshold_info_dict['txpowerhighalarm'] = dom_module_threshold_data['data']['TxPowerHighAlarm']['value']
-                transceiver_dom_threshold_info_dict['txpowerhighwarning'] = dom_module_threshold_data['data']['TxPowerHighWarning']['value']
-                transceiver_dom_threshold_info_dict['txpowerlowalarm'] = dom_module_threshold_data['data']['TxPowerLowAlarm']['value']
-                transceiver_dom_threshold_info_dict['txpowerlowwarning'] = dom_module_threshold_data['data']['TxPowerLowWarning']['value']
-
-        return transceiver_dom_threshold_info_dict
+        return presence == True
 
     def get_reset_status(self):
         """
@@ -949,142 +159,69 @@ class Sfp(SfpBase):
         # SFP doesn't support this feature
         return False
 
-    def get_rx_los(self):
-        """
-        Retrieves the RX LOS (lost-of-signal) status of SFP
-
-        Returns:
-            A Boolean, True if SFP has RX LOS, False if not.
-            Note : RX LOS status is latched until a call to get_rx_los or a reset.
-        """
-        if not self.dom_supported:
-            return None
-
-        rx_los_list = []
-        #QSFP
-        if self.sfp_type == QSFP_TYPE:
-            offset = 0
-            dom_channel_monitor_raw = self._read_eeprom_specific_bytes((offset + QSFP_CHANNL_RX_LOS_STATUS_OFFSET), QSFP_CHANNL_RX_LOS_STATUS_WIDTH)
-            if dom_channel_monitor_raw is not None:
-                rx_los_data = int(dom_channel_monitor_raw[0], 16)
-                rx_los_list.append(rx_los_data & 0x01 != 0)
-                rx_los_list.append(rx_los_data & 0x02 != 0)
-                rx_los_list.append(rx_los_data & 0x04 != 0)
-                rx_los_list.append(rx_los_data & 0x08 != 0)
-
-        #QSFP-DD
-        else:
-            # page 11h (we put page 2 to byte 384~512)
-            if self.dom_rx_tx_power_bias_supported:
-                offset = 384
-                dom_channel_monitor_raw = self._read_eeprom_specific_bytes((offset + QSFP_DD_CHANNL_RX_LOS_STATUS_OFFSET), QSFP_DD_CHANNL_RX_LOS_STATUS_WIDTH)
-                if dom_channel_monitor_raw is not None:
-                    rx_los_data = int(dom_channel_monitor_raw[0], 8)
-                    rx_los_list.append(rx_los_data & 0x01 != 0)
-                    rx_los_list.append(rx_los_data & 0x02 != 0)
-                    rx_los_list.append(rx_los_data & 0x04 != 0)
-                    rx_los_list.append(rx_los_data & 0x08 != 0)
-                    rx_los_list.append(rx_los_data & 0x10 != 0)
-                    rx_los_list.append(rx_los_data & 0x20 != 0)
-                    rx_los_list.append(rx_los_data & 0x40 != 0)
-                    rx_los_list.append(rx_los_data & 0x80 != 0)
-
-        return rx_los_list
-
-    def get_tx_fault(self):
-        """
-        Retrieves the TX fault status of SFP
-
-        Returns:
-            A Boolean, True if SFP has TX fault, False if not
-            Note : TX fault status is lached until a call to get_tx_fault or a reset.
-        """
-        if not self.dom_supported:
-            return None
-
-        tx_fault_list = []
-        #QSFP
-        if self.sfp_type == QSFP_TYPE:
-            offset = 0
-            dom_channel_monitor_raw = self._read_eeprom_specific_bytes((offset + QSFP_CHANNL_TX_FAULT_STATUS_OFFSET), QSFP_CHANNL_TX_FAULT_STATUS_WIDTH)
-            if dom_channel_monitor_raw is not None:
-                tx_fault_data = int(dom_channel_monitor_raw[0], 16)
-                tx_fault_list.append(tx_fault_data & 0x01 != 0)
-                tx_fault_list.append(tx_fault_data & 0x02 != 0)
-                tx_fault_list.append(tx_fault_data & 0x04 != 0)
-                tx_fault_list.append(tx_fault_data & 0x08 != 0)
-
-        #QSFP-DD
-        else:
-            return None
-
-        return tx_fault_list
-
-    def get_tx_disable(self):
+    def reset(self):
         """
-        Retrieves the tx_disable status of this SFP
-
+        Reset SFP and return all user module settings to their default srate.
         Returns:
-            A Boolean, True if tx_disable is enabled, False if disabled
-
-        for QSFP, the disable states of each channel which are the lower 4 bits in byte 85 page a0
-        for SFP, the TX Disable State and Soft TX Disable Select is ORed as the tx_disable status returned
-                 These two bits are bit 7 & 6 in byte 110 page a2 respectively
+            A boolean, True if successful, False if not
         """
-        if not self.dom_supported:
-            return None
+        try:
+            if self.index < 16:
+                file_path = self.RESET_1_16_PATH.format(self.port_num)
+            else:
+                file_path = self.RESET_17_32_PATH.format(self.port_num)
 
-        tx_disable_list = []
-        #QSFP
-        if self.sfp_type == QSFP_TYPE:
-            offset = 0
-            dom_channel_monitor_raw = self._read_eeprom_specific_bytes((offset + QSFP_CHANNL_DISABLE_STATUS_OFFSET), QSFP_CHANNL_DISABLE_STATUS_WIDTH)
-            if dom_channel_monitor_raw is not None:
-                tx_disable_data = int(dom_channel_monitor_raw[0], 16)
-                tx_disable_list.append(tx_disable_data & 0x01 != 0)
-                tx_disable_list.append(tx_disable_data & 0x02 != 0)
-                tx_disable_list.append(tx_disable_data & 0x04 != 0)
-                tx_disable_list.append(tx_disable_data & 0x08 != 0)
+            with open(file_path, 'w') as fd:
+                fd.write(str(1))
+                time.sleep(1)
+                fd.write(str(0))
+                time.sleep(1)
 
-        #QSFP-DD
-        else:
-            if self.dom_rx_tx_power_bias_supported:
-                # page 11h (we put page 1 to byte 384~512)
-                offset = 384
-                dom_channel_monitor_raw = self._read_eeprom_specific_bytes((offset + QSFP_DD_CHANNL_DISABLE_STATUS_OFFSET), QSFP_DD_CHANNL_DISABLE_STATUS_WIDTH)
-                if dom_channel_monitor_raw is not None:
-                    tx_disable_data = int(dom_channel_monitor_raw[0], 16)
-                    tx_disable_list.append(tx_disable_data & 0x01 != 0)
-                    tx_disable_list.append(tx_disable_data & 0x02 != 0)
-                    tx_disable_list.append(tx_disable_data & 0x04 != 0)
-                    tx_disable_list.append(tx_disable_data & 0x08 != 0)
-                    tx_disable_list.append(tx_disable_data & 0x10 != 0)
-                    tx_disable_list.append(tx_disable_data & 0x20 != 0)
-                    tx_disable_list.append(tx_disable_data & 0x40 != 0)
-                    tx_disable_list.append(tx_disable_data & 0x80 != 0)
+        except IOError:
+            return False
 
-        return tx_disable_list
+        return True
 
-    def get_tx_disable_channel(self):
+    def get_lpmode(self):
         """
-        Retrieves the TX disabled channels in this SFP
+        Retrieves the lpmode (low power mode) status of this SFP
         Returns:
-            A hex of 4 bits (bit 0 to bit 3 as channel 0 to channel 3) to represent
-            TX channels which have been disabled in this SFP.
-            As an example, a returned value of 0x5 indicates that channel 0
-            and channel 2 have been disabled.
+            A Boolean, True if lpmode is enabled, False if disabled
         """
-        # SFP doesn't support this feature
-        return 0
+        lpmode = False
+        try:
+            if self.index < 16:
+                lpmode_path = self.LPMODE_1_16_PATH.format(self.port_num)
+            else:
+                lpmode_path = self.LPMODE_17_32_PATH.format(self.port_num)
+            with open(lpmode_path, 'r') as sfp_lpmode:
+                lpmode = int(sfp_lpmode.read(), 16)
+        except IOError:
+            return False
+        return lpmode == 1
 
-    def get_lpmode(self):
+    def set_lpmode(self, lpmode):
         """
-        Retrieves the lpmode (low power mode) status of this SFP
+        Sets the lpmode (low power mode) of SFP
+        Args:
+            lpmode: A Boolean, True to enable lpmode, False to disable it
+            Note: lpmode can be overridden by set_power_override
         Returns:
-            A Boolean, True if lpmode is enabled, False if disabled
+            A boolean, True if lpmode is set successfully, False if not
         """
-        # SFP doesn't support this feature
-        return False
+        try:
+            if self.index < 16:
+                lpmode_path = self.LPMODE_1_16_PATH.format(self.port_num)
+            else:
+                lpmode_path = self.LPMODE_17_32_PATH.format(self.port_num)
+            val_file = open(lpmode_path, 'w')
+            val_file.write('1' if lpmode else '0')
+            val_file.close()
+            self.set_power_override(True, True if lpmode is True else False)
+            return True
+        except IOError:
+            val_file.close()
+            return False
 
     def get_power_override(self):
         """
@@ -1095,349 +232,218 @@ class Sfp(SfpBase):
         # SFP doesn't support this feature
         return False
 
-    def get_temperature(self):
+    def set_power_override(self, power_override, power_set):
         """
-        Retrieves the temperature of this SFP
-
+        Sets SFP power level using power_override and power_set
+        Args:
+            power_override :
+                    A Boolean, True to override set_lpmode and use power_set
+                    to control SFP power, False to disable SFP power control
+                    through power_override/power_set and use set_lpmode
+                    to control SFP power.
+            power_set :
+                    Only valid when power_override is True.
+                    A Boolean, True to set SFP to low power mode, False to set
+                    SFP to high power mode.
         Returns:
-            An integer number of current temperature in Celsius
+            A boolean, True if power-override and power_set are set successfully,
+            False if not
         """
-        if not self.dom_supported:
-            return None
-        #QSFP
+        if not self.get_presence():
+            return False
         if self.sfp_type == QSFP_TYPE:
-            offset = 0
-
-            sfpd_obj = sff8436Dom()
-            if sfpd_obj is None:
-                return None
-
-            if self.dom_temp_supported:
-                dom_temperature_raw = self._read_eeprom_specific_bytes((offset + QSFP_TEMPE_OFFSET), QSFP_TEMPE_WIDTH)
-                if dom_temperature_raw is not None:
-                    dom_temperature_data = sfpd_obj.parse_temperature(dom_temperature_raw, 0)
-                    temp = self._convert_string_to_num(dom_temperature_data['data']['Temperature']['value'])
-                    return temp
-                else:
-                    return None
-            else:
-                return None
-
-        #QSFP-DD
-        else:
-            offset = 0
-
-            sfpd_obj = qsfp_dd_Dom()
-            if sfpd_obj is None:
-                return None
-
-            if self.dom_temp_supported:
-                dom_temperature_raw = self._read_eeprom_specific_bytes((offset + QSFP_DD_TEMPE_OFFSET), QSFP_DD_TEMPE_WIDTH)
-                if dom_temperature_raw is not None:
-                    dom_temperature_data = sfpd_obj.parse_temperature(dom_temperature_raw, 0)
-                    temp = self._convert_string_to_num(dom_temperature_data['data']['Temperature']['value'])
-                    return temp
-            return None
+            try:
+                power_override_bit = (1 << 0) if power_override else 0
+                power_set_bit = (1 << 1) if power_set else (1 << 3)
+
+                # Write to eeprom
+                with open(self.port_to_power_mode_mapping[self.index], "w") as fd:
+                    fd.write(str((power_override_bit | power_set_bit)))
+                    time.sleep(0.01)
+                    fd.close()
+            except Exception as e:
+                print('Error: unable to open file: ', str(e))
+                fd.close()
+                return False
+            return True
+        elif self.sfp_type == QSFP_DD_TYPE:
+            try:
+                power_override_bit = (1 << 6)
+                power_set_bit = (1 << 4) if power_set else (0 << 4)
+
+                # Write to eeprom
+                with open(self.port_to_power_mode_mapping[self.index], "w") as fd:
+                    fd.write(str((power_override_bit | power_set_bit)))
+                    time.sleep(0.01)
+                    fd.close()
+            except Exception as e:
+                print('Error: unable to open file: ', str(e))
+                fd.close()
+                return False
+            return True
 
-    def get_voltage(self):
+    def get_name(self):
         """
-        Retrieves the supply voltage of this SFP
-
-        Returns:
-            An integer number of supply voltage in mV
+        Retrieves the name of the device
+            Returns:
+            string: The name of the device
         """
-        if not self.dom_supported:
-            return None
 
-        #QSFP
-        if self.sfp_type == QSFP_TYPE:
-            offset = 0
-
-            sfpd_obj = sff8436Dom()
-            if sfpd_obj is None:
-                return None
-
-            if self.dom_volt_supported:
-                dom_voltage_raw = self._read_eeprom_specific_bytes((offset + QSFP_VOLT_OFFSET), QSFP_VOLT_WIDTH)
-                if dom_voltage_raw is not None:
-                    dom_voltage_data = sfpd_obj.parse_voltage(dom_voltage_raw, 0)
-                    voltage = self._convert_string_to_num(dom_voltage_data['data']['Vcc']['value'])
-                    return voltage
-                else:
-                    return None
-            return None
-
-        #QSFP-DD
-        else:
-            offset = 0
-
-            sfpd_obj = qsfp_dd_Dom()
-            if sfpd_obj is None:
-                return None
-
-            if self.dom_volt_supported:
-                dom_voltage_raw = self._read_eeprom_specific_bytes((offset + QSFP_DD_VOLT_OFFSET), QSFP_DD_VOLT_WIDTH)
-                if dom_voltage_raw is not None:
-                    dom_voltage_data = sfpd_obj.parse_voltage(dom_voltage_raw, 0)
-                    voltage = self._convert_string_to_num(dom_voltage_data['data']['Vcc']['value'])
-                    return voltage
-            return None
+        name = 'port'+str(self.index + 1)
+        return name
 
-    def get_tx_bias(self):
+    def get_status(self):
         """
-        Retrieves the TX bias current of this SFP
-
+        Retrieves the operational status of the device
         Returns:
-            A list of four integer numbers, representing TX bias in mA
-            for channel 0 to channel 4.
-            Ex. ['110.09', '111.12', '108.21', '112.09']
+            A boolean value, True if device is operating properly, False if not
         """
-        tx_bias_list = []
+        return self.get_presence() and not self.get_reset_status()
 
-        #QSFP
-        if self.sfp_type == QSFP_TYPE:
-            offset = 0
-
-            sfpd_obj = sff8436Dom()
-            if sfpd_obj is None:
-                return None
-
-            dom_channel_monitor_raw = self._read_eeprom_specific_bytes((offset + QSFP_CHANNL_MON_OFFSET), QSFP_CHANNL_MON_WITH_TX_POWER_WIDTH)
-            if dom_channel_monitor_raw is not None:
-                dom_channel_monitor_data = sfpd_obj.parse_channel_monitor_params_with_tx_power(dom_channel_monitor_raw, 0)
-                tx_bias_list.append(self._convert_string_to_num(dom_channel_monitor_data['data']['TX1Bias']['value']))
-                tx_bias_list.append(self._convert_string_to_num(dom_channel_monitor_data['data']['TX2Bias']['value']))
-                tx_bias_list.append(self._convert_string_to_num(dom_channel_monitor_data['data']['TX3Bias']['value']))
-                tx_bias_list.append(self._convert_string_to_num(dom_channel_monitor_data['data']['TX4Bias']['value']))
-
-        #QSFP-DD
-        else:
-            # page 11h (we put page 1 to byte 384~512)
-            if self.dom_rx_tx_power_bias_supported:
-                offset = 384
-                sfpd_obj = qsfp_dd_Dom()
-                if sfpd_obj is None:
-                    return None
-
-                if dom_tx_bias_power_supported:
-                    dom_tx_bias_raw = self._read_eeprom_specific_bytes((offset + QSFP_DD_TX_BIAS_OFFSET), QSFP_DD_TX_BIAS_WIDTH)
-                    if dom_tx_bias_raw is not None:
-                        dom_tx_bias_data = sfpd_obj.parse_dom_tx_bias(dom_tx_bias_raw, 0)
-                        tx_bias_list.append(self._convert_string_to_num(dom_tx_bias_data['data']['TX1Bias']['value']))
-                        tx_bias_list.append(self._convert_string_to_num(dom_tx_bias_data['data']['TX2Bias']['value']))
-                        tx_bias_list.append(self._convert_string_to_num(dom_tx_bias_data['data']['TX3Bias']['value']))
-                        tx_bias_list.append(self._convert_string_to_num(dom_tx_bias_data['data']['TX4Bias']['value']))
-                        tx_bias_list.append(self._convert_string_to_num(dom_tx_bias_data['data']['TX5Bias']['value']))
-                        tx_bias_list.append(self._convert_string_to_num(dom_tx_bias_data['data']['TX6Bias']['value']))
-                        tx_bias_list.append(self._convert_string_to_num(dom_tx_bias_data['data']['TX7Bias']['value']))
-                        tx_bias_list.append(self._convert_string_to_num(dom_tx_bias_data['data']['TX8Bias']['value']))
-
-        return tx_bias_list
-
-    def get_rx_power(self):
+    def get_position_in_parent(self):
         """
-        Retrieves the received optical power for this SFP
-
         Returns:
-            A list of four integer numbers, representing received optical
-            power in mW for channel 0 to channel 4.
-            Ex. ['1.77', '1.71', '1.68', '1.70']
+            Temp return 0
         """
-        rx_power_list = []
-
-        #QSFP
-        if self.sfp_type == QSFP_TYPE:
-            offset = 0
-
-            sfpd_obj = sff8436Dom()
-            if sfpd_obj is None:
-                return None
-
-            if self.dom_rx_power_supported:
-                dom_channel_monitor_raw = self._read_eeprom_specific_bytes((offset + QSFP_CHANNL_MON_OFFSET), QSFP_CHANNL_MON_WITH_TX_POWER_WIDTH)
-                if dom_channel_monitor_raw is not None:
-                    dom_channel_monitor_data = sfpd_obj.parse_channel_monitor_params_with_tx_power(dom_channel_monitor_raw, 0)
-                    rx_power_list.append(self._convert_string_to_num(dom_channel_monitor_data['data']['RX1Power']['value']))
-                    rx_power_list.append(self._convert_string_to_num(dom_channel_monitor_data['data']['RX2Power']['value']))
-                    rx_power_list.append(self._convert_string_to_num(dom_channel_monitor_data['data']['RX3Power']['value']))
-                    rx_power_list.append(self._convert_string_to_num(dom_channel_monitor_data['data']['RX4Power']['value']))
-                else:
-                    return None
-            else:
-                return None
-
-        #QSFP-DD
-        elif self.sfp_type == QSFP_DD_TYPE:
-            # page 11h (we put page 1 to byte 384~512)
-            if self.dom_rx_tx_power_bias_supported:
-                offset = 384
-                sfpd_obj = qsfp_dd_Dom()
-                if sfpd_obj is None:
-                    return None
-
-                if self.dom_rx_power_supported:
-                    dom_rx_power_raw = self._read_eeprom_specific_bytes((offset + QSFP_DD_RX_POWER_OFFSET), QSFP_DD_RX_POWER_WIDTH)
-                    if dom_rx_power_raw is not None:
-                        dom_rx_power_data = sfpd_obj.parse_dom_rx_power(dom_rx_power_raw, 0)
-                        rx_power_list.append(self._convert_string_to_num(dom_rx_power_data['data']['RX1Power']['value']))
-                        rx_power_list.append(self._convert_string_to_num(dom_rx_power_data['data']['RX2Power']['value']))
-                        rx_power_list.append(self._convert_string_to_num(dom_rx_power_data['data']['RX3Power']['value']))
-                        rx_power_list.append(self._convert_string_to_num(dom_rx_power_data['data']['RX4Power']['value']))
-                        rx_power_list.append(self._convert_string_to_num(dom_rx_power_data['data']['RX5Power']['value']))
-                        rx_power_list.append(self._convert_string_to_num(dom_rx_power_data['data']['RX6Power']['value']))
-                        rx_power_list.append(self._convert_string_to_num(dom_rx_power_data['data']['RX7Power']['value']))
-                        rx_power_list.append(self._convert_string_to_num(dom_rx_power_data['data']['RX8Power']['value']))
-
-        return rx_power_list
+        return 0
 
-    def get_tx_power(self):
+    def is_replaceable(self):
         """
-        Retrieves the TX power of this SFP
-
+        Retrieves if replaceable
         Returns:
-            A list of four integer numbers, representing TX power in mW
-            for channel 0 to channel 4.
-            Ex. ['1.86', '1.86', '1.86', '1.86']
+            A boolean value, True if replaceable
         """
-        tx_power_list = []
-
-        #QSFP
-        if self.sfp_type == QSFP_TYPE:
-            offset = 0
-
-            sfpd_obj = sff8436Dom()
-            if sfpd_obj is None:
-                return None
-
-            if self.dom_tx_power_supported:
-                dom_channel_monitor_raw = self._read_eeprom_specific_bytes((offset + QSFP_CHANNL_MON_OFFSET), QSFP_CHANNL_MON_WITH_TX_POWER_WIDTH)
-                if dom_channel_monitor_raw is not None:
-                    dom_channel_monitor_data = sfpd_obj.parse_channel_monitor_params_with_tx_power(dom_channel_monitor_raw, 0)
-                    tx_power_list.append(self._convert_string_to_num(dom_channel_monitor_data['data']['TX1Power']['value']))
-                    tx_power_list.append(self._convert_string_to_num(dom_channel_monitor_data['data']['TX2Power']['value']))
-                    tx_power_list.append(self._convert_string_to_num(dom_channel_monitor_data['data']['TX3Power']['value']))
-                    tx_power_list.append(self._convert_string_to_num(dom_channel_monitor_data['data']['TX4Power']['value']))
-                else:
-                    return None
-            else:
-                return None
+        return True
 
-        #QSFP-DD
-        else:
-            # page 11h (we put page 1 to byte 384~512)
-            if self.dom_rx_tx_power_bias_supported:
-                offset = 384
-                sfpd_obj = qsfp_dd_Dom()
-                if sfpd_obj is None:
-                    return None
-
-                if self.dom_tx_power_supported:
-                    dom_tx_power_raw = self._read_eeprom_specific_bytes((offset + QSFP_DD_TX_POWER_OFFSET), QSFP_DD_TX_POWER_WIDTH)
-                    if dom_tx_power_raw is not None:
-                        dom_tx_power_data = sfpd_obj.parse_dom_tx_power(dom_tx_power_raw, 0)
-                        tx_power_list.append(self._convert_string_to_num(dom_tx_power_data['data']['TX1Power']['value']))
-                        tx_power_list.append(self._convert_string_to_num(dom_tx_power_data['data']['TX2Power']['value']))
-                        tx_power_list.append(self._convert_string_to_num(dom_tx_power_data['data']['TX3Power']['value']))
-                        tx_power_list.append(self._convert_string_to_num(dom_tx_power_data['data']['TX4Power']['value']))
-                        tx_power_list.append(self._convert_string_to_num(dom_tx_power_data['data']['TX5Power']['value']))
-                        tx_power_list.append(self._convert_string_to_num(dom_tx_power_data['data']['TX6Power']['value']))
-                        tx_power_list.append(self._convert_string_to_num(dom_tx_power_data['data']['TX7Power']['value']))
-                        tx_power_list.append(self._convert_string_to_num(dom_tx_power_data['data']['TX8Power']['value']))
-
-        return tx_power_list
-
-    def reset(self):
+    def get_error_description(self):
         """
-        Reset SFP and return all user module settings to their default srate.
-        Returns:
-            A boolean, True if successful, False if not
-        """
-        # SFP doesn't support this feature
-        return False
+        Get error description
 
-    def tx_disable(self, tx_disable):
-        """
-        Disable SFP TX for all channels
         Args:
-            tx_disable : A Boolean, True to enable tx_disable mode, False to disable
-                         tx_disable mode.
-        Returns:
-            A boolean, True if tx_disable is set successfully, False if not
-        """
-        # SFP doesn't support this feature
-        return False
+            error_code: The error code returned by _get_error_code
 
-    def tx_disable_channel(self, channel, disable):
-        """
-        Sets the tx_disable for specified SFP channels
-        Args:
-            channel : A hex of 4 bits (bit 0 to bit 3) which represent channel 0 to 3,
-                      e.g. 0x5 for channel 0 and channel 2.
-            disable : A boolean, True to disable TX channels specified in channel,
-                      False to enable
         Returns:
-            A boolean, True if successful, False if not
+            The error description
         """
-        # SFP doesn't support this feature
-        return False
+        if self.get_presence():
+            return self.SFP_STATUS_OK
+        else:
+            return self.SFP_STATUS_UNPLUGGED
 
-    def set_lpmode(self, lpmode):
+    def read_eeprom(self, offset, num_bytes):
         """
-        Sets the lpmode (low power mode) of SFP
+        read eeprom specfic bytes beginning from a random offset with size as num_bytes
+
         Args:
-            lpmode: A Boolean, True to enable lpmode, False to disable it
-            Note  : lpmode can be overridden by set_power_override
+             offset :
+                     Integer, the offset from which the read transaction will start
+             num_bytes:
+                     Integer, the number of bytes to be read
+
         Returns:
-            A boolean, True if lpmode is set successfully, False if not
+            bytearray, if raw sequence of bytes are read correctly from the offset of size num_bytes
+            None, if the read_eeprom fails
         """
-        # SFP doesn't support this feature
-        return False
+        if not self.get_presence():
+            return None
+        if self.sfp_type == None:
+            return None
 
-    def set_power_override(self, power_override, power_set):
+        return bytearray([int(x, 16) for x in self._read_eeprom_specific_bytes(offset, num_bytes)])
+
+    def write_eeprom(self, offset, num_bytes, write_buffer):
         """
-        Sets SFP power level using power_override and power_set
+        write eeprom specfic bytes beginning from a random offset with size as num_bytes
+        and write_buffer as the required bytes
+
         Args:
-            power_override :
-                    A Boolean, True to override set_lpmode and use power_set
-                    to control SFP power, False to disable SFP power control
-                    through power_override/power_set and use set_lpmode
-                    to control SFP power.
-            power_set :
-                    Only valid when power_override is True.
-                    A Boolean, True to set SFP to low power mode, False to set
-                    SFP to high power mode.
+             offset :
+                     Integer, the offset from which the read transaction will start
+             num_bytes:
+                     Integer, the number of bytes to be written
+             write_buffer:
+                     bytearray, raw bytes buffer which is to be written beginning at the offset
+
         Returns:
-            A boolean, True if power-override and power_set are set successfully,
-            False if not
+            a Boolean, true if the write succeeded and false if it did not succeed.
         """
-        # SFP doesn't support this feature
-        return False
+        if not self.get_presence():
+            return False
+        if self.sfp_type == QSFP_DD_TYPE:
+            # offset check
+            if offset == (0x12 * 128 + 128):
+                # Write to eeprom
+                with open(self.port_to_grid_mapping[self.index], "w") as fd:
+                    fd.write(str((int(str(write_buffer.hex()), 16))))
+                    time.sleep(0.01)
+                    fd.close()
+            elif offset == (0x12 * 128 + 136):
+                # Write to eeprom
+                with open(self.port_to_freq_mapping[self.index], "w") as fd:
+                    fd.write(str((int(str(write_buffer.hex()), 16))))
+                    time.sleep(0.01)
+                    fd.close()
+            elif offset == (0x12 * 128 + 200):
+                # Write to eeprom
+                with open(self.port_to_outp_mapping[self.index], "w") as fd:
+                    fd.write(str((int(str(write_buffer.hex()), 16))))
+                    time.sleep(0.01)
+                    fd.close()
+            else:
+                return False
+        else:
+            return False
 
-    def get_name(self):
-        """
-        Retrieves the name of the device
-            Returns:
-            string: The name of the device
-        """
+    def _read_eeprom_specific_bytes(self, offset, num_bytes, page = 0):
+        sysfsfile_eeprom = None
+        eeprom_raw = []
+        for i in range(0, num_bytes):
+            eeprom_raw.append("0x00")
 
-        name='port'+str(self.index)
-        return name
+        if offset < 256:
+            pg = 0
+        else:
+            pg = (offset // 128) - 1
+            offset = (offset % 128)
 
-    def get_model(self):
-        """
-        Retrieves the model number (or part number) of the device
-        Returns:
-            string: Model/part number of device
-        """
-        transceiver_dom_info_dict = self.get_transceiver_info()
-        return transceiver_dom_info_dict.get("model", "N/A")
+        if pg == 0x0:
+            sysfs_sfp_i2c_client_eeprom_path = self.port_to_eeprom1_mapping[self.index]
+        elif pg == 0x1:
+            sysfs_sfp_i2c_client_eeprom_path = self.port_to_eeprom2_mapping[self.index]
+        elif pg == 0x2:
+            sysfs_sfp_i2c_client_eeprom_path = self.port_to_eeprom2_mapping[self.index]
+            offset = offset + 128
+        elif pg == 0x3:
+            sysfs_sfp_i2c_client_eeprom_path = self.port_to_eeprom3_mapping[self.index]
+        elif pg == 0x10:
+            sysfs_sfp_i2c_client_eeprom_path = self.port_to_eeprom3_mapping[self.index]
+            offset = offset + 128
+        elif pg == 0x11:
+            sysfs_sfp_i2c_client_eeprom_path = self.port_to_eeprom3_mapping[self.index]
+            offset = offset + 256
+        elif pg == 0x4:
+            sysfs_sfp_i2c_client_eeprom_path = self.port_to_eeprom4_mapping[self.index]
+        elif pg == 0x12:
+            sysfs_sfp_i2c_client_eeprom_path = self.port_to_eeprom12_mapping[self.index]
+        else:
+            return eeprom_raw
 
-    def get_serial(self):
-        """
-        Retrieves the serial number of the device
-        Returns:
-            string: Serial number of device
-        """
-        transceiver_dom_info_dict = self.get_transceiver_info()
-        return transceiver_dom_info_dict.get("serial", "N/A")
+        try:
+            sysfsfile_eeprom = open(sysfs_sfp_i2c_client_eeprom_path, mode="rb", buffering=0)
+            sysfsfile_eeprom.seek(offset)
+            raw = sysfsfile_eeprom.read(num_bytes)
+            if sys.version_info[0] >= 3:
+                for n in range(0, num_bytes):
+                    eeprom_raw[n] = hex(raw[n])[2:].zfill(2)
+            else:
+                for n in range(0, num_bytes):
+                    eeprom_raw[n] = hex(ord(raw[n]))[2:].zfill(2)
+
+        except BaseException:
+            pass
+        finally:
+            if sysfsfile_eeprom:
+                sysfsfile_eeprom.close()
+
+        return eeprom_raw
 
diff --git a/device/wistron/x86_64-wistron_6512_32r-r0/wistron_6512_32r/6512-32_32x400G.config.yaml b/device/wistron/x86_64-wistron_6512_32r-r0/wistron_6512_32r/6512-32_32x400G.config.yaml
index 17ed53abb..cc5bebd7f 100644
--- a/device/wistron/x86_64-wistron_6512_32r-r0/wistron_6512_32r/6512-32_32x400G.config.yaml
+++ b/device/wistron/x86_64-wistron_6512_32r-r0/wistron_6512_32r/6512-32_32x400G.config.yaml
@@ -9,16 +9,17 @@ nodes:
     netdev:
     - auto_create: "no"
       multi_interface: "yes"
-    mac_clk: "1340"
-    skip_pll_check: "false"
-    sys_clk: "1720"
-    mbist_on_init: "true"
-    ifc_clk: "1200"
     buffer_management_mode: "api_driven"
+    wred_cr_ip_proto_list: "17"
+    cr_assignment_mode: "1"
     max_lossless_tc: "2"
     ilpm_enable: "1"
     forward_profile: "IFCS_FORWARD_PROFILE_ID_PROFILE_E"
-    ecn_stats_enable: "1"
+    led_cfg_sck_rate: "0x5"
+    led_refresh_precliff_timer: "0x18eec2"
+    led_refresh_cliff_timer: "0x15e"
+    led_cfg_pic_stream_mode: "1"
+    led_refresh_tmr_ctl_enable: "1"
     txring:
     - txring_id: "0"
       desc_count: "1024"
@@ -41,22 +42,24 @@ nodes:
       desc_count: "1024"
       prio: "1"
       netdev: "true"
-      queues: "0, 4, 8, 12, 16, 20, 24, 28, 32, 36, 40, 44"
+      queues: "0, 3, 6, 9, 12, 15, 18, 21, 24, 27, 30, 33, 36, 39"
     - rxring_id: "1"
       desc_count: "1024"
       prio: "1"
       netdev: "true"
-      queues: "1, 5, 9, 13, 17, 21, 25, 29, 33, 37, 41, 45"
+      queues: "1, 4, 7, 10, 13, 16, 19, 22, 25, 28, 31, 34, 37, 40"
     - rxring_id: "2"
       desc_count: "1024"
       prio: "1"
       netdev: "true"
-      queues: "2, 6, 10, 14, 18, 22, 26, 30, 34, 38, 42, 46"
+      queues: "2, 5, 8, 11, 14, 17, 20, 23, 26, 29, 32, 35, 38, 41, 47"
     - rxring_id: "3"
       desc_count: "1024"
       prio: "1"
-      netdev: "true"
-      queues: "3, 7, 11, 15, 19, 23, 27, 31, 35, 39, 43, 47"
+      queues: "42, 43, 44, 45, 46"
+    sys_clk: "1720"
+    ifc_clk: "1200"
+    mac_clk: "1340"
   devports:
   - id: "0"
     sysport: "1000"
@@ -285,20 +288,6 @@ nodes:
     speed: "400G"
     sysport: "233"
     type: "eth"
-  - id: "257"
-    fec: "NONE"
-    lanes: "0:1"
-    serdes_group: "32"
-    speed: "10G"
-    sysport: "257"
-    type: "mgmt 0"
-  - id: "258"
-    fec: "NONE"
-    lanes: "1:1"
-    serdes_group: "32"
-    speed: "10G"
-    sysport: "258"
-    type: "mgmt 1"
   isg:
   - id: "11"
     lane_swap: "27163504"
diff --git a/device/wistron/x86_64-wistron_6512_32r-r0/wistron_6512_32r/buffers.json.j2 b/device/wistron/x86_64-wistron_6512_32r-r0/wistron_6512_32r/buffers.json.j2
index 1a31812c2..b9265c62e 100644
--- a/device/wistron/x86_64-wistron_6512_32r-r0/wistron_6512_32r/buffers.json.j2
+++ b/device/wistron/x86_64-wistron_6512_32r-r0/wistron_6512_32r/buffers.json.j2
@@ -1,3 +1,63 @@
+{# Default values which will be used if no actual configuration available #}
+{% set default_cable = '40m' %}
+
+{# Port configuration to cable length look-up table #}
+{# Each record describes mapping of DUT (DUT port) role and neighbor role to cable length #}
+{# Roles described in the minigraph #}
+{% set ports2cable = {
+        'torrouter_server'       : '5m',
+        'leafrouter_torrouter'   : '40m',
+        'spinerouter_leafrouter' : '300m'
+        }
+%}
+
+{%- macro cable_length(port_name) %}
+    {%- set cable_len = [] %}
+    {%- for local_port in DEVICE_NEIGHBOR %}
+        {%- if local_port == port_name %}
+            {%- if DEVICE_NEIGHBOR_METADATA is defined and DEVICE_NEIGHBOR_METADATA[DEVICE_NEIGHBOR[local_port].name] %}
+                {%- set neighbor = DEVICE_NEIGHBOR_METADATA[DEVICE_NEIGHBOR[local_port].name] %}
+                {%- set neighbor_role = neighbor.type %}
+                {%- set roles1 = switch_role + '_' + neighbor_role %}
+                {%- set roles2 = neighbor_role + '_' + switch_role %}
+                {%- set roles1 = roles1 | lower %}
+                {%- set roles2 = roles2 | lower %}
+                {%- if roles1 in ports2cable %}
+                    {%- if cable_len.append(ports2cable[roles1]) %}{% endif %}
+                {%- elif roles2 in ports2cable %}
+                    {%- if cable_len.append(ports2cable[roles2]) %}{% endif %}
+                {%- endif %}
+            {%- endif %}
+        {%- endif %}
+    {%- endfor %}
+    {%- if cable_len -%}
+        {{ cable_len.0 }}
+    {%- else %}
+        {%- if switch_role.lower() == 'torrouter' %}
+            {%- for local_port in VLAN_MEMBER %}
+                {%- if local_port[1] == port_name %}
+                    {%- set roles3 = switch_role + '_' + 'server' %}
+                    {%- set roles3 = roles3 | lower %}
+                    {%- if roles3 in ports2cable %}
+                        {%- if cable_len.append(ports2cable[roles3]) %}{% endif %}
+                    {%- endif %}
+                {%- endif %}
+            {%- endfor %}
+            {%- if cable_len -%}
+                {{ cable_len.0 }}
+            {%- else -%}
+                {{ default_cable }}
+            {%- endif %}
+        {%- else -%}
+            {{ default_cable }}
+        {%- endif %}
+    {%- endif %}
+{%- endmacro %}
+
+{%- if DEVICE_METADATA is defined %}
+{%- set switch_role = DEVICE_METADATA['localhost']['type'] %}
+{%- endif -%}
+
 {% set port_names_list = [] %}
 {% for port in PORT %}
     {%- if port_names_list.append(port) %}{% endif %}
@@ -5,34 +65,98 @@
 {% set port_names = port_names_list | join(',') -%}
 
 {
+    "CABLE_LENGTH": {
+        "AZURE": {
+    {% for port in PORT %}
+        {% set cable = cable_length(port) -%}
+        "{{ port }}": "{{ cable }}"{%- if not loop.last -%},{% endif %}
+
+    {% endfor %}
+    }
+    },
     "BUFFER_POOL": {
+        "ingress_lossless_pool": {
+            "size": "51691264",
+            "type": "ingress",
+            "mode": "dynamic",
+            "xoff": "17708800"
+        },
         "lossy_pool": {
-            "size": "56985600",
+            "size": "18874368",
             "type": "egress",
             "mode": "dynamic",
             "xoff": "0"
+        },
+        "egress_lossless_pool": {
+            "size": "70565632",
+            "type": "egress",
+            "mode": "static"
         }
     },
     "BUFFER_PROFILE": {
+        "ingress_lossless_profile": {
+            "pool":"ingress_lossless_pool",
+            "xoff":"135520",
+            "size":"1518",
+            "dynamic_th":"1",
+            "xon_offset":"9408"
+        },
+        "egress_lossless_profile": {
+            "pool":"ingress_lossless_pool",
+            "size":"0",
+            "static_th":"10243072"
+        },
         "ingress_lossy_profile": {
-            "pool":"[BUFFER_POOL|lossy_pool]",
+            "pool":"lossy_pool",
             "size":"0",
-            "static_th":"9497600"
+            "static_th":"10243072"
         },
         "egress_lossy_profile": {
-            "pool":"[BUFFER_POOL|lossy_pool]",
+            "pool":"lossy_pool",
             "size":"1518",
             "dynamic_th":"2"
         }
     },
     "BUFFER_PG": {
-        "{{ port_names }}|0-7": {
-            "profile" : "[BUFFER_PROFILE|ingress_lossy_profile]"
-        }
+{% for port in port_names_list %}
+                "{{ port }}|3-4": {
+                     "profile" : "ingress_lossless_profile"
+                },
+{% endfor %}
+{% for port in port_names_list %}
+                "{{ port }}|0": {
+                    "profile" : "ingress_lossy_profile"
+                },
+{% endfor %}
+{% for port in port_names_list %}
+                "{{ port }}|1-2": {
+                    "profile" : "ingress_lossy_profile"
+                },
+{% endfor %}
+{% for port in port_names_list %}
+                "{{ port }}|5-7": {
+                    "profile" : "ingress_lossy_profile"
+                }{% if not loop.last %},{% endif %}
+
+{% endfor %}
     },
+
     "BUFFER_QUEUE": {
-            "{{ port_names }}|0-7": {
-            "profile" : "[BUFFER_PROFILE|egress_lossy_profile]"
-        }
+{% for port in port_names_list %}
+        "{{ port }}|3-4": {
+             "profile" : "egress_lossless_profile"
+        },
+{% endfor %}
+{% for port in port_names_list %}
+        "{{ port }}|0-2": {
+            "profile" : "egress_lossy_profile"
+        },
+{% endfor %}
+{% for port in port_names_list %}
+        "{{ port }}|5-7": {
+            "profile" : "egress_lossy_profile"
+        }{% if not loop.last %},{% endif %}
+
+{% endfor %}
     }
 }
diff --git a/device/wistron/x86_64-wistron_6512_32r-r0/wistron_6512_32r/buffers_defaults_def_lossy.j2 b/device/wistron/x86_64-wistron_6512_32r-r0/wistron_6512_32r/buffers_defaults_def_lossy.j2
index 1a31812c2..79dbf9b28 100644
--- a/device/wistron/x86_64-wistron_6512_32r-r0/wistron_6512_32r/buffers_defaults_def_lossy.j2
+++ b/device/wistron/x86_64-wistron_6512_32r-r0/wistron_6512_32r/buffers_defaults_def_lossy.j2
@@ -7,7 +7,7 @@
 {
     "BUFFER_POOL": {
         "lossy_pool": {
-            "size": "56985600",
+            "size": "61458432",
             "type": "egress",
             "mode": "dynamic",
             "xoff": "0"
@@ -15,24 +15,28 @@
     },
     "BUFFER_PROFILE": {
         "ingress_lossy_profile": {
-            "pool":"[BUFFER_POOL|lossy_pool]",
+            "pool":"lossy_pool",
             "size":"0",
-            "static_th":"9497600"
+            "static_th":"10243072"
         },
         "egress_lossy_profile": {
-            "pool":"[BUFFER_POOL|lossy_pool]",
+            "pool":"lossy_pool",
             "size":"1518",
             "dynamic_th":"2"
         }
     },
     "BUFFER_PG": {
-        "{{ port_names }}|0-7": {
-            "profile" : "[BUFFER_PROFILE|ingress_lossy_profile]"
-        }
+{% for port in port_names_list %}
+        "{{ port }}|0-7": {
+            "profile" : "ingress_lossy_profile"
+        }{% if not loop.last %},{% endif %}
+{% endfor %}
     },
     "BUFFER_QUEUE": {
-            "{{ port_names }}|0-7": {
-            "profile" : "[BUFFER_PROFILE|egress_lossy_profile]"
-        }
+{% for port in port_names_list %}
+        "{{ port }}|0-7": {
+            "profile" : "egress_lossy_profile"
+        }{% if not loop.last %},{% endif %}
+{% endfor %}
     }
 }
diff --git a/device/wistron/x86_64-wistron_6512_32r-r0/wistron_6512_32r/buffers_defaults_t1.j2 b/device/wistron/x86_64-wistron_6512_32r-r0/wistron_6512_32r/buffers_defaults_t1.j2
index 93dac6b19..b9265c62e 100644
--- a/device/wistron/x86_64-wistron_6512_32r-r0/wistron_6512_32r/buffers_defaults_t1.j2
+++ b/device/wistron/x86_64-wistron_6512_32r-r0/wistron_6512_32r/buffers_defaults_t1.j2
@@ -1,4 +1,4 @@
-{# Default values which will be used if no actual configura available #}
+{# Default values which will be used if no actual configuration available #}
 {% set default_cable = '40m' %}
 
 {# Port configuration to cable length look-up table #}
@@ -76,7 +76,7 @@
     },
     "BUFFER_POOL": {
         "ingress_lossless_pool": {
-            "size": "47218432",
+            "size": "51691264",
             "type": "ingress",
             "mode": "dynamic",
             "xoff": "17708800"
@@ -86,52 +86,77 @@
             "type": "egress",
             "mode": "dynamic",
             "xoff": "0"
+        },
+        "egress_lossless_pool": {
+            "size": "70565632",
+            "type": "egress",
+            "mode": "static"
         }
     },
     "BUFFER_PROFILE": {
         "ingress_lossless_profile": {
-            "pool":"[BUFFER_POOL|ingress_lossless_pool]",
-            "xoff":"38816",
+            "pool":"ingress_lossless_pool",
+            "xoff":"135520",
             "size":"1518",
             "dynamic_th":"1",
-            "xon_offset":"13440"
+            "xon_offset":"9408"
         },
         "egress_lossless_profile": {
-            "pool":"[BUFFER_POOL|ingress_lossless_pool]",
+            "pool":"ingress_lossless_pool",
             "size":"0",
-            "static_th":"9497600"
+            "static_th":"10243072"
         },
         "ingress_lossy_profile": {
-            "pool":"[BUFFER_POOL|lossy_pool]",
+            "pool":"lossy_pool",
             "size":"0",
-            "static_th":"9497600"
+            "static_th":"10243072"
         },
         "egress_lossy_profile": {
-            "pool":"[BUFFER_POOL|lossy_pool]",
+            "pool":"lossy_pool",
             "size":"1518",
             "dynamic_th":"2"
         }
     },
     "BUFFER_PG": {
-        "{{ port_names }}|0-2": {
-            "profile" : "[BUFFER_PROFILE|ingress_lossy_profile]"
-        },
-        "{{ port_names }}|3-4": {
-            "profile" : "[BUFFER_PROFILE|ingress_lossless_profile]"
-        },
-        "{{ port_names }}|5-7": {
-            "profile" : "[BUFFER_PROFILE|ingress_lossy_profile]"
-        }
+{% for port in port_names_list %}
+                "{{ port }}|3-4": {
+                     "profile" : "ingress_lossless_profile"
+                },
+{% endfor %}
+{% for port in port_names_list %}
+                "{{ port }}|0": {
+                    "profile" : "ingress_lossy_profile"
+                },
+{% endfor %}
+{% for port in port_names_list %}
+                "{{ port }}|1-2": {
+                    "profile" : "ingress_lossy_profile"
+                },
+{% endfor %}
+{% for port in port_names_list %}
+                "{{ port }}|5-7": {
+                    "profile" : "ingress_lossy_profile"
+                }{% if not loop.last %},{% endif %}
+
+{% endfor %}
     },
+
     "BUFFER_QUEUE": {
-        "{{ port_names }}|3-4": {
-            "profile" : "[BUFFER_PROFILE|egress_lossless_profile]"
+{% for port in port_names_list %}
+        "{{ port }}|3-4": {
+             "profile" : "egress_lossless_profile"
         },
-        "{{ port_names }}|0-2": {
-            "profile" : "[BUFFER_PROFILE|egress_lossy_profile]"
+{% endfor %}
+{% for port in port_names_list %}
+        "{{ port }}|0-2": {
+            "profile" : "egress_lossy_profile"
         },
-        "{{ port_names }}|5-7": {
-            "profile" : "[BUFFER_PROFILE|egress_lossy_profile]"
-        }
+{% endfor %}
+{% for port in port_names_list %}
+        "{{ port }}|5-7": {
+            "profile" : "egress_lossy_profile"
+        }{% if not loop.last %},{% endif %}
+
+{% endfor %}
     }
 }
diff --git a/device/wistron/x86_64-wistron_6512_32r-r0/wistron_6512_32r/innovium.77700_A b/device/wistron/x86_64-wistron_6512_32r-r0/wistron_6512_32r/innovium.77700_A
index 84aa41983..ec1330780 100644
--- a/device/wistron/x86_64-wistron_6512_32r-r0/wistron_6512_32r/innovium.77700_A
+++ b/device/wistron/x86_64-wistron_6512_32r-r0/wistron_6512_32r/innovium.77700_A
@@ -5,6 +5,7 @@ device_id:         0x1b58
 # Hardware constraint information
 hardware:
         num_ibs:           6
+        ib_active:         0,1,2,3,4,5
 
         ports_per_ib:      32, 32, 32, 32, 20, 20
         recirc_port_num:   32, 32, 32, 32, 32, 32
diff --git a/device/wistron/x86_64-wistron_6512_32r-r0/wistron_6512_32r/innovium.77700_B b/device/wistron/x86_64-wistron_6512_32r-r0/wistron_6512_32r/innovium.77700_B
index 27297b313..57ba52cbc 100644
--- a/device/wistron/x86_64-wistron_6512_32r-r0/wistron_6512_32r/innovium.77700_B
+++ b/device/wistron/x86_64-wistron_6512_32r-r0/wistron_6512_32r/innovium.77700_B
@@ -5,6 +5,7 @@ device_id:         0x1b58
 # Hardware constraint information
 hardware:
         num_ibs:           6
+        ib_active:         0,1,2,3,4,5
 
         ports_per_ib:      32, 32, 32, 32, 20, 20
         recirc_port_num:   32, 32, 32, 32, 32, 32
diff --git a/device/wistron/x86_64-wistron_6512_32r-r0/wistron_6512_32r/ivm.sai.config.yaml b/device/wistron/x86_64-wistron_6512_32r-r0/wistron_6512_32r/ivm.sai.config.yaml
index cf505b299..595289e15 100644
--- a/device/wistron/x86_64-wistron_6512_32r-r0/wistron_6512_32r/ivm.sai.config.yaml
+++ b/device/wistron/x86_64-wistron_6512_32r-r0/wistron_6512_32r/ivm.sai.config.yaml
@@ -3,6 +3,12 @@ IFCS_SKU_FILE : "/usr/share/sonic/hwsku/innovium.77700_A"
 IFCS_INNO_CLI_PORT : "9999"
 IFCS_TARGET : "device"
 INNOVIUM_DIR : "/innovium"
-PYTHONPATH : "$INNOVIUM_DIR:$INNOVIUM_DIR/cmds:$INNOVIUM_DIR/scripts:$INNOVIUM_DIR/test/:$INNOVIUM_DIR/test/utils:$INNOVIUM_DIR/utils:$INNOVIUM_DIR/pyctypes"
+PLATFORM_LIBRARY: "/usr/share/sonic/platform/lib_ivm_serdes_pltfm.so"
+PYTHONPATH : "$INNOVIUM_DIR:$INNOVIUM_DIR/cmds:$INNOVIUM_DIR/scripts:$INNOVIUM_DIR/test/:$INNOVIUM_DIR/test/utils:$INNOVIUM_DIR/utils:$INNOVIUM_DIR/pyctypes:$INNOVIUM_DIR/ifcs_cmds:$INNOVIUM_DIR/testutil"
 IVM_SAI_DATAPATH_CONFIG_FILE: "/usr/share/sonic/hwsku/ivm.sai.datapath.config.yaml"
 IVM_SAI_PARAM_A0008: "32"
+IVM_SAI_PARAM_A0016: "1"
+IVM_SAI_PARAM_A0003: "4"
+IVM_SAI_PARAM_A0001: "TRUE"
+IVM_SAI_PARAM_A0014: "TRUE"
+IVM_SAI_PARAM_A0013: "1"
diff --git a/device/wistron/x86_64-wistron_6512_32r-r0/wistron_6512_32r/ivm.sai.datapath.config.yaml b/device/wistron/x86_64-wistron_6512_32r-r0/wistron_6512_32r/ivm.sai.datapath.config.yaml
index 891b0b3e2..a539d6c70 100644
--- a/device/wistron/x86_64-wistron_6512_32r-r0/wistron_6512_32r/ivm.sai.datapath.config.yaml
+++ b/device/wistron/x86_64-wistron_6512_32r-r0/wistron_6512_32r/ivm.sai.datapath.config.yaml
@@ -1,9 +1,9 @@
-ISAI_PARAM_P0_0_LS : "4608 4608 4608 4608 2880 2880"
-ISAI_PARAM_P0_1_LS : "2226 1946 1946 1890 1218 1218"
+ISAI_PARAM_P0_0_LS : "864 864 720 720 720 720"
+ISAI_PARAM_P0_1_LS : "770 490 434 378 378 378"
 ISAI_PARAM_P0_1_ALS : "434 154 154 98 98 98"
-ISAI_PARAM_P1_0_LS : "1536 1536 1536 1536 960 960"
-ISAI_PARAM_P1_0_LL : "3072 3072 3072 3072 1920 1920"
-ISAI_PARAM_P1_1_LS : "1778 1498 1498 1442 938 938"
-ISAI_PARAM_P1_1_LL : "2478 2478 2478 2478 2478 2478"
+ISAI_PARAM_P1_0_LS : "288 288 240 240 240 240"
+ISAI_PARAM_P1_0_LL : "576 576 480 480 480 480"
+ISAI_PARAM_P1_1_LS : "686 406 364 308 308 308"
+ISAI_PARAM_P1_1_LL : "574 574 574 574 574 574"
 ISAI_PARAM_P1_1_ALS : "434 154 154 98 98 98"
 ISAI_PARAM_P1_1_ALL : "126 126 126 126 126 126"
diff --git a/device/wistron/x86_64-wistron_6512_32r-r0/wistron_6512_32r/pg_profile_lookup.ini b/device/wistron/x86_64-wistron_6512_32r-r0/wistron_6512_32r/pg_profile_lookup.ini
index adcb52ab2..0d881737c 100644
--- a/device/wistron/x86_64-wistron_6512_32r-r0/wistron_6512_32r/pg_profile_lookup.ini
+++ b/device/wistron/x86_64-wistron_6512_32r-r0/wistron_6512_32r/pg_profile_lookup.ini
@@ -1,18 +1,22 @@
 # PG lossless profiles.
 # speed   cable size  xon  xoff  threshold xon_offset
-  25000   5m    1518  0    15680   1       13440
-  50000   5m    1518  0    21248   1       13440
-  100000  5m    1518  0    34624   1       13440
-  400000  5m    1518  0    117536  1       13440
-  25000   40m   1518  0    16928   1       13440
-  50000   40m   1518  0    23392   1       13440
-  100000  40m   1518  0    38816   1       13440
-  400000  40m   1518  0    135520  1       13440
-  25000   100m  1518  0    18848   1       13440
-  50000   100m  1518  0    27264   1       13440
-  100000  100m  1518  0    46496   1       13440
-  400000  100m  1518  0    166688  1       13440
-  25000   300m  1518  0    25184   1       13440
-  50000   300m  1518  0    40128   1       13440
-  100000  300m  1518  0    72384   1       13440
-  400000  300m  1518  0    268640  1       13440
+  25000   5m    1518  0    15680   1       9408
+  50000   5m    1518  0    21248   1       9408
+  100000  5m    1518  0    34624   1       9408
+  200000  5m    1518  0    62368   1       9408
+  400000  5m    1518  0    117536  1       9408
+  25000   40m   1518  0    16928   1       9408
+  50000   40m   1518  0    23392   1       9408
+  100000  40m   1518  0    38816   1       9408
+  200000  40m   1518  0    71904   1       9408
+  400000  40m   1518  0    135520  1       9408
+  25000   100m  1518  0    18848   1       9408
+  50000   100m  1518  0    27264   1       9408
+  100000  100m  1518  0    46496   1       9408
+  200000  100m  1518  0    87168   1       9408
+  400000  100m  1518  0    166688  1       9408
+  25000   300m  1518  0    25184   1       9408
+  50000   300m  1518  0    40128   1       9408
+  100000  300m  1518  0    72384   1       9408
+  200000  300m  1518  0    138112  1       9408
+  400000  300m  1518  0    268640  1       9408
diff --git a/device/wistron/x86_64-wistron_6512_32r-r0/wistron_6512_32r/qos.json.j2 b/device/wistron/x86_64-wistron_6512_32r-r0/wistron_6512_32r/qos.json.j2
index 104d2d78d..b03078465 100644
--- a/device/wistron/x86_64-wistron_6512_32r-r0/wistron_6512_32r/qos.json.j2
+++ b/device/wistron/x86_64-wistron_6512_32r-r0/wistron_6512_32r/qos.json.j2
@@ -32,87 +32,98 @@
     },
        "DSCP_TO_TC_MAP": {
         "AZURE": {
-            "0":"0",
-            "1":"0",
-            "2":"0",
-            "3":"0",
-            "4":"0",
-            "5":"0",
-            "6":"0",
-            "7":"0",
-            "8":"0",
-            "9":"0",
-            "10":"0",
-            "11":"0",
-            "12":"0",
-            "13":"0",
-            "14":"0",
-            "15":"0",
-            "16":"0",
-            "17":"0",
-            "18":"0",
-            "19":"0",
-            "20":"0",
-            "21":"0",
-            "22":"0",
-            "23":"0",
-            "24":"0",
-            "25":"0",
-            "26":"0",
-            "27":"0",
-            "28":"0",
-            "29":"0",
-            "30":"0",
-            "31":"0",
-            "32":"0",
-            "33":"0",
-            "34":"0",
-            "35":"0",
-            "36":"0",
-            "37":"0",
-            "38":"0",
-            "39":"0",
-            "40":"0",
-            "41":"0",
-            "42":"0",
-            "43":"0",
-            "44":"0",
-            "45":"0",
-            "46":"0",
-            "47":"0",
-            "48":"0",
-            "49":"0",
-            "50":"0",
-            "51":"0",
-            "52":"0",
-            "53":"0",
-            "54":"0",
-            "55":"0",
-            "56":"0",
-            "57":"0",
-            "58":"0",
-            "59":"0",
-            "60":"0",
-            "61":"0",
-            "62":"0",
-            "63":"0"
+            "0" : "1",
+            "1" : "1",
+            "2" : "1",
+            "3" : "3",
+            "4" : "4",
+            "5" : "2",
+            "6" : "1",
+            "7" : "1",
+            "8" : "0",
+            "9" : "1",
+            "10": "1",
+            "11": "1",
+            "12": "1",
+            "13": "1",
+            "14": "1",
+            "15": "1",
+            "16": "1",
+            "17": "1",
+            "18": "1",
+            "19": "1",
+            "20": "1",
+            "21": "1",
+            "22": "1",
+            "23": "1",
+            "24": "1",
+            "25": "1",
+            "26": "1",
+            "27": "1",
+            "28": "1",
+            "29": "1",
+            "30": "1",
+            "31": "1",
+            "32": "1",
+            "33": "1",
+            "34": "1",
+            "35": "1",
+            "36": "1",
+            "37": "1",
+            "38": "1",
+            "39": "1",
+            "40": "1",
+            "41": "1",
+            "42": "1",
+            "43": "1",
+            "44": "1",
+            "45": "1",
+            "46": "5",
+            "47": "1",
+            "48": "6",
+            "49": "1",
+            "50": "1",
+            "51": "1",
+            "52": "1",
+            "53": "1",
+            "54": "1",
+            "55": "1",
+            "56": "1",
+            "57": "1",
+            "58": "1",
+            "59": "1",
+            "60": "1",
+            "61": "1",
+            "62": "1",
+            "63": "1"
         }
     },
     "PORT_QOS_MAP": {
-       "{{ port_names }}": {
-            "tc_to_pg_map": "[TC_TO_PRIORITY_GROUP_MAP|AZURE]",
-            "tc_to_queue_map": "[TC_TO_QUEUE_MAP|AZURE]",
-            "dscp_to_tc_map": "[DSCP_TO_TC_MAP|AZURE]"
-        }
-    },
-    "SCHEDULER": {
-        "scheduler.7": {
-            "type": "STRICT"
-        }
+{% for port in port_names_list %}
+       "{{ port }}": {
+            "tc_to_pg_map": "AZURE",
+            "tc_to_queue_map": "AZURE",
+            "dscp_to_tc_map": "AZURE",
+            "pfc_enable": "3,4"
+        }{% if not loop.last %},{% endif %}
+
+{% endfor %}
     },
-    "QUEUE": {
-        "{{ port_names }}|7": {
-            "scheduler": "[SCHEDULER|scheduler.7]"
+    "WRED_PROFILE": {
+        "AZURE_LOSSLESS" : {
+            "wred_green_enable"      : "true",
+            "wred_yellow_enable"     : "true",
+            "wred_red_enable"        : "true",
+            "ecn"                    : "ecn_all",
+            "green_max_threshold"    : "2097152",
+            "green_min_threshold"    : "1048576",
+            "yellow_max_threshold"   : "2097152",
+            "yellow_min_threshold"   : "1048576",
+            "red_max_threshold"      : "2097152",
+            "red_min_threshold"      : "1048576",
+            "green_drop_probability" : "5",
+            "yellow_drop_probability": "5",
+            "red_drop_probability"   : "5"
         }
     }
 }
diff --git a/device/wistron/x86_64-wistron_6512_32r-r0/wistron_6512_32r/qos_defaults_def_lossy.j2 b/device/wistron/x86_64-wistron_6512_32r-r0/wistron_6512_32r/qos_defaults_def_lossy.j2
index 104d2d78d..c1170619b 100644
--- a/device/wistron/x86_64-wistron_6512_32r-r0/wistron_6512_32r/qos_defaults_def_lossy.j2
+++ b/device/wistron/x86_64-wistron_6512_32r-r0/wistron_6512_32r/qos_defaults_def_lossy.j2
@@ -23,8 +23,8 @@
         "0": "0",
         "1": "0",
         "2": "0",
-        "3": "3",
-        "4": "4",
+        "3": "1",
+        "4": "2",
         "5": "0",
         "6": "0",
         "7": "0"
@@ -99,11 +99,14 @@
         }
     },
     "PORT_QOS_MAP": {
-       "{{ port_names }}": {
-            "tc_to_pg_map": "[TC_TO_PRIORITY_GROUP_MAP|AZURE]",
-            "tc_to_queue_map": "[TC_TO_QUEUE_MAP|AZURE]",
-            "dscp_to_tc_map": "[DSCP_TO_TC_MAP|AZURE]"
-        }
+{% for port in port_names_list %}
+       "{{ port }}": {
+            "tc_to_pg_map": "AZURE",
+            "tc_to_queue_map": "AZURE",
+            "dscp_to_tc_map": "AZURE"
+        }{% if not loop.last %},{% endif %}
+
+{% endfor %}
     },
     "SCHEDULER": {
         "scheduler.7": {
diff --git a/device/wistron/x86_64-wistron_6512_32r-r0/wistron_6512_32r/qos_defaults_t1.j2 b/device/wistron/x86_64-wistron_6512_32r-r0/wistron_6512_32r/qos_defaults_t1.j2
index 4b9748c7b..b03078465 100644
--- a/device/wistron/x86_64-wistron_6512_32r-r0/wistron_6512_32r/qos_defaults_t1.j2
+++ b/device/wistron/x86_64-wistron_6512_32r-r0/wistron_6512_32r/qos_defaults_t1.j2
@@ -32,83 +32,98 @@
     },
        "DSCP_TO_TC_MAP": {
         "AZURE": {
-            "0":"0",
-            "1":"0",
-            "2":"0",
-            "3":"3",
-            "4":"4",
-            "5":"0",
-            "6":"0",
-            "7":"0",
-            "8":"1",
-            "9":"0",
-            "10":"0",
-            "11":"0",
-            "12":"0",
-            "13":"0",
-            "14":"0",
-            "15":"0",
-            "16":"0",
-            "17":"0",
-            "18":"0",
-            "19":"0",
-            "20":"0",
-            "21":"0",
-            "22":"0",
-            "23":"0",
-            "24":"0",
-            "25":"0",
-            "26":"0",
-            "27":"0",
-            "28":"0",
-            "29":"0",
-            "30":"0",
-            "31":"0",
-            "32":"0",
-            "33":"0",
-            "34":"0",
-            "35":"0",
-            "36":"0",
-            "37":"0",
-            "38":"0",
-            "39":"0",
-            "40":"0",
-            "41":"0",
-            "42":"0",
-            "43":"0",
-            "44":"0",
-            "45":"0",
-            "46":"0",
-            "47":"0",
-            "48":"0",
-            "49":"0",
-            "50":"0",
-            "51":"0",
-            "52":"0",
-            "53":"0",
-            "54":"0",
-            "55":"0",
-            "56":"0",
-            "57":"0",
-            "58":"0",
-            "59":"0",
-            "60":"0",
-            "61":"0",
-            "62":"0",
-            "63":"0"
+            "0" : "1",
+            "1" : "1",
+            "2" : "1",
+            "3" : "3",
+            "4" : "4",
+            "5" : "2",
+            "6" : "1",
+            "7" : "1",
+            "8" : "0",
+            "9" : "1",
+            "10": "1",
+            "11": "1",
+            "12": "1",
+            "13": "1",
+            "14": "1",
+            "15": "1",
+            "16": "1",
+            "17": "1",
+            "18": "1",
+            "19": "1",
+            "20": "1",
+            "21": "1",
+            "22": "1",
+            "23": "1",
+            "24": "1",
+            "25": "1",
+            "26": "1",
+            "27": "1",
+            "28": "1",
+            "29": "1",
+            "30": "1",
+            "31": "1",
+            "32": "1",
+            "33": "1",
+            "34": "1",
+            "35": "1",
+            "36": "1",
+            "37": "1",
+            "38": "1",
+            "39": "1",
+            "40": "1",
+            "41": "1",
+            "42": "1",
+            "43": "1",
+            "44": "1",
+            "45": "1",
+            "46": "5",
+            "47": "1",
+            "48": "6",
+            "49": "1",
+            "50": "1",
+            "51": "1",
+            "52": "1",
+            "53": "1",
+            "54": "1",
+            "55": "1",
+            "56": "1",
+            "57": "1",
+            "58": "1",
+            "59": "1",
+            "60": "1",
+            "61": "1",
+            "62": "1",
+            "63": "1"
         }
     },
     "PORT_QOS_MAP": {
-       "{{ port_names }}": {
-            "tc_to_pg_map": "[TC_TO_PRIORITY_GROUP_MAP|AZURE]",
-            "tc_to_queue_map": "[TC_TO_QUEUE_MAP|AZURE]",
-            "dscp_to_tc_map": "[DSCP_TO_TC_MAP|AZURE]",
+{% for port in port_names_list %}
+       "{{ port }}": {
+            "tc_to_pg_map": "AZURE",
+            "tc_to_queue_map": "AZURE",
+            "dscp_to_tc_map": "AZURE",
             "pfc_enable": "3,4"
-        }
+        }{% if not loop.last %},{% endif %}
+
+{% endfor %}
     },
     "WRED_PROFILE": {
         "AZURE_LOSSLESS" : {
-            "red_min_threshold":"50000"
+            "wred_green_enable"      : "true",
+            "wred_yellow_enable"     : "true",
+            "wred_red_enable"        : "true",
+            "ecn"                    : "ecn_all",
+            "green_max_threshold"    : "2097152",
+            "green_min_threshold"    : "1048576",
+            "yellow_max_threshold"   : "2097152",
+            "yellow_min_threshold"   : "1048576",
+            "red_max_threshold"      : "2097152",
+            "red_min_threshold"      : "1048576",
+            "green_drop_probability" : "5",
+            "yellow_drop_probability": "5",
+            "red_drop_probability"   : "5"
         }
     }
 }
diff --git a/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k/buffers.json.j2 b/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k/buffers.json.j2
index 1a31812c2..b9265c62e 100644
--- a/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k/buffers.json.j2
+++ b/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k/buffers.json.j2
@@ -1,3 +1,63 @@
+{# Default values which will be used if no actual configuration available #}
+{% set default_cable = '40m' %}
+
+{# Port configuration to cable length look-up table #}
+{# Each record describes mapping of DUT (DUT port) role and neighbor role to cable length #}
+{# Roles described in the minigraph #}
+{% set ports2cable = {
+        'torrouter_server'       : '5m',
+        'leafrouter_torrouter'   : '40m',
+        'spinerouter_leafrouter' : '300m'
+        }
+%}
+
+{%- macro cable_length(port_name) %}
+    {%- set cable_len = [] %}
+    {%- for local_port in DEVICE_NEIGHBOR %}
+        {%- if local_port == port_name %}
+            {%- if DEVICE_NEIGHBOR_METADATA is defined and DEVICE_NEIGHBOR_METADATA[DEVICE_NEIGHBOR[local_port].name] %}
+                {%- set neighbor = DEVICE_NEIGHBOR_METADATA[DEVICE_NEIGHBOR[local_port].name] %}
+                {%- set neighbor_role = neighbor.type %}
+                {%- set roles1 = switch_role + '_' + neighbor_role %}
+                {%- set roles2 = neighbor_role + '_' + switch_role %}
+                {%- set roles1 = roles1 | lower %}
+                {%- set roles2 = roles2 | lower %}
+                {%- if roles1 in ports2cable %}
+                    {%- if cable_len.append(ports2cable[roles1]) %}{% endif %}
+                {%- elif roles2 in ports2cable %}
+                    {%- if cable_len.append(ports2cable[roles2]) %}{% endif %}
+                {%- endif %}
+            {%- endif %}
+        {%- endif %}
+    {%- endfor %}
+    {%- if cable_len -%}
+        {{ cable_len.0 }}
+    {%- else %}
+        {%- if switch_role.lower() == 'torrouter' %}
+            {%- for local_port in VLAN_MEMBER %}
+                {%- if local_port[1] == port_name %}
+                    {%- set roles3 = switch_role + '_' + 'server' %}
+                    {%- set roles3 = roles3 | lower %}
+                    {%- if roles3 in ports2cable %}
+                        {%- if cable_len.append(ports2cable[roles3]) %}{% endif %}
+                    {%- endif %}
+                {%- endif %}
+            {%- endfor %}
+            {%- if cable_len -%}
+                {{ cable_len.0 }}
+            {%- else -%}
+                {{ default_cable }}
+            {%- endif %}
+        {%- else -%}
+            {{ default_cable }}
+        {%- endif %}
+    {%- endif %}
+{%- endmacro %}
+
+{%- if DEVICE_METADATA is defined %}
+{%- set switch_role = DEVICE_METADATA['localhost']['type'] %}
+{%- endif -%}
+
 {% set port_names_list = [] %}
 {% for port in PORT %}
     {%- if port_names_list.append(port) %}{% endif %}
@@ -5,34 +65,98 @@
 {% set port_names = port_names_list | join(',') -%}
 
 {
+    "CABLE_LENGTH": {
+        "AZURE": {
+    {% for port in PORT %}
+        {% set cable = cable_length(port) -%}
+        "{{ port }}": "{{ cable }}"{%- if not loop.last -%},{% endif %}
+
+    {% endfor %}
+    }
+    },
     "BUFFER_POOL": {
+        "ingress_lossless_pool": {
+            "size": "51691264",
+            "type": "ingress",
+            "mode": "dynamic",
+            "xoff": "17708800"
+        },
         "lossy_pool": {
-            "size": "56985600",
+            "size": "18874368",
             "type": "egress",
             "mode": "dynamic",
             "xoff": "0"
+        },
+        "egress_lossless_pool": {
+            "size": "70565632",
+            "type": "egress",
+            "mode": "static"
         }
     },
     "BUFFER_PROFILE": {
+        "ingress_lossless_profile": {
+            "pool":"ingress_lossless_pool",
+            "xoff":"135520",
+            "size":"1518",
+            "dynamic_th":"1",
+            "xon_offset":"9408"
+        },
+        "egress_lossless_profile": {
+            "pool":"ingress_lossless_pool",
+            "size":"0",
+            "static_th":"10243072"
+        },
         "ingress_lossy_profile": {
-            "pool":"[BUFFER_POOL|lossy_pool]",
+            "pool":"lossy_pool",
             "size":"0",
-            "static_th":"9497600"
+            "static_th":"10243072"
         },
         "egress_lossy_profile": {
-            "pool":"[BUFFER_POOL|lossy_pool]",
+            "pool":"lossy_pool",
             "size":"1518",
             "dynamic_th":"2"
         }
     },
     "BUFFER_PG": {
-        "{{ port_names }}|0-7": {
-            "profile" : "[BUFFER_PROFILE|ingress_lossy_profile]"
-        }
+{% for port in port_names_list %}
+                "{{ port }}|3-4": {
+                     "profile" : "ingress_lossless_profile"
+                },
+{% endfor %}
+{% for port in port_names_list %}
+                "{{ port }}|0": {
+                    "profile" : "ingress_lossy_profile"
+                },
+{% endfor %}
+{% for port in port_names_list %}
+                "{{ port }}|1-2": {
+                    "profile" : "ingress_lossy_profile"
+                },
+{% endfor %}
+{% for port in port_names_list %}
+                "{{ port }}|5-7": {
+                    "profile" : "ingress_lossy_profile"
+                }{% if not loop.last %},{% endif %}
+
+{% endfor %}
     },
+
     "BUFFER_QUEUE": {
-            "{{ port_names }}|0-7": {
-            "profile" : "[BUFFER_PROFILE|egress_lossy_profile]"
-        }
+{% for port in port_names_list %}
+        "{{ port }}|3-4": {
+             "profile" : "egress_lossless_profile"
+        },
+{% endfor %}
+{% for port in port_names_list %}
+        "{{ port }}|0-2": {
+            "profile" : "egress_lossy_profile"
+        },
+{% endfor %}
+{% for port in port_names_list %}
+        "{{ port }}|5-7": {
+            "profile" : "egress_lossy_profile"
+        }{% if not loop.last %},{% endif %}
+
+{% endfor %}
     }
 }
diff --git a/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k/buffers_defaults_def_lossy.j2 b/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k/buffers_defaults_def_lossy.j2
index 1a31812c2..79dbf9b28 100644
--- a/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k/buffers_defaults_def_lossy.j2
+++ b/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k/buffers_defaults_def_lossy.j2
@@ -7,7 +7,7 @@
 {
     "BUFFER_POOL": {
         "lossy_pool": {
-            "size": "56985600",
+            "size": "61458432",
             "type": "egress",
             "mode": "dynamic",
             "xoff": "0"
@@ -15,24 +15,28 @@
     },
     "BUFFER_PROFILE": {
         "ingress_lossy_profile": {
-            "pool":"[BUFFER_POOL|lossy_pool]",
+            "pool":"lossy_pool",
             "size":"0",
-            "static_th":"9497600"
+            "static_th":"10243072"
         },
         "egress_lossy_profile": {
-            "pool":"[BUFFER_POOL|lossy_pool]",
+            "pool":"lossy_pool",
             "size":"1518",
             "dynamic_th":"2"
         }
     },
     "BUFFER_PG": {
-        "{{ port_names }}|0-7": {
-            "profile" : "[BUFFER_PROFILE|ingress_lossy_profile]"
-        }
+{% for port in port_names_list %}
+        "{{ port }}|0-7": {
+            "profile" : "ingress_lossy_profile"
+        }{% if not loop.last %},{% endif %}
+{% endfor %}
     },
     "BUFFER_QUEUE": {
-            "{{ port_names }}|0-7": {
-            "profile" : "[BUFFER_PROFILE|egress_lossy_profile]"
-        }
+{% for port in port_names_list %}
+        "{{ port }}|0-7": {
+            "profile" : "egress_lossy_profile"
+        }{% if not loop.last %},{% endif %}
+{% endfor %}
     }
 }
diff --git a/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k/buffers_defaults_t1.j2 b/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k/buffers_defaults_t1.j2
index 93dac6b19..b9265c62e 100644
--- a/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k/buffers_defaults_t1.j2
+++ b/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k/buffers_defaults_t1.j2
@@ -1,4 +1,4 @@
-{# Default values which will be used if no actual configura available #}
+{# Default values which will be used if no actual configuration available #}
 {% set default_cable = '40m' %}
 
 {# Port configuration to cable length look-up table #}
@@ -76,7 +76,7 @@
     },
     "BUFFER_POOL": {
         "ingress_lossless_pool": {
-            "size": "47218432",
+            "size": "51691264",
             "type": "ingress",
             "mode": "dynamic",
             "xoff": "17708800"
@@ -86,52 +86,77 @@
             "type": "egress",
             "mode": "dynamic",
             "xoff": "0"
+        },
+        "egress_lossless_pool": {
+            "size": "70565632",
+            "type": "egress",
+            "mode": "static"
         }
     },
     "BUFFER_PROFILE": {
         "ingress_lossless_profile": {
-            "pool":"[BUFFER_POOL|ingress_lossless_pool]",
-            "xoff":"38816",
+            "pool":"ingress_lossless_pool",
+            "xoff":"135520",
             "size":"1518",
             "dynamic_th":"1",
-            "xon_offset":"13440"
+            "xon_offset":"9408"
         },
         "egress_lossless_profile": {
-            "pool":"[BUFFER_POOL|ingress_lossless_pool]",
+            "pool":"ingress_lossless_pool",
             "size":"0",
-            "static_th":"9497600"
+            "static_th":"10243072"
         },
         "ingress_lossy_profile": {
-            "pool":"[BUFFER_POOL|lossy_pool]",
+            "pool":"lossy_pool",
             "size":"0",
-            "static_th":"9497600"
+            "static_th":"10243072"
         },
         "egress_lossy_profile": {
-            "pool":"[BUFFER_POOL|lossy_pool]",
+            "pool":"lossy_pool",
             "size":"1518",
             "dynamic_th":"2"
         }
     },
     "BUFFER_PG": {
-        "{{ port_names }}|0-2": {
-            "profile" : "[BUFFER_PROFILE|ingress_lossy_profile]"
-        },
-        "{{ port_names }}|3-4": {
-            "profile" : "[BUFFER_PROFILE|ingress_lossless_profile]"
-        },
-        "{{ port_names }}|5-7": {
-            "profile" : "[BUFFER_PROFILE|ingress_lossy_profile]"
-        }
+{% for port in port_names_list %}
+                "{{ port }}|3-4": {
+                     "profile" : "ingress_lossless_profile"
+                },
+{% endfor %}
+{% for port in port_names_list %}
+                "{{ port }}|0": {
+                    "profile" : "ingress_lossy_profile"
+                },
+{% endfor %}
+{% for port in port_names_list %}
+                "{{ port }}|1-2": {
+                    "profile" : "ingress_lossy_profile"
+                },
+{% endfor %}
+{% for port in port_names_list %}
+                "{{ port }}|5-7": {
+                    "profile" : "ingress_lossy_profile"
+                }{% if not loop.last %},{% endif %}
+
+{% endfor %}
     },
+
     "BUFFER_QUEUE": {
-        "{{ port_names }}|3-4": {
-            "profile" : "[BUFFER_PROFILE|egress_lossless_profile]"
+{% for port in port_names_list %}
+        "{{ port }}|3-4": {
+             "profile" : "egress_lossless_profile"
         },
-        "{{ port_names }}|0-2": {
-            "profile" : "[BUFFER_PROFILE|egress_lossy_profile]"
+{% endfor %}
+{% for port in port_names_list %}
+        "{{ port }}|0-2": {
+            "profile" : "egress_lossy_profile"
         },
-        "{{ port_names }}|5-7": {
-            "profile" : "[BUFFER_PROFILE|egress_lossy_profile]"
-        }
+{% endfor %}
+{% for port in port_names_list %}
+        "{{ port }}|5-7": {
+            "profile" : "egress_lossy_profile"
+        }{% if not loop.last %},{% endif %}
+
+{% endfor %}
     }
 }
diff --git a/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k/config_32x400G_wistron_sw_to3200k.yaml b/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k/config_32x400G_wistron_sw_to3200k.yaml
index 23445c6de..b96146517 100644
--- a/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k/config_32x400G_wistron_sw_to3200k.yaml
+++ b/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k/config_32x400G_wistron_sw_to3200k.yaml
@@ -10,13 +10,11 @@ nodes:
     - auto_create: "no"
       multi_interface: "yes"
     buffer_management_mode: "api_driven"
+    wred_cr_ip_proto_list: "17"
+    cr_assignment_mode: "1"
     max_lossless_tc: "2"
     ilpm_enable: "1"
     forward_profile: "IFCS_FORWARD_PROFILE_ID_PROFILE_E"
-    ecn_stats_enable: "1"
-    pcie_attn: "10, 0, 0, 0"
-    pcie_post: "10, 18, 18, 18"
-    pcie_pre1: "0, 0, 0, 0"
     led_cfg_sck_rate: "0x5"
     led_refresh_precliff_timer: "0x18eec2"
     led_refresh_cliff_timer: "0x15e"
diff --git a/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k/innovium.77700_A b/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k/innovium.77700_A
index 84aa41983..ec1330780 100644
--- a/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k/innovium.77700_A
+++ b/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k/innovium.77700_A
@@ -5,6 +5,7 @@ device_id:         0x1b58
 # Hardware constraint information
 hardware:
         num_ibs:           6
+        ib_active:         0,1,2,3,4,5
 
         ports_per_ib:      32, 32, 32, 32, 20, 20
         recirc_port_num:   32, 32, 32, 32, 32, 32
diff --git a/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k/innovium.77700_B b/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k/innovium.77700_B
index 27297b313..57ba52cbc 100644
--- a/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k/innovium.77700_B
+++ b/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k/innovium.77700_B
@@ -5,6 +5,7 @@ device_id:         0x1b58
 # Hardware constraint information
 hardware:
         num_ibs:           6
+        ib_active:         0,1,2,3,4,5
 
         ports_per_ib:      32, 32, 32, 32, 20, 20
         recirc_port_num:   32, 32, 32, 32, 32, 32
diff --git a/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k/ivm.sai.config.yaml b/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k/ivm.sai.config.yaml
index 0c1644ab7..974cf7dc2 100644
--- a/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k/ivm.sai.config.yaml
+++ b/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k/ivm.sai.config.yaml
@@ -3,7 +3,12 @@ IFCS_SKU_FILE : "/usr/share/sonic/hwsku/innovium.77700_A"
 IFCS_INNO_CLI_PORT : "9999"
 IFCS_TARGET : "device"
 INNOVIUM_DIR : "/innovium"
-PYTHONPATH : "$INNOVIUM_DIR:$INNOVIUM_DIR/cmds:$INNOVIUM_DIR/scripts:$INNOVIUM_DIR/test/:$INNOVIUM_DIR/test/utils:$INNOVIUM_DIR/utils:$INNOVIUM_DIR/pyctypes"
+PYTHONPATH : "$INNOVIUM_DIR:$INNOVIUM_DIR/cmds:$INNOVIUM_DIR/scripts:$INNOVIUM_DIR/test/:$INNOVIUM_DIR/test/utils:$INNOVIUM_DIR/utils:$INNOVIUM_DIR/pyctypes:$INNOVIUM_DIR/ifcs_cmds:$INNOVIUM_DIR/testutil"
 PLATFORM_LIBRARY: "/usr/share/sonic/platform/lib_ivm_serdes_pltfm.so"
 IVM_SAI_DATAPATH_CONFIG_FILE: "/usr/share/sonic/hwsku/ivm.sai.datapath.config.yaml"
 IVM_SAI_PARAM_A0008: "32"
+IVM_SAI_PARAM_A0016: "1"
+IVM_SAI_PARAM_A0003: "4"
+IVM_SAI_PARAM_A0001: "TRUE"
+IVM_SAI_PARAM_A0014: "TRUE"
+IVM_SAI_PARAM_A0013: "1"
diff --git a/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k/ivm.sai.datapath.config.yaml b/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k/ivm.sai.datapath.config.yaml
index 891b0b3e2..a539d6c70 100644
--- a/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k/ivm.sai.datapath.config.yaml
+++ b/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k/ivm.sai.datapath.config.yaml
@@ -1,9 +1,9 @@
-ISAI_PARAM_P0_0_LS : "4608 4608 4608 4608 2880 2880"
-ISAI_PARAM_P0_1_LS : "2226 1946 1946 1890 1218 1218"
+ISAI_PARAM_P0_0_LS : "864 864 720 720 720 720"
+ISAI_PARAM_P0_1_LS : "770 490 434 378 378 378"
 ISAI_PARAM_P0_1_ALS : "434 154 154 98 98 98"
-ISAI_PARAM_P1_0_LS : "1536 1536 1536 1536 960 960"
-ISAI_PARAM_P1_0_LL : "3072 3072 3072 3072 1920 1920"
-ISAI_PARAM_P1_1_LS : "1778 1498 1498 1442 938 938"
-ISAI_PARAM_P1_1_LL : "2478 2478 2478 2478 2478 2478"
+ISAI_PARAM_P1_0_LS : "288 288 240 240 240 240"
+ISAI_PARAM_P1_0_LL : "576 576 480 480 480 480"
+ISAI_PARAM_P1_1_LS : "686 406 364 308 308 308"
+ISAI_PARAM_P1_1_LL : "574 574 574 574 574 574"
 ISAI_PARAM_P1_1_ALS : "434 154 154 98 98 98"
 ISAI_PARAM_P1_1_ALL : "126 126 126 126 126 126"
diff --git a/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k/pg_profile_lookup.ini b/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k/pg_profile_lookup.ini
index adcb52ab2..0d881737c 100644
--- a/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k/pg_profile_lookup.ini
+++ b/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k/pg_profile_lookup.ini
@@ -1,18 +1,22 @@
 # PG lossless profiles.
 # speed   cable size  xon  xoff  threshold xon_offset
-  25000   5m    1518  0    15680   1       13440
-  50000   5m    1518  0    21248   1       13440
-  100000  5m    1518  0    34624   1       13440
-  400000  5m    1518  0    117536  1       13440
-  25000   40m   1518  0    16928   1       13440
-  50000   40m   1518  0    23392   1       13440
-  100000  40m   1518  0    38816   1       13440
-  400000  40m   1518  0    135520  1       13440
-  25000   100m  1518  0    18848   1       13440
-  50000   100m  1518  0    27264   1       13440
-  100000  100m  1518  0    46496   1       13440
-  400000  100m  1518  0    166688  1       13440
-  25000   300m  1518  0    25184   1       13440
-  50000   300m  1518  0    40128   1       13440
-  100000  300m  1518  0    72384   1       13440
-  400000  300m  1518  0    268640  1       13440
+  25000   5m    1518  0    15680   1       9408
+  50000   5m    1518  0    21248   1       9408
+  100000  5m    1518  0    34624   1       9408
+  200000  5m    1518  0    62368   1       9408
+  400000  5m    1518  0    117536  1       9408
+  25000   40m   1518  0    16928   1       9408
+  50000   40m   1518  0    23392   1       9408
+  100000  40m   1518  0    38816   1       9408
+  200000  40m   1518  0    71904   1       9408
+  400000  40m   1518  0    135520  1       9408
+  25000   100m  1518  0    18848   1       9408
+  50000   100m  1518  0    27264   1       9408
+  100000  100m  1518  0    46496   1       9408
+  200000  100m  1518  0    87168   1       9408
+  400000  100m  1518  0    166688  1       9408
+  25000   300m  1518  0    25184   1       9408
+  50000   300m  1518  0    40128   1       9408
+  100000  300m  1518  0    72384   1       9408
+  200000  300m  1518  0    138112  1       9408
+  400000  300m  1518  0    268640  1       9408
diff --git a/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k/qos.json.j2 b/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k/qos.json.j2
index 104d2d78d..0f1ecd110 100644
--- a/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k/qos.json.j2
+++ b/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k/qos.json.j2
@@ -18,6 +18,18 @@
             "7":"7"
         }
     },
+    "MAP_PFC_PRIORITY_TO_QUEUE": {
+        "AZURE": {
+            "0": "0",
+            "1": "1",
+            "2": "2",
+            "3": "3",
+            "4": "4",
+            "5": "5",
+            "6": "6",
+            "7": "7"
+        }
+    },
     "TC_TO_PRIORITY_GROUP_MAP": {
     "AZURE": {
         "0": "0",
@@ -32,87 +44,149 @@
     },
        "DSCP_TO_TC_MAP": {
         "AZURE": {
-            "0":"0",
-            "1":"0",
-            "2":"0",
-            "3":"0",
-            "4":"0",
-            "5":"0",
-            "6":"0",
-            "7":"0",
-            "8":"0",
-            "9":"0",
-            "10":"0",
-            "11":"0",
-            "12":"0",
-            "13":"0",
-            "14":"0",
-            "15":"0",
-            "16":"0",
-            "17":"0",
-            "18":"0",
-            "19":"0",
-            "20":"0",
-            "21":"0",
-            "22":"0",
-            "23":"0",
-            "24":"0",
-            "25":"0",
-            "26":"0",
-            "27":"0",
-            "28":"0",
-            "29":"0",
-            "30":"0",
-            "31":"0",
-            "32":"0",
-            "33":"0",
-            "34":"0",
-            "35":"0",
-            "36":"0",
-            "37":"0",
-            "38":"0",
-            "39":"0",
-            "40":"0",
-            "41":"0",
-            "42":"0",
-            "43":"0",
-            "44":"0",
-            "45":"0",
-            "46":"0",
-            "47":"0",
-            "48":"0",
-            "49":"0",
-            "50":"0",
-            "51":"0",
-            "52":"0",
-            "53":"0",
-            "54":"0",
-            "55":"0",
-            "56":"0",
-            "57":"0",
-            "58":"0",
-            "59":"0",
-            "60":"0",
-            "61":"0",
-            "62":"0",
-            "63":"0"
-        }
-    },
-    "PORT_QOS_MAP": {
-       "{{ port_names }}": {
-            "tc_to_pg_map": "[TC_TO_PRIORITY_GROUP_MAP|AZURE]",
-            "tc_to_queue_map": "[TC_TO_QUEUE_MAP|AZURE]",
-            "dscp_to_tc_map": "[DSCP_TO_TC_MAP|AZURE]"
+            "0" : "1",
+            "1" : "1",
+            "2" : "1",
+            "3" : "3",
+            "4" : "4",
+            "5" : "2",
+            "6" : "1",
+            "7" : "1",
+            "8" : "0",
+            "9" : "1",
+            "10": "1",
+            "11": "1",
+            "12": "1",
+            "13": "1",
+            "14": "1",
+            "15": "1",
+            "16": "1",
+            "17": "1",
+            "18": "1",
+            "19": "1",
+            "20": "1",
+            "21": "1",
+            "22": "1",
+            "23": "1",
+            "24": "1",
+            "25": "1",
+            "26": "1",
+            "27": "1",
+            "28": "1",
+            "29": "1",
+            "30": "1",
+            "31": "1",
+            "32": "1",
+            "33": "1",
+            "34": "1",
+            "35": "1",
+            "36": "1",
+            "37": "1",
+            "38": "1",
+            "39": "1",
+            "40": "1",
+            "41": "1",
+            "42": "1",
+            "43": "1",
+            "44": "1",
+            "45": "1",
+            "46": "5",
+            "47": "1",
+            "48": "6",
+            "49": "1",
+            "50": "1",
+            "51": "1",
+            "52": "1",
+            "53": "1",
+            "54": "1",
+            "55": "1",
+            "56": "1",
+            "57": "1",
+            "58": "1",
+            "59": "1",
+            "60": "1",
+            "61": "1",
+            "62": "1",
+            "63": "1"
         }
     },
     "SCHEDULER": {
-        "scheduler.7": {
-            "type": "STRICT"
+        "scheduler.0": {
+            "type"  : "DWRR",
+            "weight": "1"
+        },
+        "scheduler.1": {
+            "type"  : "DWRR",
+            "weight": "1"
         }
     },
     "QUEUE": {
-        "{{ port_names }}|7": {
-            "scheduler": "[SCHEDULER|scheduler.7]"
+{% for port in port_names_list %}
+        "{{ port }}|3": {
+            "scheduler"   : "scheduler.1",
+            "wred_profile"  : "AZURE_LOSSLESS"
+        },
+{% endfor %}
+{% for port in port_names_list %}
+        "{{ port }}|4": {
+            "scheduler"   : "scheduler.1",
+            "wred_profile"  : "AZURE_LOSSLESS"
+        },
+{% endfor %}
+{% for port in port_names_list %}
+        "{{ port }}|0": {
+            "scheduler": "scheduler.0"
+        },
+{% endfor %}
+{% for port in port_names_list %}
+        "{{ port }}|1": {
+            "scheduler": "scheduler.0"
+        },
+{% endfor %}
+{% for port in port_names_list %}
+        "{{ port }}|2": {
+            "scheduler": "scheduler.0"
+        },
+{% endfor %}
+{% for port in port_names_list %}
+        "{{ port }}|5": {
+            "scheduler": "scheduler.0"
+        },
+{% endfor %}
+{% for port in port_names_list %}
+        "{{ port }}|6": {
+            "scheduler": "scheduler.0"
+        }{% if not loop.last %},{% endif %}
+
+{% endfor %}
+    },
+    "PORT_QOS_MAP": {
+{% for port in port_names_list %}
+       "{{ port }}": {
+            "tc_to_pg_map": "AZURE",
+            "tc_to_queue_map": "AZURE",
+            "dscp_to_tc_map": "AZURE",
+            "pfc_to_queue_map": "AZURE",
+            "pfc_enable": "3,4"
+        }{% if not loop.last %},{% endif %}
+
+{% endfor %}
+    },
+    "WRED_PROFILE": {
+        "AZURE_LOSSLESS" : {
+            "wred_green_enable"      : "true",
+            "wred_yellow_enable"     : "true",
+            "wred_red_enable"        : "true",
+            "ecn"                    : "ecn_all",
+            "green_max_threshold"    : "2097152",
+            "green_min_threshold"    : "1048576",
+            "yellow_max_threshold"   : "2097152",
+            "yellow_min_threshold"   : "1048576",
+            "red_max_threshold"      : "2097152",
+            "red_min_threshold"      : "1048576",
+            "green_drop_probability" : "5",
+            "yellow_drop_probability": "5",
+            "red_drop_probability"   : "5"
         }
     }
 }
diff --git a/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k/qos_defaults_def_lossy.j2 b/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k/qos_defaults_def_lossy.j2
index 104d2d78d..c1170619b 100644
--- a/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k/qos_defaults_def_lossy.j2
+++ b/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k/qos_defaults_def_lossy.j2
@@ -23,8 +23,8 @@
         "0": "0",
         "1": "0",
         "2": "0",
-        "3": "3",
-        "4": "4",
+        "3": "1",
+        "4": "2",
         "5": "0",
         "6": "0",
         "7": "0"
@@ -99,11 +99,14 @@
         }
     },
     "PORT_QOS_MAP": {
-       "{{ port_names }}": {
-            "tc_to_pg_map": "[TC_TO_PRIORITY_GROUP_MAP|AZURE]",
-            "tc_to_queue_map": "[TC_TO_QUEUE_MAP|AZURE]",
-            "dscp_to_tc_map": "[DSCP_TO_TC_MAP|AZURE]"
-        }
+{% for port in port_names_list %}
+       "{{ port }}": {
+            "tc_to_pg_map": "AZURE",
+            "tc_to_queue_map": "AZURE",
+            "dscp_to_tc_map": "AZURE"
+        }{% if not loop.last %},{% endif %}
+
+{% endfor %}
     },
     "SCHEDULER": {
         "scheduler.7": {
diff --git a/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k/qos_defaults_t1.j2 b/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k/qos_defaults_t1.j2
index 4b9748c7b..0f1ecd110 100644
--- a/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k/qos_defaults_t1.j2
+++ b/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k/qos_defaults_t1.j2
@@ -18,6 +18,18 @@
             "7":"7"
         }
     },
+    "MAP_PFC_PRIORITY_TO_QUEUE": {
+        "AZURE": {
+            "0": "0",
+            "1": "1",
+            "2": "2",
+            "3": "3",
+            "4": "4",
+            "5": "5",
+            "6": "6",
+            "7": "7"
+        }
+    },
     "TC_TO_PRIORITY_GROUP_MAP": {
     "AZURE": {
         "0": "0",
@@ -32,83 +44,149 @@
     },
        "DSCP_TO_TC_MAP": {
         "AZURE": {
-            "0":"0",
-            "1":"0",
-            "2":"0",
-            "3":"3",
-            "4":"4",
-            "5":"0",
-            "6":"0",
-            "7":"0",
-            "8":"1",
-            "9":"0",
-            "10":"0",
-            "11":"0",
-            "12":"0",
-            "13":"0",
-            "14":"0",
-            "15":"0",
-            "16":"0",
-            "17":"0",
-            "18":"0",
-            "19":"0",
-            "20":"0",
-            "21":"0",
-            "22":"0",
-            "23":"0",
-            "24":"0",
-            "25":"0",
-            "26":"0",
-            "27":"0",
-            "28":"0",
-            "29":"0",
-            "30":"0",
-            "31":"0",
-            "32":"0",
-            "33":"0",
-            "34":"0",
-            "35":"0",
-            "36":"0",
-            "37":"0",
-            "38":"0",
-            "39":"0",
-            "40":"0",
-            "41":"0",
-            "42":"0",
-            "43":"0",
-            "44":"0",
-            "45":"0",
-            "46":"0",
-            "47":"0",
-            "48":"0",
-            "49":"0",
-            "50":"0",
-            "51":"0",
-            "52":"0",
-            "53":"0",
-            "54":"0",
-            "55":"0",
-            "56":"0",
-            "57":"0",
-            "58":"0",
-            "59":"0",
-            "60":"0",
-            "61":"0",
-            "62":"0",
-            "63":"0"
+            "0" : "1",
+            "1" : "1",
+            "2" : "1",
+            "3" : "3",
+            "4" : "4",
+            "5" : "2",
+            "6" : "1",
+            "7" : "1",
+            "8" : "0",
+            "9" : "1",
+            "10": "1",
+            "11": "1",
+            "12": "1",
+            "13": "1",
+            "14": "1",
+            "15": "1",
+            "16": "1",
+            "17": "1",
+            "18": "1",
+            "19": "1",
+            "20": "1",
+            "21": "1",
+            "22": "1",
+            "23": "1",
+            "24": "1",
+            "25": "1",
+            "26": "1",
+            "27": "1",
+            "28": "1",
+            "29": "1",
+            "30": "1",
+            "31": "1",
+            "32": "1",
+            "33": "1",
+            "34": "1",
+            "35": "1",
+            "36": "1",
+            "37": "1",
+            "38": "1",
+            "39": "1",
+            "40": "1",
+            "41": "1",
+            "42": "1",
+            "43": "1",
+            "44": "1",
+            "45": "1",
+            "46": "5",
+            "47": "1",
+            "48": "6",
+            "49": "1",
+            "50": "1",
+            "51": "1",
+            "52": "1",
+            "53": "1",
+            "54": "1",
+            "55": "1",
+            "56": "1",
+            "57": "1",
+            "58": "1",
+            "59": "1",
+            "60": "1",
+            "61": "1",
+            "62": "1",
+            "63": "1"
+        }
+    },
+    "SCHEDULER": {
+        "scheduler.0": {
+            "type"  : "DWRR",
+            "weight": "1"
+        },
+        "scheduler.1": {
+            "type"  : "DWRR",
+            "weight": "1"
         }
     },
+    "QUEUE": {
+{% for port in port_names_list %}
+        "{{ port }}|3": {
+            "scheduler"   : "scheduler.1",
+            "wred_profile"  : "AZURE_LOSSLESS"
+        },
+{% endfor %}
+{% for port in port_names_list %}
+        "{{ port }}|4": {
+            "scheduler"   : "scheduler.1",
+            "wred_profile"  : "AZURE_LOSSLESS"
+        },
+{% endfor %}
+{% for port in port_names_list %}
+        "{{ port }}|0": {
+            "scheduler": "scheduler.0"
+        },
+{% endfor %}
+{% for port in port_names_list %}
+        "{{ port }}|1": {
+            "scheduler": "scheduler.0"
+        },
+{% endfor %}
+{% for port in port_names_list %}
+        "{{ port }}|2": {
+            "scheduler": "scheduler.0"
+        },
+{% endfor %}
+{% for port in port_names_list %}
+        "{{ port }}|5": {
+            "scheduler": "scheduler.0"
+        },
+{% endfor %}
+{% for port in port_names_list %}
+        "{{ port }}|6": {
+            "scheduler": "scheduler.0"
+        }{% if not loop.last %},{% endif %}
+
+{% endfor %}
+    },
     "PORT_QOS_MAP": {
-       "{{ port_names }}": {
-            "tc_to_pg_map": "[TC_TO_PRIORITY_GROUP_MAP|AZURE]",
-            "tc_to_queue_map": "[TC_TO_QUEUE_MAP|AZURE]",
-            "dscp_to_tc_map": "[DSCP_TO_TC_MAP|AZURE]",
+{% for port in port_names_list %}
+       "{{ port }}": {
+            "tc_to_pg_map": "AZURE",
+            "tc_to_queue_map": "AZURE",
+            "dscp_to_tc_map": "AZURE",
+            "pfc_to_queue_map": "AZURE",
             "pfc_enable": "3,4"
-        }
+        }{% if not loop.last %},{% endif %}
+
+{% endfor %}
     },
     "WRED_PROFILE": {
         "AZURE_LOSSLESS" : {
-            "red_min_threshold":"50000"
+            "wred_green_enable"      : "true",
+            "wred_yellow_enable"     : "true",
+            "wred_red_enable"        : "true",
+            "ecn"                    : "ecn_all",
+            "green_max_threshold"    : "2097152",
+            "green_min_threshold"    : "1048576",
+            "yellow_max_threshold"   : "2097152",
+            "yellow_min_threshold"   : "1048576",
+            "red_max_threshold"      : "2097152",
+            "red_min_threshold"      : "1048576",
+            "green_drop_probability" : "5",
+            "yellow_drop_probability": "5",
+            "red_drop_probability"   : "5"
         }
     }
 }
diff --git a/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k_104x1025_6x100/buffers.json.j2 b/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k_104x1025_6x100/buffers.json.j2
index 1a31812c2..794b5c854 100644
--- a/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k_104x1025_6x100/buffers.json.j2
+++ b/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k_104x1025_6x100/buffers.json.j2
@@ -1,3 +1,63 @@
+{# Default values which will be used if no actual configura available #}
+{% set default_cable = '40m' %}
+
+{# Port configuration to cable length look-up table #}
+{# Each record describes mapping of DUT (DUT port) role and neighbor role to cable length #}
+{# Roles described in the minigraph #}
+{% set ports2cable = {
+        'torrouter_server'       : '5m',
+        'leafrouter_torrouter'   : '40m',
+        'spinerouter_leafrouter' : '300m'
+        }
+%}
+
+{%- macro cable_length(port_name) %}
+    {%- set cable_len = [] %}
+    {%- for local_port in DEVICE_NEIGHBOR %}
+        {%- if local_port == port_name %}
+            {%- if DEVICE_NEIGHBOR_METADATA is defined and DEVICE_NEIGHBOR_METADATA[DEVICE_NEIGHBOR[local_port].name] %}
+                {%- set neighbor = DEVICE_NEIGHBOR_METADATA[DEVICE_NEIGHBOR[local_port].name] %}
+                {%- set neighbor_role = neighbor.type %}
+                {%- set roles1 = switch_role + '_' + neighbor_role %}
+                {%- set roles2 = neighbor_role + '_' + switch_role %}
+                {%- set roles1 = roles1 | lower %}
+                {%- set roles2 = roles2 | lower %}
+                {%- if roles1 in ports2cable %}
+                    {%- if cable_len.append(ports2cable[roles1]) %}{% endif %}
+                {%- elif roles2 in ports2cable %}
+                    {%- if cable_len.append(ports2cable[roles2]) %}{% endif %}
+                {%- endif %}
+            {%- endif %}
+        {%- endif %}
+    {%- endfor %}
+    {%- if cable_len -%}
+        {{ cable_len.0 }}
+    {%- else %}
+        {%- if switch_role.lower() == 'torrouter' %}
+            {%- for local_port in VLAN_MEMBER %}
+                {%- if local_port[1] == port_name %}
+                    {%- set roles3 = switch_role + '_' + 'server' %}
+                    {%- set roles3 = roles3 | lower %}
+                    {%- if roles3 in ports2cable %}
+                        {%- if cable_len.append(ports2cable[roles3]) %}{% endif %}
+                    {%- endif %}
+                {%- endif %}
+            {%- endfor %}
+            {%- if cable_len -%}
+                {{ cable_len.0 }}
+            {%- else -%}
+                {{ default_cable }}
+            {%- endif %}
+        {%- else -%}
+            {{ default_cable }}
+        {%- endif %}
+    {%- endif %}
+{%- endmacro %}
+
+{%- if DEVICE_METADATA is defined %}
+{%- set switch_role = DEVICE_METADATA['localhost']['type'] %}
+{%- endif -%}
+
 {% set port_names_list = [] %}
 {% for port in PORT %}
     {%- if port_names_list.append(port) %}{% endif %}
@@ -5,34 +65,98 @@
 {% set port_names = port_names_list | join(',') -%}
 
 {
+    "CABLE_LENGTH": {
+        "AZURE": {
+    {% for port in PORT %}
+        {% set cable = cable_length(port) -%}
+        "{{ port }}": "{{ cable }}"{%- if not loop.last -%},{% endif %}
+
+    {% endfor %}
+    }
+    },
     "BUFFER_POOL": {
+        "ingress_lossless_pool": {
+            "size": "47218432",
+            "type": "ingress",
+            "mode": "dynamic",
+            "xoff": "17708800"
+        },
         "lossy_pool": {
-            "size": "56985600",
+            "size": "18874368",
             "type": "egress",
             "mode": "dynamic",
             "xoff": "0"
+        },
+        "egress_lossless_pool": {
+            "size": "66092800",
+            "mode": "static",
+            "type": "egress"
         }
     },
     "BUFFER_PROFILE": {
+        "ingress_lossless_profile": {
+            "pool":"ingress_lossless_pool",
+            "xoff":"38816",
+            "size":"1518",
+            "dynamic_th":"1",
+            "xon_offset":"9408"
+        },
+        "egress_lossless_profile": {
+            "pool":"ingress_lossless_pool",
+            "size":"0",
+            "static_th":"9497600"
+        },
         "ingress_lossy_profile": {
-            "pool":"[BUFFER_POOL|lossy_pool]",
+            "pool":"lossy_pool",
             "size":"0",
             "static_th":"9497600"
         },
         "egress_lossy_profile": {
-            "pool":"[BUFFER_POOL|lossy_pool]",
+            "pool":"lossy_pool",
             "size":"1518",
             "dynamic_th":"2"
         }
     },
     "BUFFER_PG": {
-        "{{ port_names }}|0-7": {
-            "profile" : "[BUFFER_PROFILE|ingress_lossy_profile]"
-        }
+{% for port in port_names_list %}
+                "{{ port }}|3-4": {
+                     "profile" : "ingress_lossless_profile"
+                },
+{% endfor %}
+{% for port in port_names_list %}
+                "{{ port }}|0": {
+                    "profile" : "ingress_lossy_profile"
+                },
+{% endfor %}
+{% for port in port_names_list %}
+                "{{ port }}|1-2": {
+                    "profile" : "ingress_lossy_profile"
+                },
+{% endfor %}
+{% for port in port_names_list %}
+                "{{ port }}|5-7": {
+                    "profile" : "ingress_lossy_profile"
+                }{% if not loop.last %},{% endif %}
+
+{% endfor %}
     },
+
     "BUFFER_QUEUE": {
-            "{{ port_names }}|0-7": {
-            "profile" : "[BUFFER_PROFILE|egress_lossy_profile]"
-        }
+{% for port in port_names_list %}
+        "{{ port }}|3-4": {
+             "profile" : "egress_lossless_profile"
+        },
+{% endfor %}
+{% for port in port_names_list %}
+        "{{ port }}|0-2": {
+            "profile" : "egress_lossy_profile"
+        },
+{% endfor %}
+{% for port in port_names_list %}
+        "{{ port }}|5-7": {
+            "profile" : "egress_lossy_profile"
+        }{% if not loop.last %},{% endif %}
+
+{% endfor %}
     }
 }
diff --git a/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k_104x1025_6x100/buffers_defaults_def_lossy.j2 b/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k_104x1025_6x100/buffers_defaults_def_lossy.j2
index 1a31812c2..abb756c7d 100644
--- a/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k_104x1025_6x100/buffers_defaults_def_lossy.j2
+++ b/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k_104x1025_6x100/buffers_defaults_def_lossy.j2
@@ -15,24 +15,28 @@
     },
     "BUFFER_PROFILE": {
         "ingress_lossy_profile": {
-            "pool":"[BUFFER_POOL|lossy_pool]",
+            "pool":"lossy_pool",
             "size":"0",
             "static_th":"9497600"
         },
         "egress_lossy_profile": {
-            "pool":"[BUFFER_POOL|lossy_pool]",
+            "pool":"lossy_pool",
             "size":"1518",
             "dynamic_th":"2"
         }
     },
     "BUFFER_PG": {
-        "{{ port_names }}|0-7": {
-            "profile" : "[BUFFER_PROFILE|ingress_lossy_profile]"
-        }
+{% for port in port_names_list %}
+        "{{ port }}|0-7": {
+            "profile" : "ingress_lossy_profile"
+        }{% if not loop.last %},{% endif %}
+{% endfor %}
     },
     "BUFFER_QUEUE": {
-            "{{ port_names }}|0-7": {
-            "profile" : "[BUFFER_PROFILE|egress_lossy_profile]"
-        }
+{% for port in port_names_list %}
+        "{{ port }}|0-7": {
+            "profile" : "egress_lossy_profile"
+        }{% if not loop.last %},{% endif %}
+{% endfor %}
     }
 }
diff --git a/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k_104x1025_6x100/buffers_defaults_t1.j2 b/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k_104x1025_6x100/buffers_defaults_t1.j2
index 93dac6b19..1479f78fe 100644
--- a/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k_104x1025_6x100/buffers_defaults_t1.j2
+++ b/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k_104x1025_6x100/buffers_defaults_t1.j2
@@ -86,52 +86,76 @@
             "type": "egress",
             "mode": "dynamic",
             "xoff": "0"
+        },
+        "egress_lossless_pool": {
+            "size": "66092800",
+            "type": "egress"
         }
     },
     "BUFFER_PROFILE": {
         "ingress_lossless_profile": {
-            "pool":"[BUFFER_POOL|ingress_lossless_pool]",
+            "pool":"ingress_lossless_pool",
             "xoff":"38816",
             "size":"1518",
             "dynamic_th":"1",
-            "xon_offset":"13440"
+            "xon_offset":"9408"
         },
         "egress_lossless_profile": {
-            "pool":"[BUFFER_POOL|ingress_lossless_pool]",
+            "pool":"ingress_lossless_pool",
             "size":"0",
             "static_th":"9497600"
         },
         "ingress_lossy_profile": {
-            "pool":"[BUFFER_POOL|lossy_pool]",
+            "pool":"lossy_pool",
             "size":"0",
             "static_th":"9497600"
         },
         "egress_lossy_profile": {
-            "pool":"[BUFFER_POOL|lossy_pool]",
+            "pool":"lossy_pool",
             "size":"1518",
             "dynamic_th":"2"
         }
     },
     "BUFFER_PG": {
-        "{{ port_names }}|0-2": {
-            "profile" : "[BUFFER_PROFILE|ingress_lossy_profile]"
-        },
-        "{{ port_names }}|3-4": {
-            "profile" : "[BUFFER_PROFILE|ingress_lossless_profile]"
-        },
-        "{{ port_names }}|5-7": {
-            "profile" : "[BUFFER_PROFILE|ingress_lossy_profile]"
-        }
+{% for port in port_names_list %}
+                "{{ port }}|3-4": {
+                     "profile" : "ingress_lossless_profile"
+                },
+{% endfor %}
+{% for port in port_names_list %}
+                "{{ port }}|0": {
+                    "profile" : "ingress_lossy_profile"
+                },
+{% endfor %}
+{% for port in port_names_list %}
+                "{{ port }}|1-2": {
+                    "profile" : "ingress_lossy_profile"
+                },
+{% endfor %}
+{% for port in port_names_list %}
+                "{{ port }}|5-7": {
+                    "profile" : "ingress_lossy_profile"
+                }{% if not loop.last %},{% endif %}
+
+{% endfor %}
     },
+
     "BUFFER_QUEUE": {
-        "{{ port_names }}|3-4": {
-            "profile" : "[BUFFER_PROFILE|egress_lossless_profile]"
+{% for port in port_names_list %}
+        "{{ port }}|3-4": {
+             "profile" : "egress_lossless_profile"
         },
-        "{{ port_names }}|0-2": {
-            "profile" : "[BUFFER_PROFILE|egress_lossy_profile]"
+{% endfor %}
+{% for port in port_names_list %}
+        "{{ port }}|0-2": {
+            "profile" : "egress_lossy_profile"
         },
-        "{{ port_names }}|5-7": {
-            "profile" : "[BUFFER_PROFILE|egress_lossy_profile]"
-        }
+{% endfor %}
+{% for port in port_names_list %}
+        "{{ port }}|5-7": {
+            "profile" : "egress_lossy_profile"
+        }{% if not loop.last %},{% endif %}
+
+{% endfor %}
     }
 }
diff --git a/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k_104x1025_6x100/innovium.77700_A b/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k_104x1025_6x100/innovium.77700_A
index 84aa41983..ec1330780 100644
--- a/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k_104x1025_6x100/innovium.77700_A
+++ b/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k_104x1025_6x100/innovium.77700_A
@@ -5,6 +5,7 @@ device_id:         0x1b58
 # Hardware constraint information
 hardware:
         num_ibs:           6
+        ib_active:         0,1,2,3,4,5
 
         ports_per_ib:      32, 32, 32, 32, 20, 20
         recirc_port_num:   32, 32, 32, 32, 32, 32
diff --git a/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k_104x1025_6x100/innovium.77700_B b/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k_104x1025_6x100/innovium.77700_B
index 27297b313..57ba52cbc 100644
--- a/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k_104x1025_6x100/innovium.77700_B
+++ b/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k_104x1025_6x100/innovium.77700_B
@@ -5,6 +5,7 @@ device_id:         0x1b58
 # Hardware constraint information
 hardware:
         num_ibs:           6
+        ib_active:         0,1,2,3,4,5
 
         ports_per_ib:      32, 32, 32, 32, 20, 20
         recirc_port_num:   32, 32, 32, 32, 32, 32
diff --git a/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k_104x1025_6x100/ivm.sai.config.yaml b/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k_104x1025_6x100/ivm.sai.config.yaml
index 5e5d2fe66..c116733fc 100644
--- a/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k_104x1025_6x100/ivm.sai.config.yaml
+++ b/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k_104x1025_6x100/ivm.sai.config.yaml
@@ -3,7 +3,12 @@ IFCS_SKU_FILE : "/usr/share/sonic/hwsku/innovium.77700_B"
 IFCS_INNO_CLI_PORT : "9999"
 IFCS_TARGET : "device"
 INNOVIUM_DIR : "/innovium"
-PYTHONPATH : "$INNOVIUM_DIR:$INNOVIUM_DIR/cmds:$INNOVIUM_DIR/scripts:$INNOVIUM_DIR/test/:$INNOVIUM_DIR/test/utils:$INNOVIUM_DIR/utils:$INNOVIUM_DIR/pyctypes"
+PYTHONPATH : "$INNOVIUM_DIR:$INNOVIUM_DIR/cmds:$INNOVIUM_DIR/scripts:$INNOVIUM_DIR/test/:$INNOVIUM_DIR/test/utils:$INNOVIUM_DIR/utils:$INNOVIUM_DIR/pyctypes:$INNOVIUM_DIR/ifcs_cmds:$INNOVIUM_DIR/testutil"
 PLATFORM_LIBRARY: "/usr/share/sonic/platform/lib_ivm_serdes_pltfm.so"
 IVM_SAI_DATAPATH_CONFIG_FILE: "/usr/share/sonic/hwsku/ivm.sai.datapath.config.yaml"
 IVM_SAI_PARAM_A0008: "32"
+IVM_SAI_PARAM_A0016: "1"
+IVM_SAI_PARAM_A0003: "4"
+IVM_SAI_PARAM_A0001: "TRUE"
+IVM_SAI_PARAM_A0014: "TRUE"
+IVM_SAI_PARAM_A0013: "1"
diff --git a/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k_104x1025_6x100/pg_profile_lookup.ini b/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k_104x1025_6x100/pg_profile_lookup.ini
index adcb52ab2..0d881737c 100644
--- a/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k_104x1025_6x100/pg_profile_lookup.ini
+++ b/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k_104x1025_6x100/pg_profile_lookup.ini
@@ -1,18 +1,22 @@
 # PG lossless profiles.
 # speed   cable size  xon  xoff  threshold xon_offset
-  25000   5m    1518  0    15680   1       13440
-  50000   5m    1518  0    21248   1       13440
-  100000  5m    1518  0    34624   1       13440
-  400000  5m    1518  0    117536  1       13440
-  25000   40m   1518  0    16928   1       13440
-  50000   40m   1518  0    23392   1       13440
-  100000  40m   1518  0    38816   1       13440
-  400000  40m   1518  0    135520  1       13440
-  25000   100m  1518  0    18848   1       13440
-  50000   100m  1518  0    27264   1       13440
-  100000  100m  1518  0    46496   1       13440
-  400000  100m  1518  0    166688  1       13440
-  25000   300m  1518  0    25184   1       13440
-  50000   300m  1518  0    40128   1       13440
-  100000  300m  1518  0    72384   1       13440
-  400000  300m  1518  0    268640  1       13440
+  25000   5m    1518  0    15680   1       9408
+  50000   5m    1518  0    21248   1       9408
+  100000  5m    1518  0    34624   1       9408
+  200000  5m    1518  0    62368   1       9408
+  400000  5m    1518  0    117536  1       9408
+  25000   40m   1518  0    16928   1       9408
+  50000   40m   1518  0    23392   1       9408
+  100000  40m   1518  0    38816   1       9408
+  200000  40m   1518  0    71904   1       9408
+  400000  40m   1518  0    135520  1       9408
+  25000   100m  1518  0    18848   1       9408
+  50000   100m  1518  0    27264   1       9408
+  100000  100m  1518  0    46496   1       9408
+  200000  100m  1518  0    87168   1       9408
+  400000  100m  1518  0    166688  1       9408
+  25000   300m  1518  0    25184   1       9408
+  50000   300m  1518  0    40128   1       9408
+  100000  300m  1518  0    72384   1       9408
+  200000  300m  1518  0    138112  1       9408
+  400000  300m  1518  0    268640  1       9408
diff --git a/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k_104x1025_6x100/qos.json.j2 b/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k_104x1025_6x100/qos.json.j2
index 104d2d78d..b03078465 100644
--- a/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k_104x1025_6x100/qos.json.j2
+++ b/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k_104x1025_6x100/qos.json.j2
@@ -32,87 +32,98 @@
     },
        "DSCP_TO_TC_MAP": {
         "AZURE": {
-            "0":"0",
-            "1":"0",
-            "2":"0",
-            "3":"0",
-            "4":"0",
-            "5":"0",
-            "6":"0",
-            "7":"0",
-            "8":"0",
-            "9":"0",
-            "10":"0",
-            "11":"0",
-            "12":"0",
-            "13":"0",
-            "14":"0",
-            "15":"0",
-            "16":"0",
-            "17":"0",
-            "18":"0",
-            "19":"0",
-            "20":"0",
-            "21":"0",
-            "22":"0",
-            "23":"0",
-            "24":"0",
-            "25":"0",
-            "26":"0",
-            "27":"0",
-            "28":"0",
-            "29":"0",
-            "30":"0",
-            "31":"0",
-            "32":"0",
-            "33":"0",
-            "34":"0",
-            "35":"0",
-            "36":"0",
-            "37":"0",
-            "38":"0",
-            "39":"0",
-            "40":"0",
-            "41":"0",
-            "42":"0",
-            "43":"0",
-            "44":"0",
-            "45":"0",
-            "46":"0",
-            "47":"0",
-            "48":"0",
-            "49":"0",
-            "50":"0",
-            "51":"0",
-            "52":"0",
-            "53":"0",
-            "54":"0",
-            "55":"0",
-            "56":"0",
-            "57":"0",
-            "58":"0",
-            "59":"0",
-            "60":"0",
-            "61":"0",
-            "62":"0",
-            "63":"0"
+            "0" : "1",
+            "1" : "1",
+            "2" : "1",
+            "3" : "3",
+            "4" : "4",
+            "5" : "2",
+            "6" : "1",
+            "7" : "1",
+            "8" : "0",
+            "9" : "1",
+            "10": "1",
+            "11": "1",
+            "12": "1",
+            "13": "1",
+            "14": "1",
+            "15": "1",
+            "16": "1",
+            "17": "1",
+            "18": "1",
+            "19": "1",
+            "20": "1",
+            "21": "1",
+            "22": "1",
+            "23": "1",
+            "24": "1",
+            "25": "1",
+            "26": "1",
+            "27": "1",
+            "28": "1",
+            "29": "1",
+            "30": "1",
+            "31": "1",
+            "32": "1",
+            "33": "1",
+            "34": "1",
+            "35": "1",
+            "36": "1",
+            "37": "1",
+            "38": "1",
+            "39": "1",
+            "40": "1",
+            "41": "1",
+            "42": "1",
+            "43": "1",
+            "44": "1",
+            "45": "1",
+            "46": "5",
+            "47": "1",
+            "48": "6",
+            "49": "1",
+            "50": "1",
+            "51": "1",
+            "52": "1",
+            "53": "1",
+            "54": "1",
+            "55": "1",
+            "56": "1",
+            "57": "1",
+            "58": "1",
+            "59": "1",
+            "60": "1",
+            "61": "1",
+            "62": "1",
+            "63": "1"
         }
     },
     "PORT_QOS_MAP": {
-       "{{ port_names }}": {
-            "tc_to_pg_map": "[TC_TO_PRIORITY_GROUP_MAP|AZURE]",
-            "tc_to_queue_map": "[TC_TO_QUEUE_MAP|AZURE]",
-            "dscp_to_tc_map": "[DSCP_TO_TC_MAP|AZURE]"
-        }
-    },
-    "SCHEDULER": {
-        "scheduler.7": {
-            "type": "STRICT"
-        }
+{% for port in port_names_list %}
+       "{{ port }}": {
+            "tc_to_pg_map": "AZURE",
+            "tc_to_queue_map": "AZURE",
+            "dscp_to_tc_map": "AZURE",
+            "pfc_enable": "3,4"
+        }{% if not loop.last %},{% endif %}
+
+{% endfor %}
     },
-    "QUEUE": {
-        "{{ port_names }}|7": {
-            "scheduler": "[SCHEDULER|scheduler.7]"
+    "WRED_PROFILE": {
+        "AZURE_LOSSLESS" : {
+            "wred_green_enable"      : "true",
+            "wred_yellow_enable"     : "true",
+            "wred_red_enable"        : "true",
+            "ecn"                    : "ecn_all",
+            "green_max_threshold"    : "2097152",
+            "green_min_threshold"    : "1048576",
+            "yellow_max_threshold"   : "2097152",
+            "yellow_min_threshold"   : "1048576",
+            "red_max_threshold"      : "2097152",
+            "red_min_threshold"      : "1048576",
+            "green_drop_probability" : "5",
+            "yellow_drop_probability": "5",
+            "red_drop_probability"   : "5"
         }
     }
 }
diff --git a/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k_104x1025_6x100/qos_defaults_def_lossy.j2 b/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k_104x1025_6x100/qos_defaults_def_lossy.j2
index 104d2d78d..c1170619b 100644
--- a/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k_104x1025_6x100/qos_defaults_def_lossy.j2
+++ b/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k_104x1025_6x100/qos_defaults_def_lossy.j2
@@ -23,8 +23,8 @@
         "0": "0",
         "1": "0",
         "2": "0",
-        "3": "3",
-        "4": "4",
+        "3": "1",
+        "4": "2",
         "5": "0",
         "6": "0",
         "7": "0"
@@ -99,11 +99,14 @@
         }
     },
     "PORT_QOS_MAP": {
-       "{{ port_names }}": {
-            "tc_to_pg_map": "[TC_TO_PRIORITY_GROUP_MAP|AZURE]",
-            "tc_to_queue_map": "[TC_TO_QUEUE_MAP|AZURE]",
-            "dscp_to_tc_map": "[DSCP_TO_TC_MAP|AZURE]"
-        }
+{% for port in port_names_list %}
+       "{{ port }}": {
+            "tc_to_pg_map": "AZURE",
+            "tc_to_queue_map": "AZURE",
+            "dscp_to_tc_map": "AZURE"
+        }{% if not loop.last %},{% endif %}
+
+{% endfor %}
     },
     "SCHEDULER": {
         "scheduler.7": {
diff --git a/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k_104x1025_6x100/qos_defaults_t1.j2 b/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k_104x1025_6x100/qos_defaults_t1.j2
index 4b9748c7b..b03078465 100644
--- a/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k_104x1025_6x100/qos_defaults_t1.j2
+++ b/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k_104x1025_6x100/qos_defaults_t1.j2
@@ -32,83 +32,98 @@
     },
        "DSCP_TO_TC_MAP": {
         "AZURE": {
-            "0":"0",
-            "1":"0",
-            "2":"0",
-            "3":"3",
-            "4":"4",
-            "5":"0",
-            "6":"0",
-            "7":"0",
-            "8":"1",
-            "9":"0",
-            "10":"0",
-            "11":"0",
-            "12":"0",
-            "13":"0",
-            "14":"0",
-            "15":"0",
-            "16":"0",
-            "17":"0",
-            "18":"0",
-            "19":"0",
-            "20":"0",
-            "21":"0",
-            "22":"0",
-            "23":"0",
-            "24":"0",
-            "25":"0",
-            "26":"0",
-            "27":"0",
-            "28":"0",
-            "29":"0",
-            "30":"0",
-            "31":"0",
-            "32":"0",
-            "33":"0",
-            "34":"0",
-            "35":"0",
-            "36":"0",
-            "37":"0",
-            "38":"0",
-            "39":"0",
-            "40":"0",
-            "41":"0",
-            "42":"0",
-            "43":"0",
-            "44":"0",
-            "45":"0",
-            "46":"0",
-            "47":"0",
-            "48":"0",
-            "49":"0",
-            "50":"0",
-            "51":"0",
-            "52":"0",
-            "53":"0",
-            "54":"0",
-            "55":"0",
-            "56":"0",
-            "57":"0",
-            "58":"0",
-            "59":"0",
-            "60":"0",
-            "61":"0",
-            "62":"0",
-            "63":"0"
+            "0" : "1",
+            "1" : "1",
+            "2" : "1",
+            "3" : "3",
+            "4" : "4",
+            "5" : "2",
+            "6" : "1",
+            "7" : "1",
+            "8" : "0",
+            "9" : "1",
+            "10": "1",
+            "11": "1",
+            "12": "1",
+            "13": "1",
+            "14": "1",
+            "15": "1",
+            "16": "1",
+            "17": "1",
+            "18": "1",
+            "19": "1",
+            "20": "1",
+            "21": "1",
+            "22": "1",
+            "23": "1",
+            "24": "1",
+            "25": "1",
+            "26": "1",
+            "27": "1",
+            "28": "1",
+            "29": "1",
+            "30": "1",
+            "31": "1",
+            "32": "1",
+            "33": "1",
+            "34": "1",
+            "35": "1",
+            "36": "1",
+            "37": "1",
+            "38": "1",
+            "39": "1",
+            "40": "1",
+            "41": "1",
+            "42": "1",
+            "43": "1",
+            "44": "1",
+            "45": "1",
+            "46": "5",
+            "47": "1",
+            "48": "6",
+            "49": "1",
+            "50": "1",
+            "51": "1",
+            "52": "1",
+            "53": "1",
+            "54": "1",
+            "55": "1",
+            "56": "1",
+            "57": "1",
+            "58": "1",
+            "59": "1",
+            "60": "1",
+            "61": "1",
+            "62": "1",
+            "63": "1"
         }
     },
     "PORT_QOS_MAP": {
-       "{{ port_names }}": {
-            "tc_to_pg_map": "[TC_TO_PRIORITY_GROUP_MAP|AZURE]",
-            "tc_to_queue_map": "[TC_TO_QUEUE_MAP|AZURE]",
-            "dscp_to_tc_map": "[DSCP_TO_TC_MAP|AZURE]",
+{% for port in port_names_list %}
+       "{{ port }}": {
+            "tc_to_pg_map": "AZURE",
+            "tc_to_queue_map": "AZURE",
+            "dscp_to_tc_map": "AZURE",
             "pfc_enable": "3,4"
-        }
+        }{% if not loop.last %},{% endif %}
+
+{% endfor %}
     },
     "WRED_PROFILE": {
         "AZURE_LOSSLESS" : {
-            "red_min_threshold":"50000"
+            "wred_green_enable"      : "true",
+            "wred_yellow_enable"     : "true",
+            "wred_red_enable"        : "true",
+            "ecn"                    : "ecn_all",
+            "green_max_threshold"    : "2097152",
+            "green_min_threshold"    : "1048576",
+            "yellow_max_threshold"   : "2097152",
+            "yellow_min_threshold"   : "1048576",
+            "red_max_threshold"      : "2097152",
+            "red_min_threshold"      : "1048576",
+            "green_drop_probability" : "5",
+            "yellow_drop_probability": "5",
+            "red_drop_probability"   : "5"
         }
     }
 }
diff --git a/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k_24x400_8x100/buffers.json.j2 b/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k_24x400_8x100/buffers.json.j2
index 1a31812c2..794b5c854 100644
--- a/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k_24x400_8x100/buffers.json.j2
+++ b/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k_24x400_8x100/buffers.json.j2
@@ -1,3 +1,63 @@
+{# Default values which will be used if no actual configura available #}
+{% set default_cable = '40m' %}
+
+{# Port configuration to cable length look-up table #}
+{# Each record describes mapping of DUT (DUT port) role and neighbor role to cable length #}
+{# Roles described in the minigraph #}
+{% set ports2cable = {
+        'torrouter_server'       : '5m',
+        'leafrouter_torrouter'   : '40m',
+        'spinerouter_leafrouter' : '300m'
+        }
+%}
+
+{%- macro cable_length(port_name) %}
+    {%- set cable_len = [] %}
+    {%- for local_port in DEVICE_NEIGHBOR %}
+        {%- if local_port == port_name %}
+            {%- if DEVICE_NEIGHBOR_METADATA is defined and DEVICE_NEIGHBOR_METADATA[DEVICE_NEIGHBOR[local_port].name] %}
+                {%- set neighbor = DEVICE_NEIGHBOR_METADATA[DEVICE_NEIGHBOR[local_port].name] %}
+                {%- set neighbor_role = neighbor.type %}
+                {%- set roles1 = switch_role + '_' + neighbor_role %}
+                {%- set roles2 = neighbor_role + '_' + switch_role %}
+                {%- set roles1 = roles1 | lower %}
+                {%- set roles2 = roles2 | lower %}
+                {%- if roles1 in ports2cable %}
+                    {%- if cable_len.append(ports2cable[roles1]) %}{% endif %}
+                {%- elif roles2 in ports2cable %}
+                    {%- if cable_len.append(ports2cable[roles2]) %}{% endif %}
+                {%- endif %}
+            {%- endif %}
+        {%- endif %}
+    {%- endfor %}
+    {%- if cable_len -%}
+        {{ cable_len.0 }}
+    {%- else %}
+        {%- if switch_role.lower() == 'torrouter' %}
+            {%- for local_port in VLAN_MEMBER %}
+                {%- if local_port[1] == port_name %}
+                    {%- set roles3 = switch_role + '_' + 'server' %}
+                    {%- set roles3 = roles3 | lower %}
+                    {%- if roles3 in ports2cable %}
+                        {%- if cable_len.append(ports2cable[roles3]) %}{% endif %}
+                    {%- endif %}
+                {%- endif %}
+            {%- endfor %}
+            {%- if cable_len -%}
+                {{ cable_len.0 }}
+            {%- else -%}
+                {{ default_cable }}
+            {%- endif %}
+        {%- else -%}
+            {{ default_cable }}
+        {%- endif %}
+    {%- endif %}
+{%- endmacro %}
+
+{%- if DEVICE_METADATA is defined %}
+{%- set switch_role = DEVICE_METADATA['localhost']['type'] %}
+{%- endif -%}
+
 {% set port_names_list = [] %}
 {% for port in PORT %}
     {%- if port_names_list.append(port) %}{% endif %}
@@ -5,34 +65,98 @@
 {% set port_names = port_names_list | join(',') -%}
 
 {
+    "CABLE_LENGTH": {
+        "AZURE": {
+    {% for port in PORT %}
+        {% set cable = cable_length(port) -%}
+        "{{ port }}": "{{ cable }}"{%- if not loop.last -%},{% endif %}
+
+    {% endfor %}
+    }
+    },
     "BUFFER_POOL": {
+        "ingress_lossless_pool": {
+            "size": "47218432",
+            "type": "ingress",
+            "mode": "dynamic",
+            "xoff": "17708800"
+        },
         "lossy_pool": {
-            "size": "56985600",
+            "size": "18874368",
             "type": "egress",
             "mode": "dynamic",
             "xoff": "0"
+        },
+        "egress_lossless_pool": {
+            "size": "66092800",
+            "mode": "static",
+            "type": "egress"
         }
     },
     "BUFFER_PROFILE": {
+        "ingress_lossless_profile": {
+            "pool":"ingress_lossless_pool",
+            "xoff":"38816",
+            "size":"1518",
+            "dynamic_th":"1",
+            "xon_offset":"9408"
+        },
+        "egress_lossless_profile": {
+            "pool":"ingress_lossless_pool",
+            "size":"0",
+            "static_th":"9497600"
+        },
         "ingress_lossy_profile": {
-            "pool":"[BUFFER_POOL|lossy_pool]",
+            "pool":"lossy_pool",
             "size":"0",
             "static_th":"9497600"
         },
         "egress_lossy_profile": {
-            "pool":"[BUFFER_POOL|lossy_pool]",
+            "pool":"lossy_pool",
             "size":"1518",
             "dynamic_th":"2"
         }
     },
     "BUFFER_PG": {
-        "{{ port_names }}|0-7": {
-            "profile" : "[BUFFER_PROFILE|ingress_lossy_profile]"
-        }
+{% for port in port_names_list %}
+                "{{ port }}|3-4": {
+                     "profile" : "ingress_lossless_profile"
+                },
+{% endfor %}
+{% for port in port_names_list %}
+                "{{ port }}|0": {
+                    "profile" : "ingress_lossy_profile"
+                },
+{% endfor %}
+{% for port in port_names_list %}
+                "{{ port }}|1-2": {
+                    "profile" : "ingress_lossy_profile"
+                },
+{% endfor %}
+{% for port in port_names_list %}
+                "{{ port }}|5-7": {
+                    "profile" : "ingress_lossy_profile"
+                }{% if not loop.last %},{% endif %}
+
+{% endfor %}
     },
+
     "BUFFER_QUEUE": {
-            "{{ port_names }}|0-7": {
-            "profile" : "[BUFFER_PROFILE|egress_lossy_profile]"
-        }
+{% for port in port_names_list %}
+        "{{ port }}|3-4": {
+             "profile" : "egress_lossless_profile"
+        },
+{% endfor %}
+{% for port in port_names_list %}
+        "{{ port }}|0-2": {
+            "profile" : "egress_lossy_profile"
+        },
+{% endfor %}
+{% for port in port_names_list %}
+        "{{ port }}|5-7": {
+            "profile" : "egress_lossy_profile"
+        }{% if not loop.last %},{% endif %}
+
+{% endfor %}
     }
 }
diff --git a/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k_24x400_8x100/buffers_defaults_def_lossy.j2 b/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k_24x400_8x100/buffers_defaults_def_lossy.j2
index 1a31812c2..abb756c7d 100644
--- a/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k_24x400_8x100/buffers_defaults_def_lossy.j2
+++ b/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k_24x400_8x100/buffers_defaults_def_lossy.j2
@@ -15,24 +15,28 @@
     },
     "BUFFER_PROFILE": {
         "ingress_lossy_profile": {
-            "pool":"[BUFFER_POOL|lossy_pool]",
+            "pool":"lossy_pool",
             "size":"0",
             "static_th":"9497600"
         },
         "egress_lossy_profile": {
-            "pool":"[BUFFER_POOL|lossy_pool]",
+            "pool":"lossy_pool",
             "size":"1518",
             "dynamic_th":"2"
         }
     },
     "BUFFER_PG": {
-        "{{ port_names }}|0-7": {
-            "profile" : "[BUFFER_PROFILE|ingress_lossy_profile]"
-        }
+{% for port in port_names_list %}
+        "{{ port }}|0-7": {
+            "profile" : "ingress_lossy_profile"
+        }{% if not loop.last %},{% endif %}
+{% endfor %}
     },
     "BUFFER_QUEUE": {
-            "{{ port_names }}|0-7": {
-            "profile" : "[BUFFER_PROFILE|egress_lossy_profile]"
-        }
+{% for port in port_names_list %}
+        "{{ port }}|0-7": {
+            "profile" : "egress_lossy_profile"
+        }{% if not loop.last %},{% endif %}
+{% endfor %}
     }
 }
diff --git a/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k_24x400_8x100/buffers_defaults_t1.j2 b/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k_24x400_8x100/buffers_defaults_t1.j2
index 93dac6b19..1479f78fe 100644
--- a/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k_24x400_8x100/buffers_defaults_t1.j2
+++ b/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k_24x400_8x100/buffers_defaults_t1.j2
@@ -86,52 +86,76 @@
             "type": "egress",
             "mode": "dynamic",
             "xoff": "0"
+        },
+        "egress_lossless_pool": {
+            "size": "66092800",
+            "type": "egress"
         }
     },
     "BUFFER_PROFILE": {
         "ingress_lossless_profile": {
-            "pool":"[BUFFER_POOL|ingress_lossless_pool]",
+            "pool":"ingress_lossless_pool",
             "xoff":"38816",
             "size":"1518",
             "dynamic_th":"1",
-            "xon_offset":"13440"
+            "xon_offset":"9408"
         },
         "egress_lossless_profile": {
-            "pool":"[BUFFER_POOL|ingress_lossless_pool]",
+            "pool":"ingress_lossless_pool",
             "size":"0",
             "static_th":"9497600"
         },
         "ingress_lossy_profile": {
-            "pool":"[BUFFER_POOL|lossy_pool]",
+            "pool":"lossy_pool",
             "size":"0",
             "static_th":"9497600"
         },
         "egress_lossy_profile": {
-            "pool":"[BUFFER_POOL|lossy_pool]",
+            "pool":"lossy_pool",
             "size":"1518",
             "dynamic_th":"2"
         }
     },
     "BUFFER_PG": {
-        "{{ port_names }}|0-2": {
-            "profile" : "[BUFFER_PROFILE|ingress_lossy_profile]"
-        },
-        "{{ port_names }}|3-4": {
-            "profile" : "[BUFFER_PROFILE|ingress_lossless_profile]"
-        },
-        "{{ port_names }}|5-7": {
-            "profile" : "[BUFFER_PROFILE|ingress_lossy_profile]"
-        }
+{% for port in port_names_list %}
+                "{{ port }}|3-4": {
+                     "profile" : "ingress_lossless_profile"
+                },
+{% endfor %}
+{% for port in port_names_list %}
+                "{{ port }}|0": {
+                    "profile" : "ingress_lossy_profile"
+                },
+{% endfor %}
+{% for port in port_names_list %}
+                "{{ port }}|1-2": {
+                    "profile" : "ingress_lossy_profile"
+                },
+{% endfor %}
+{% for port in port_names_list %}
+                "{{ port }}|5-7": {
+                    "profile" : "ingress_lossy_profile"
+                }{% if not loop.last %},{% endif %}
+
+{% endfor %}
     },
+
     "BUFFER_QUEUE": {
-        "{{ port_names }}|3-4": {
-            "profile" : "[BUFFER_PROFILE|egress_lossless_profile]"
+{% for port in port_names_list %}
+        "{{ port }}|3-4": {
+             "profile" : "egress_lossless_profile"
         },
-        "{{ port_names }}|0-2": {
-            "profile" : "[BUFFER_PROFILE|egress_lossy_profile]"
+{% endfor %}
+{% for port in port_names_list %}
+        "{{ port }}|0-2": {
+            "profile" : "egress_lossy_profile"
         },
-        "{{ port_names }}|5-7": {
-            "profile" : "[BUFFER_PROFILE|egress_lossy_profile]"
-        }
+{% endfor %}
+{% for port in port_names_list %}
+        "{{ port }}|5-7": {
+            "profile" : "egress_lossy_profile"
+        }{% if not loop.last %},{% endif %}
+
+{% endfor %}
     }
 }
diff --git a/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k_24x400_8x100/innovium.77700_A b/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k_24x400_8x100/innovium.77700_A
index 84aa41983..ec1330780 100644
--- a/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k_24x400_8x100/innovium.77700_A
+++ b/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k_24x400_8x100/innovium.77700_A
@@ -5,6 +5,7 @@ device_id:         0x1b58
 # Hardware constraint information
 hardware:
         num_ibs:           6
+        ib_active:         0,1,2,3,4,5
 
         ports_per_ib:      32, 32, 32, 32, 20, 20
         recirc_port_num:   32, 32, 32, 32, 32, 32
diff --git a/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k_24x400_8x100/innovium.77700_B b/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k_24x400_8x100/innovium.77700_B
index 27297b313..57ba52cbc 100644
--- a/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k_24x400_8x100/innovium.77700_B
+++ b/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k_24x400_8x100/innovium.77700_B
@@ -5,6 +5,7 @@ device_id:         0x1b58
 # Hardware constraint information
 hardware:
         num_ibs:           6
+        ib_active:         0,1,2,3,4,5
 
         ports_per_ib:      32, 32, 32, 32, 20, 20
         recirc_port_num:   32, 32, 32, 32, 32, 32
diff --git a/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k_24x400_8x100/ivm.sai.config.yaml b/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k_24x400_8x100/ivm.sai.config.yaml
index 8014caa1d..d0889dea9 100644
--- a/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k_24x400_8x100/ivm.sai.config.yaml
+++ b/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k_24x400_8x100/ivm.sai.config.yaml
@@ -3,7 +3,12 @@ IFCS_SKU_FILE : "/usr/share/sonic/hwsku/innovium.77700_A"
 IFCS_INNO_CLI_PORT : "9999"
 IFCS_TARGET : "device"
 INNOVIUM_DIR : "/innovium"
-PYTHONPATH : "$INNOVIUM_DIR:$INNOVIUM_DIR/cmds:$INNOVIUM_DIR/scripts:$INNOVIUM_DIR/test/:$INNOVIUM_DIR/test/utils:$INNOVIUM_DIR/utils:$INNOVIUM_DIR/pyctypes"
+PYTHONPATH : "$INNOVIUM_DIR:$INNOVIUM_DIR/cmds:$INNOVIUM_DIR/scripts:$INNOVIUM_DIR/test/:$INNOVIUM_DIR/test/utils:$INNOVIUM_DIR/utils:$INNOVIUM_DIR/pyctypes:$INNOVIUM_DIR/ifcs_cmds:$INNOVIUM_DIR/testutil"
 PLATFORM_LIBRARY: "/usr/share/sonic/platform/lib_ivm_serdes_pltfm.so"
 IVM_SAI_DATAPATH_CONFIG_FILE: "/usr/share/sonic/hwsku/ivm.sai.datapath.config.yaml"
 IVM_SAI_PARAM_A0008: "32"
+IVM_SAI_PARAM_A0016: "1"
+IVM_SAI_PARAM_A0003: "4"
+IVM_SAI_PARAM_A0001: "TRUE"
+IVM_SAI_PARAM_A0014: "TRUE"
+IVM_SAI_PARAM_A0013: "1"
diff --git a/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k_24x400_8x100/pg_profile_lookup.ini b/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k_24x400_8x100/pg_profile_lookup.ini
index adcb52ab2..0d881737c 100644
--- a/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k_24x400_8x100/pg_profile_lookup.ini
+++ b/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k_24x400_8x100/pg_profile_lookup.ini
@@ -1,18 +1,22 @@
 # PG lossless profiles.
 # speed   cable size  xon  xoff  threshold xon_offset
-  25000   5m    1518  0    15680   1       13440
-  50000   5m    1518  0    21248   1       13440
-  100000  5m    1518  0    34624   1       13440
-  400000  5m    1518  0    117536  1       13440
-  25000   40m   1518  0    16928   1       13440
-  50000   40m   1518  0    23392   1       13440
-  100000  40m   1518  0    38816   1       13440
-  400000  40m   1518  0    135520  1       13440
-  25000   100m  1518  0    18848   1       13440
-  50000   100m  1518  0    27264   1       13440
-  100000  100m  1518  0    46496   1       13440
-  400000  100m  1518  0    166688  1       13440
-  25000   300m  1518  0    25184   1       13440
-  50000   300m  1518  0    40128   1       13440
-  100000  300m  1518  0    72384   1       13440
-  400000  300m  1518  0    268640  1       13440
+  25000   5m    1518  0    15680   1       9408
+  50000   5m    1518  0    21248   1       9408
+  100000  5m    1518  0    34624   1       9408
+  200000  5m    1518  0    62368   1       9408
+  400000  5m    1518  0    117536  1       9408
+  25000   40m   1518  0    16928   1       9408
+  50000   40m   1518  0    23392   1       9408
+  100000  40m   1518  0    38816   1       9408
+  200000  40m   1518  0    71904   1       9408
+  400000  40m   1518  0    135520  1       9408
+  25000   100m  1518  0    18848   1       9408
+  50000   100m  1518  0    27264   1       9408
+  100000  100m  1518  0    46496   1       9408
+  200000  100m  1518  0    87168   1       9408
+  400000  100m  1518  0    166688  1       9408
+  25000   300m  1518  0    25184   1       9408
+  50000   300m  1518  0    40128   1       9408
+  100000  300m  1518  0    72384   1       9408
+  200000  300m  1518  0    138112  1       9408
+  400000  300m  1518  0    268640  1       9408
diff --git a/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k_24x400_8x100/qos.json.j2 b/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k_24x400_8x100/qos.json.j2
index 104d2d78d..b03078465 100644
--- a/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k_24x400_8x100/qos.json.j2
+++ b/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k_24x400_8x100/qos.json.j2
@@ -32,87 +32,98 @@
     },
        "DSCP_TO_TC_MAP": {
         "AZURE": {
-            "0":"0",
-            "1":"0",
-            "2":"0",
-            "3":"0",
-            "4":"0",
-            "5":"0",
-            "6":"0",
-            "7":"0",
-            "8":"0",
-            "9":"0",
-            "10":"0",
-            "11":"0",
-            "12":"0",
-            "13":"0",
-            "14":"0",
-            "15":"0",
-            "16":"0",
-            "17":"0",
-            "18":"0",
-            "19":"0",
-            "20":"0",
-            "21":"0",
-            "22":"0",
-            "23":"0",
-            "24":"0",
-            "25":"0",
-            "26":"0",
-            "27":"0",
-            "28":"0",
-            "29":"0",
-            "30":"0",
-            "31":"0",
-            "32":"0",
-            "33":"0",
-            "34":"0",
-            "35":"0",
-            "36":"0",
-            "37":"0",
-            "38":"0",
-            "39":"0",
-            "40":"0",
-            "41":"0",
-            "42":"0",
-            "43":"0",
-            "44":"0",
-            "45":"0",
-            "46":"0",
-            "47":"0",
-            "48":"0",
-            "49":"0",
-            "50":"0",
-            "51":"0",
-            "52":"0",
-            "53":"0",
-            "54":"0",
-            "55":"0",
-            "56":"0",
-            "57":"0",
-            "58":"0",
-            "59":"0",
-            "60":"0",
-            "61":"0",
-            "62":"0",
-            "63":"0"
+            "0" : "1",
+            "1" : "1",
+            "2" : "1",
+            "3" : "3",
+            "4" : "4",
+            "5" : "2",
+            "6" : "1",
+            "7" : "1",
+            "8" : "0",
+            "9" : "1",
+            "10": "1",
+            "11": "1",
+            "12": "1",
+            "13": "1",
+            "14": "1",
+            "15": "1",
+            "16": "1",
+            "17": "1",
+            "18": "1",
+            "19": "1",
+            "20": "1",
+            "21": "1",
+            "22": "1",
+            "23": "1",
+            "24": "1",
+            "25": "1",
+            "26": "1",
+            "27": "1",
+            "28": "1",
+            "29": "1",
+            "30": "1",
+            "31": "1",
+            "32": "1",
+            "33": "1",
+            "34": "1",
+            "35": "1",
+            "36": "1",
+            "37": "1",
+            "38": "1",
+            "39": "1",
+            "40": "1",
+            "41": "1",
+            "42": "1",
+            "43": "1",
+            "44": "1",
+            "45": "1",
+            "46": "5",
+            "47": "1",
+            "48": "6",
+            "49": "1",
+            "50": "1",
+            "51": "1",
+            "52": "1",
+            "53": "1",
+            "54": "1",
+            "55": "1",
+            "56": "1",
+            "57": "1",
+            "58": "1",
+            "59": "1",
+            "60": "1",
+            "61": "1",
+            "62": "1",
+            "63": "1"
         }
     },
     "PORT_QOS_MAP": {
-       "{{ port_names }}": {
-            "tc_to_pg_map": "[TC_TO_PRIORITY_GROUP_MAP|AZURE]",
-            "tc_to_queue_map": "[TC_TO_QUEUE_MAP|AZURE]",
-            "dscp_to_tc_map": "[DSCP_TO_TC_MAP|AZURE]"
-        }
-    },
-    "SCHEDULER": {
-        "scheduler.7": {
-            "type": "STRICT"
-        }
+{% for port in port_names_list %}
+       "{{ port }}": {
+            "tc_to_pg_map": "AZURE",
+            "tc_to_queue_map": "AZURE",
+            "dscp_to_tc_map": "AZURE",
+            "pfc_enable": "3,4"
+        }{% if not loop.last %},{% endif %}
+
+{% endfor %}
     },
-    "QUEUE": {
-        "{{ port_names }}|7": {
-            "scheduler": "[SCHEDULER|scheduler.7]"
+    "WRED_PROFILE": {
+        "AZURE_LOSSLESS" : {
+            "wred_green_enable"      : "true",
+            "wred_yellow_enable"     : "true",
+            "wred_red_enable"        : "true",
+            "ecn"                    : "ecn_all",
+            "green_max_threshold"    : "2097152",
+            "green_min_threshold"    : "1048576",
+            "yellow_max_threshold"   : "2097152",
+            "yellow_min_threshold"   : "1048576",
+            "red_max_threshold"      : "2097152",
+            "red_min_threshold"      : "1048576",
+            "green_drop_probability" : "5",
+            "yellow_drop_probability": "5",
+            "red_drop_probability"   : "5"
         }
     }
 }
diff --git a/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k_24x400_8x100/qos_defaults_def_lossy.j2 b/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k_24x400_8x100/qos_defaults_def_lossy.j2
index 104d2d78d..c1170619b 100644
--- a/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k_24x400_8x100/qos_defaults_def_lossy.j2
+++ b/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k_24x400_8x100/qos_defaults_def_lossy.j2
@@ -23,8 +23,8 @@
         "0": "0",
         "1": "0",
         "2": "0",
-        "3": "3",
-        "4": "4",
+        "3": "1",
+        "4": "2",
         "5": "0",
         "6": "0",
         "7": "0"
@@ -99,11 +99,14 @@
         }
     },
     "PORT_QOS_MAP": {
-       "{{ port_names }}": {
-            "tc_to_pg_map": "[TC_TO_PRIORITY_GROUP_MAP|AZURE]",
-            "tc_to_queue_map": "[TC_TO_QUEUE_MAP|AZURE]",
-            "dscp_to_tc_map": "[DSCP_TO_TC_MAP|AZURE]"
-        }
+{% for port in port_names_list %}
+       "{{ port }}": {
+            "tc_to_pg_map": "AZURE",
+            "tc_to_queue_map": "AZURE",
+            "dscp_to_tc_map": "AZURE"
+        }{% if not loop.last %},{% endif %}
+
+{% endfor %}
     },
     "SCHEDULER": {
         "scheduler.7": {
diff --git a/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k_24x400_8x100/qos_defaults_t1.j2 b/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k_24x400_8x100/qos_defaults_t1.j2
index 4b9748c7b..b03078465 100644
--- a/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k_24x400_8x100/qos_defaults_t1.j2
+++ b/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k_24x400_8x100/qos_defaults_t1.j2
@@ -32,83 +32,98 @@
     },
        "DSCP_TO_TC_MAP": {
         "AZURE": {
-            "0":"0",
-            "1":"0",
-            "2":"0",
-            "3":"3",
-            "4":"4",
-            "5":"0",
-            "6":"0",
-            "7":"0",
-            "8":"1",
-            "9":"0",
-            "10":"0",
-            "11":"0",
-            "12":"0",
-            "13":"0",
-            "14":"0",
-            "15":"0",
-            "16":"0",
-            "17":"0",
-            "18":"0",
-            "19":"0",
-            "20":"0",
-            "21":"0",
-            "22":"0",
-            "23":"0",
-            "24":"0",
-            "25":"0",
-            "26":"0",
-            "27":"0",
-            "28":"0",
-            "29":"0",
-            "30":"0",
-            "31":"0",
-            "32":"0",
-            "33":"0",
-            "34":"0",
-            "35":"0",
-            "36":"0",
-            "37":"0",
-            "38":"0",
-            "39":"0",
-            "40":"0",
-            "41":"0",
-            "42":"0",
-            "43":"0",
-            "44":"0",
-            "45":"0",
-            "46":"0",
-            "47":"0",
-            "48":"0",
-            "49":"0",
-            "50":"0",
-            "51":"0",
-            "52":"0",
-            "53":"0",
-            "54":"0",
-            "55":"0",
-            "56":"0",
-            "57":"0",
-            "58":"0",
-            "59":"0",
-            "60":"0",
-            "61":"0",
-            "62":"0",
-            "63":"0"
+            "0" : "1",
+            "1" : "1",
+            "2" : "1",
+            "3" : "3",
+            "4" : "4",
+            "5" : "2",
+            "6" : "1",
+            "7" : "1",
+            "8" : "0",
+            "9" : "1",
+            "10": "1",
+            "11": "1",
+            "12": "1",
+            "13": "1",
+            "14": "1",
+            "15": "1",
+            "16": "1",
+            "17": "1",
+            "18": "1",
+            "19": "1",
+            "20": "1",
+            "21": "1",
+            "22": "1",
+            "23": "1",
+            "24": "1",
+            "25": "1",
+            "26": "1",
+            "27": "1",
+            "28": "1",
+            "29": "1",
+            "30": "1",
+            "31": "1",
+            "32": "1",
+            "33": "1",
+            "34": "1",
+            "35": "1",
+            "36": "1",
+            "37": "1",
+            "38": "1",
+            "39": "1",
+            "40": "1",
+            "41": "1",
+            "42": "1",
+            "43": "1",
+            "44": "1",
+            "45": "1",
+            "46": "5",
+            "47": "1",
+            "48": "6",
+            "49": "1",
+            "50": "1",
+            "51": "1",
+            "52": "1",
+            "53": "1",
+            "54": "1",
+            "55": "1",
+            "56": "1",
+            "57": "1",
+            "58": "1",
+            "59": "1",
+            "60": "1",
+            "61": "1",
+            "62": "1",
+            "63": "1"
         }
     },
     "PORT_QOS_MAP": {
-       "{{ port_names }}": {
-            "tc_to_pg_map": "[TC_TO_PRIORITY_GROUP_MAP|AZURE]",
-            "tc_to_queue_map": "[TC_TO_QUEUE_MAP|AZURE]",
-            "dscp_to_tc_map": "[DSCP_TO_TC_MAP|AZURE]",
+{% for port in port_names_list %}
+       "{{ port }}": {
+            "tc_to_pg_map": "AZURE",
+            "tc_to_queue_map": "AZURE",
+            "dscp_to_tc_map": "AZURE",
             "pfc_enable": "3,4"
-        }
+        }{% if not loop.last %},{% endif %}
+
+{% endfor %}
     },
     "WRED_PROFILE": {
         "AZURE_LOSSLESS" : {
-            "red_min_threshold":"50000"
+            "wred_green_enable"      : "true",
+            "wred_yellow_enable"     : "true",
+            "wred_red_enable"        : "true",
+            "ecn"                    : "ecn_all",
+            "green_max_threshold"    : "2097152",
+            "green_min_threshold"    : "1048576",
+            "yellow_max_threshold"   : "2097152",
+            "yellow_min_threshold"   : "1048576",
+            "red_max_threshold"      : "2097152",
+            "red_min_threshold"      : "1048576",
+            "green_drop_probability" : "5",
+            "yellow_drop_probability": "5",
+            "red_drop_probability"   : "5"
         }
     }
 }
diff --git a/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k_28x400_4x100/buffers.json.j2 b/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k_28x400_4x100/buffers.json.j2
index 1a31812c2..794b5c854 100644
--- a/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k_28x400_4x100/buffers.json.j2
+++ b/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k_28x400_4x100/buffers.json.j2
@@ -1,3 +1,63 @@
+{# Default values which will be used if no actual configura available #}
+{% set default_cable = '40m' %}
+
+{# Port configuration to cable length look-up table #}
+{# Each record describes mapping of DUT (DUT port) role and neighbor role to cable length #}
+{# Roles described in the minigraph #}
+{% set ports2cable = {
+        'torrouter_server'       : '5m',
+        'leafrouter_torrouter'   : '40m',
+        'spinerouter_leafrouter' : '300m'
+        }
+%}
+
+{%- macro cable_length(port_name) %}
+    {%- set cable_len = [] %}
+    {%- for local_port in DEVICE_NEIGHBOR %}
+        {%- if local_port == port_name %}
+            {%- if DEVICE_NEIGHBOR_METADATA is defined and DEVICE_NEIGHBOR_METADATA[DEVICE_NEIGHBOR[local_port].name] %}
+                {%- set neighbor = DEVICE_NEIGHBOR_METADATA[DEVICE_NEIGHBOR[local_port].name] %}
+                {%- set neighbor_role = neighbor.type %}
+                {%- set roles1 = switch_role + '_' + neighbor_role %}
+                {%- set roles2 = neighbor_role + '_' + switch_role %}
+                {%- set roles1 = roles1 | lower %}
+                {%- set roles2 = roles2 | lower %}
+                {%- if roles1 in ports2cable %}
+                    {%- if cable_len.append(ports2cable[roles1]) %}{% endif %}
+                {%- elif roles2 in ports2cable %}
+                    {%- if cable_len.append(ports2cable[roles2]) %}{% endif %}
+                {%- endif %}
+            {%- endif %}
+        {%- endif %}
+    {%- endfor %}
+    {%- if cable_len -%}
+        {{ cable_len.0 }}
+    {%- else %}
+        {%- if switch_role.lower() == 'torrouter' %}
+            {%- for local_port in VLAN_MEMBER %}
+                {%- if local_port[1] == port_name %}
+                    {%- set roles3 = switch_role + '_' + 'server' %}
+                    {%- set roles3 = roles3 | lower %}
+                    {%- if roles3 in ports2cable %}
+                        {%- if cable_len.append(ports2cable[roles3]) %}{% endif %}
+                    {%- endif %}
+                {%- endif %}
+            {%- endfor %}
+            {%- if cable_len -%}
+                {{ cable_len.0 }}
+            {%- else -%}
+                {{ default_cable }}
+            {%- endif %}
+        {%- else -%}
+            {{ default_cable }}
+        {%- endif %}
+    {%- endif %}
+{%- endmacro %}
+
+{%- if DEVICE_METADATA is defined %}
+{%- set switch_role = DEVICE_METADATA['localhost']['type'] %}
+{%- endif -%}
+
 {% set port_names_list = [] %}
 {% for port in PORT %}
     {%- if port_names_list.append(port) %}{% endif %}
@@ -5,34 +65,98 @@
 {% set port_names = port_names_list | join(',') -%}
 
 {
+    "CABLE_LENGTH": {
+        "AZURE": {
+    {% for port in PORT %}
+        {% set cable = cable_length(port) -%}
+        "{{ port }}": "{{ cable }}"{%- if not loop.last -%},{% endif %}
+
+    {% endfor %}
+    }
+    },
     "BUFFER_POOL": {
+        "ingress_lossless_pool": {
+            "size": "47218432",
+            "type": "ingress",
+            "mode": "dynamic",
+            "xoff": "17708800"
+        },
         "lossy_pool": {
-            "size": "56985600",
+            "size": "18874368",
             "type": "egress",
             "mode": "dynamic",
             "xoff": "0"
+        },
+        "egress_lossless_pool": {
+            "size": "66092800",
+            "mode": "static",
+            "type": "egress"
         }
     },
     "BUFFER_PROFILE": {
+        "ingress_lossless_profile": {
+            "pool":"ingress_lossless_pool",
+            "xoff":"38816",
+            "size":"1518",
+            "dynamic_th":"1",
+            "xon_offset":"9408"
+        },
+        "egress_lossless_profile": {
+            "pool":"ingress_lossless_pool",
+            "size":"0",
+            "static_th":"9497600"
+        },
         "ingress_lossy_profile": {
-            "pool":"[BUFFER_POOL|lossy_pool]",
+            "pool":"lossy_pool",
             "size":"0",
             "static_th":"9497600"
         },
         "egress_lossy_profile": {
-            "pool":"[BUFFER_POOL|lossy_pool]",
+            "pool":"lossy_pool",
             "size":"1518",
             "dynamic_th":"2"
         }
     },
     "BUFFER_PG": {
-        "{{ port_names }}|0-7": {
-            "profile" : "[BUFFER_PROFILE|ingress_lossy_profile]"
-        }
+{% for port in port_names_list %}
+                "{{ port }}|3-4": {
+                     "profile" : "ingress_lossless_profile"
+                },
+{% endfor %}
+{% for port in port_names_list %}
+                "{{ port }}|0": {
+                    "profile" : "ingress_lossy_profile"
+                },
+{% endfor %}
+{% for port in port_names_list %}
+                "{{ port }}|1-2": {
+                    "profile" : "ingress_lossy_profile"
+                },
+{% endfor %}
+{% for port in port_names_list %}
+                "{{ port }}|5-7": {
+                    "profile" : "ingress_lossy_profile"
+                }{% if not loop.last %},{% endif %}
+
+{% endfor %}
     },
+
     "BUFFER_QUEUE": {
-            "{{ port_names }}|0-7": {
-            "profile" : "[BUFFER_PROFILE|egress_lossy_profile]"
-        }
+{% for port in port_names_list %}
+        "{{ port }}|3-4": {
+             "profile" : "egress_lossless_profile"
+        },
+{% endfor %}
+{% for port in port_names_list %}
+        "{{ port }}|0-2": {
+            "profile" : "egress_lossy_profile"
+        },
+{% endfor %}
+{% for port in port_names_list %}
+        "{{ port }}|5-7": {
+            "profile" : "egress_lossy_profile"
+        }{% if not loop.last %},{% endif %}
+
+{% endfor %}
     }
 }
diff --git a/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k_28x400_4x100/buffers_defaults_def_lossy.j2 b/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k_28x400_4x100/buffers_defaults_def_lossy.j2
index 1a31812c2..abb756c7d 100644
--- a/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k_28x400_4x100/buffers_defaults_def_lossy.j2
+++ b/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k_28x400_4x100/buffers_defaults_def_lossy.j2
@@ -15,24 +15,28 @@
     },
     "BUFFER_PROFILE": {
         "ingress_lossy_profile": {
-            "pool":"[BUFFER_POOL|lossy_pool]",
+            "pool":"lossy_pool",
             "size":"0",
             "static_th":"9497600"
         },
         "egress_lossy_profile": {
-            "pool":"[BUFFER_POOL|lossy_pool]",
+            "pool":"lossy_pool",
             "size":"1518",
             "dynamic_th":"2"
         }
     },
     "BUFFER_PG": {
-        "{{ port_names }}|0-7": {
-            "profile" : "[BUFFER_PROFILE|ingress_lossy_profile]"
-        }
+{% for port in port_names_list %}
+        "{{ port }}|0-7": {
+            "profile" : "ingress_lossy_profile"
+        }{% if not loop.last %},{% endif %}
+{% endfor %}
     },
     "BUFFER_QUEUE": {
-            "{{ port_names }}|0-7": {
-            "profile" : "[BUFFER_PROFILE|egress_lossy_profile]"
-        }
+{% for port in port_names_list %}
+        "{{ port }}|0-7": {
+            "profile" : "egress_lossy_profile"
+        }{% if not loop.last %},{% endif %}
+{% endfor %}
     }
 }
diff --git a/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k_28x400_4x100/buffers_defaults_t1.j2 b/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k_28x400_4x100/buffers_defaults_t1.j2
index 93dac6b19..1479f78fe 100644
--- a/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k_28x400_4x100/buffers_defaults_t1.j2
+++ b/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k_28x400_4x100/buffers_defaults_t1.j2
@@ -86,52 +86,76 @@
             "type": "egress",
             "mode": "dynamic",
             "xoff": "0"
+        },
+        "egress_lossless_pool": {
+            "size": "66092800",
+            "type": "egress"
         }
     },
     "BUFFER_PROFILE": {
         "ingress_lossless_profile": {
-            "pool":"[BUFFER_POOL|ingress_lossless_pool]",
+            "pool":"ingress_lossless_pool",
             "xoff":"38816",
             "size":"1518",
             "dynamic_th":"1",
-            "xon_offset":"13440"
+            "xon_offset":"9408"
         },
         "egress_lossless_profile": {
-            "pool":"[BUFFER_POOL|ingress_lossless_pool]",
+            "pool":"ingress_lossless_pool",
             "size":"0",
             "static_th":"9497600"
         },
         "ingress_lossy_profile": {
-            "pool":"[BUFFER_POOL|lossy_pool]",
+            "pool":"lossy_pool",
             "size":"0",
             "static_th":"9497600"
         },
         "egress_lossy_profile": {
-            "pool":"[BUFFER_POOL|lossy_pool]",
+            "pool":"lossy_pool",
             "size":"1518",
             "dynamic_th":"2"
         }
     },
     "BUFFER_PG": {
-        "{{ port_names }}|0-2": {
-            "profile" : "[BUFFER_PROFILE|ingress_lossy_profile]"
-        },
-        "{{ port_names }}|3-4": {
-            "profile" : "[BUFFER_PROFILE|ingress_lossless_profile]"
-        },
-        "{{ port_names }}|5-7": {
-            "profile" : "[BUFFER_PROFILE|ingress_lossy_profile]"
-        }
+{% for port in port_names_list %}
+                "{{ port }}|3-4": {
+                     "profile" : "ingress_lossless_profile"
+                },
+{% endfor %}
+{% for port in port_names_list %}
+                "{{ port }}|0": {
+                    "profile" : "ingress_lossy_profile"
+                },
+{% endfor %}
+{% for port in port_names_list %}
+                "{{ port }}|1-2": {
+                    "profile" : "ingress_lossy_profile"
+                },
+{% endfor %}
+{% for port in port_names_list %}
+                "{{ port }}|5-7": {
+                    "profile" : "ingress_lossy_profile"
+                }{% if not loop.last %},{% endif %}
+
+{% endfor %}
     },
+
     "BUFFER_QUEUE": {
-        "{{ port_names }}|3-4": {
-            "profile" : "[BUFFER_PROFILE|egress_lossless_profile]"
+{% for port in port_names_list %}
+        "{{ port }}|3-4": {
+             "profile" : "egress_lossless_profile"
         },
-        "{{ port_names }}|0-2": {
-            "profile" : "[BUFFER_PROFILE|egress_lossy_profile]"
+{% endfor %}
+{% for port in port_names_list %}
+        "{{ port }}|0-2": {
+            "profile" : "egress_lossy_profile"
         },
-        "{{ port_names }}|5-7": {
-            "profile" : "[BUFFER_PROFILE|egress_lossy_profile]"
-        }
+{% endfor %}
+{% for port in port_names_list %}
+        "{{ port }}|5-7": {
+            "profile" : "egress_lossy_profile"
+        }{% if not loop.last %},{% endif %}
+
+{% endfor %}
     }
 }
diff --git a/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k_28x400_4x100/innovium.77700_A b/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k_28x400_4x100/innovium.77700_A
index 84aa41983..ec1330780 100644
--- a/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k_28x400_4x100/innovium.77700_A
+++ b/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k_28x400_4x100/innovium.77700_A
@@ -5,6 +5,7 @@ device_id:         0x1b58
 # Hardware constraint information
 hardware:
         num_ibs:           6
+        ib_active:         0,1,2,3,4,5
 
         ports_per_ib:      32, 32, 32, 32, 20, 20
         recirc_port_num:   32, 32, 32, 32, 32, 32
diff --git a/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k_28x400_4x100/innovium.77700_B b/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k_28x400_4x100/innovium.77700_B
index 27297b313..57ba52cbc 100644
--- a/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k_28x400_4x100/innovium.77700_B
+++ b/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k_28x400_4x100/innovium.77700_B
@@ -5,6 +5,7 @@ device_id:         0x1b58
 # Hardware constraint information
 hardware:
         num_ibs:           6
+        ib_active:         0,1,2,3,4,5
 
         ports_per_ib:      32, 32, 32, 32, 20, 20
         recirc_port_num:   32, 32, 32, 32, 32, 32
diff --git a/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k_28x400_4x100/ivm.sai.config.yaml b/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k_28x400_4x100/ivm.sai.config.yaml
index e17792d88..1e3eb76b2 100644
--- a/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k_28x400_4x100/ivm.sai.config.yaml
+++ b/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k_28x400_4x100/ivm.sai.config.yaml
@@ -3,7 +3,12 @@ IFCS_SKU_FILE : "/usr/share/sonic/hwsku/innovium.77700_A"
 IFCS_INNO_CLI_PORT : "9999"
 IFCS_TARGET : "device"
 INNOVIUM_DIR : "/innovium"
-PYTHONPATH : "$INNOVIUM_DIR:$INNOVIUM_DIR/cmds:$INNOVIUM_DIR/scripts:$INNOVIUM_DIR/test/:$INNOVIUM_DIR/test/utils:$INNOVIUM_DIR/utils:$INNOVIUM_DIR/pyctypes"
+PYTHONPATH : "$INNOVIUM_DIR:$INNOVIUM_DIR/cmds:$INNOVIUM_DIR/scripts:$INNOVIUM_DIR/test/:$INNOVIUM_DIR/test/utils:$INNOVIUM_DIR/utils:$INNOVIUM_DIR/pyctypes:$INNOVIUM_DIR/ifcs_cmds:$INNOVIUM_DIR/testutil"
 PLATFORM_LIBRARY: "/usr/share/sonic/platform/lib_ivm_serdes_pltfm.so"
 IVM_SAI_DATAPATH_CONFIG_FILE: "/usr/share/sonic/hwsku/ivm.sai.datapath.config.yaml"
 IVM_SAI_PARAM_A0008: "32"
+IVM_SAI_PARAM_A0016: "1"
+IVM_SAI_PARAM_A0003: "4"
+IVM_SAI_PARAM_A0001: "TRUE"
+IVM_SAI_PARAM_A0014: "TRUE"
+IVM_SAI_PARAM_A0013: "1"
diff --git a/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k_28x400_4x100/pg_profile_lookup.ini b/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k_28x400_4x100/pg_profile_lookup.ini
index adcb52ab2..0d881737c 100644
--- a/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k_28x400_4x100/pg_profile_lookup.ini
+++ b/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k_28x400_4x100/pg_profile_lookup.ini
@@ -1,18 +1,22 @@
 # PG lossless profiles.
 # speed   cable size  xon  xoff  threshold xon_offset
-  25000   5m    1518  0    15680   1       13440
-  50000   5m    1518  0    21248   1       13440
-  100000  5m    1518  0    34624   1       13440
-  400000  5m    1518  0    117536  1       13440
-  25000   40m   1518  0    16928   1       13440
-  50000   40m   1518  0    23392   1       13440
-  100000  40m   1518  0    38816   1       13440
-  400000  40m   1518  0    135520  1       13440
-  25000   100m  1518  0    18848   1       13440
-  50000   100m  1518  0    27264   1       13440
-  100000  100m  1518  0    46496   1       13440
-  400000  100m  1518  0    166688  1       13440
-  25000   300m  1518  0    25184   1       13440
-  50000   300m  1518  0    40128   1       13440
-  100000  300m  1518  0    72384   1       13440
-  400000  300m  1518  0    268640  1       13440
+  25000   5m    1518  0    15680   1       9408
+  50000   5m    1518  0    21248   1       9408
+  100000  5m    1518  0    34624   1       9408
+  200000  5m    1518  0    62368   1       9408
+  400000  5m    1518  0    117536  1       9408
+  25000   40m   1518  0    16928   1       9408
+  50000   40m   1518  0    23392   1       9408
+  100000  40m   1518  0    38816   1       9408
+  200000  40m   1518  0    71904   1       9408
+  400000  40m   1518  0    135520  1       9408
+  25000   100m  1518  0    18848   1       9408
+  50000   100m  1518  0    27264   1       9408
+  100000  100m  1518  0    46496   1       9408
+  200000  100m  1518  0    87168   1       9408
+  400000  100m  1518  0    166688  1       9408
+  25000   300m  1518  0    25184   1       9408
+  50000   300m  1518  0    40128   1       9408
+  100000  300m  1518  0    72384   1       9408
+  200000  300m  1518  0    138112  1       9408
+  400000  300m  1518  0    268640  1       9408
diff --git a/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k_28x400_4x100/qos.json.j2 b/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k_28x400_4x100/qos.json.j2
index 104d2d78d..b03078465 100644
--- a/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k_28x400_4x100/qos.json.j2
+++ b/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k_28x400_4x100/qos.json.j2
@@ -32,87 +32,98 @@
     },
        "DSCP_TO_TC_MAP": {
         "AZURE": {
-            "0":"0",
-            "1":"0",
-            "2":"0",
-            "3":"0",
-            "4":"0",
-            "5":"0",
-            "6":"0",
-            "7":"0",
-            "8":"0",
-            "9":"0",
-            "10":"0",
-            "11":"0",
-            "12":"0",
-            "13":"0",
-            "14":"0",
-            "15":"0",
-            "16":"0",
-            "17":"0",
-            "18":"0",
-            "19":"0",
-            "20":"0",
-            "21":"0",
-            "22":"0",
-            "23":"0",
-            "24":"0",
-            "25":"0",
-            "26":"0",
-            "27":"0",
-            "28":"0",
-            "29":"0",
-            "30":"0",
-            "31":"0",
-            "32":"0",
-            "33":"0",
-            "34":"0",
-            "35":"0",
-            "36":"0",
-            "37":"0",
-            "38":"0",
-            "39":"0",
-            "40":"0",
-            "41":"0",
-            "42":"0",
-            "43":"0",
-            "44":"0",
-            "45":"0",
-            "46":"0",
-            "47":"0",
-            "48":"0",
-            "49":"0",
-            "50":"0",
-            "51":"0",
-            "52":"0",
-            "53":"0",
-            "54":"0",
-            "55":"0",
-            "56":"0",
-            "57":"0",
-            "58":"0",
-            "59":"0",
-            "60":"0",
-            "61":"0",
-            "62":"0",
-            "63":"0"
+            "0" : "1",
+            "1" : "1",
+            "2" : "1",
+            "3" : "3",
+            "4" : "4",
+            "5" : "2",
+            "6" : "1",
+            "7" : "1",
+            "8" : "0",
+            "9" : "1",
+            "10": "1",
+            "11": "1",
+            "12": "1",
+            "13": "1",
+            "14": "1",
+            "15": "1",
+            "16": "1",
+            "17": "1",
+            "18": "1",
+            "19": "1",
+            "20": "1",
+            "21": "1",
+            "22": "1",
+            "23": "1",
+            "24": "1",
+            "25": "1",
+            "26": "1",
+            "27": "1",
+            "28": "1",
+            "29": "1",
+            "30": "1",
+            "31": "1",
+            "32": "1",
+            "33": "1",
+            "34": "1",
+            "35": "1",
+            "36": "1",
+            "37": "1",
+            "38": "1",
+            "39": "1",
+            "40": "1",
+            "41": "1",
+            "42": "1",
+            "43": "1",
+            "44": "1",
+            "45": "1",
+            "46": "5",
+            "47": "1",
+            "48": "6",
+            "49": "1",
+            "50": "1",
+            "51": "1",
+            "52": "1",
+            "53": "1",
+            "54": "1",
+            "55": "1",
+            "56": "1",
+            "57": "1",
+            "58": "1",
+            "59": "1",
+            "60": "1",
+            "61": "1",
+            "62": "1",
+            "63": "1"
         }
     },
     "PORT_QOS_MAP": {
-       "{{ port_names }}": {
-            "tc_to_pg_map": "[TC_TO_PRIORITY_GROUP_MAP|AZURE]",
-            "tc_to_queue_map": "[TC_TO_QUEUE_MAP|AZURE]",
-            "dscp_to_tc_map": "[DSCP_TO_TC_MAP|AZURE]"
-        }
-    },
-    "SCHEDULER": {
-        "scheduler.7": {
-            "type": "STRICT"
-        }
+{% for port in port_names_list %}
+       "{{ port }}": {
+            "tc_to_pg_map": "AZURE",
+            "tc_to_queue_map": "AZURE",
+            "dscp_to_tc_map": "AZURE",
+            "pfc_enable": "3,4"
+        }{% if not loop.last %},{% endif %}
+
+{% endfor %}
     },
-    "QUEUE": {
-        "{{ port_names }}|7": {
-            "scheduler": "[SCHEDULER|scheduler.7]"
+    "WRED_PROFILE": {
+        "AZURE_LOSSLESS" : {
+            "wred_green_enable"      : "true",
+            "wred_yellow_enable"     : "true",
+            "wred_red_enable"        : "true",
+            "ecn"                    : "ecn_all",
+            "green_max_threshold"    : "2097152",
+            "green_min_threshold"    : "1048576",
+            "yellow_max_threshold"   : "2097152",
+            "yellow_min_threshold"   : "1048576",
+            "red_max_threshold"      : "2097152",
+            "red_min_threshold"      : "1048576",
+            "green_drop_probability" : "5",
+            "yellow_drop_probability": "5",
+            "red_drop_probability"   : "5"
         }
     }
 }
diff --git a/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k_28x400_4x100/qos_defaults_def_lossy.j2 b/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k_28x400_4x100/qos_defaults_def_lossy.j2
index 104d2d78d..c1170619b 100644
--- a/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k_28x400_4x100/qos_defaults_def_lossy.j2
+++ b/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k_28x400_4x100/qos_defaults_def_lossy.j2
@@ -23,8 +23,8 @@
         "0": "0",
         "1": "0",
         "2": "0",
-        "3": "3",
-        "4": "4",
+        "3": "1",
+        "4": "2",
         "5": "0",
         "6": "0",
         "7": "0"
@@ -99,11 +99,14 @@
         }
     },
     "PORT_QOS_MAP": {
-       "{{ port_names }}": {
-            "tc_to_pg_map": "[TC_TO_PRIORITY_GROUP_MAP|AZURE]",
-            "tc_to_queue_map": "[TC_TO_QUEUE_MAP|AZURE]",
-            "dscp_to_tc_map": "[DSCP_TO_TC_MAP|AZURE]"
-        }
+{% for port in port_names_list %}
+       "{{ port }}": {
+            "tc_to_pg_map": "AZURE",
+            "tc_to_queue_map": "AZURE",
+            "dscp_to_tc_map": "AZURE"
+        }{% if not loop.last %},{% endif %}
+
+{% endfor %}
     },
     "SCHEDULER": {
         "scheduler.7": {
diff --git a/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k_28x400_4x100/qos_defaults_t1.j2 b/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k_28x400_4x100/qos_defaults_t1.j2
index 4b9748c7b..b03078465 100644
--- a/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k_28x400_4x100/qos_defaults_t1.j2
+++ b/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k_28x400_4x100/qos_defaults_t1.j2
@@ -32,83 +32,98 @@
     },
        "DSCP_TO_TC_MAP": {
         "AZURE": {
-            "0":"0",
-            "1":"0",
-            "2":"0",
-            "3":"3",
-            "4":"4",
-            "5":"0",
-            "6":"0",
-            "7":"0",
-            "8":"1",
-            "9":"0",
-            "10":"0",
-            "11":"0",
-            "12":"0",
-            "13":"0",
-            "14":"0",
-            "15":"0",
-            "16":"0",
-            "17":"0",
-            "18":"0",
-            "19":"0",
-            "20":"0",
-            "21":"0",
-            "22":"0",
-            "23":"0",
-            "24":"0",
-            "25":"0",
-            "26":"0",
-            "27":"0",
-            "28":"0",
-            "29":"0",
-            "30":"0",
-            "31":"0",
-            "32":"0",
-            "33":"0",
-            "34":"0",
-            "35":"0",
-            "36":"0",
-            "37":"0",
-            "38":"0",
-            "39":"0",
-            "40":"0",
-            "41":"0",
-            "42":"0",
-            "43":"0",
-            "44":"0",
-            "45":"0",
-            "46":"0",
-            "47":"0",
-            "48":"0",
-            "49":"0",
-            "50":"0",
-            "51":"0",
-            "52":"0",
-            "53":"0",
-            "54":"0",
-            "55":"0",
-            "56":"0",
-            "57":"0",
-            "58":"0",
-            "59":"0",
-            "60":"0",
-            "61":"0",
-            "62":"0",
-            "63":"0"
+            "0" : "1",
+            "1" : "1",
+            "2" : "1",
+            "3" : "3",
+            "4" : "4",
+            "5" : "2",
+            "6" : "1",
+            "7" : "1",
+            "8" : "0",
+            "9" : "1",
+            "10": "1",
+            "11": "1",
+            "12": "1",
+            "13": "1",
+            "14": "1",
+            "15": "1",
+            "16": "1",
+            "17": "1",
+            "18": "1",
+            "19": "1",
+            "20": "1",
+            "21": "1",
+            "22": "1",
+            "23": "1",
+            "24": "1",
+            "25": "1",
+            "26": "1",
+            "27": "1",
+            "28": "1",
+            "29": "1",
+            "30": "1",
+            "31": "1",
+            "32": "1",
+            "33": "1",
+            "34": "1",
+            "35": "1",
+            "36": "1",
+            "37": "1",
+            "38": "1",
+            "39": "1",
+            "40": "1",
+            "41": "1",
+            "42": "1",
+            "43": "1",
+            "44": "1",
+            "45": "1",
+            "46": "5",
+            "47": "1",
+            "48": "6",
+            "49": "1",
+            "50": "1",
+            "51": "1",
+            "52": "1",
+            "53": "1",
+            "54": "1",
+            "55": "1",
+            "56": "1",
+            "57": "1",
+            "58": "1",
+            "59": "1",
+            "60": "1",
+            "61": "1",
+            "62": "1",
+            "63": "1"
         }
     },
     "PORT_QOS_MAP": {
-       "{{ port_names }}": {
-            "tc_to_pg_map": "[TC_TO_PRIORITY_GROUP_MAP|AZURE]",
-            "tc_to_queue_map": "[TC_TO_QUEUE_MAP|AZURE]",
-            "dscp_to_tc_map": "[DSCP_TO_TC_MAP|AZURE]",
+{% for port in port_names_list %}
+       "{{ port }}": {
+            "tc_to_pg_map": "AZURE",
+            "tc_to_queue_map": "AZURE",
+            "dscp_to_tc_map": "AZURE",
             "pfc_enable": "3,4"
-        }
+        }{% if not loop.last %},{% endif %}
+
+{% endfor %}
     },
     "WRED_PROFILE": {
         "AZURE_LOSSLESS" : {
-            "red_min_threshold":"50000"
+            "wred_green_enable"      : "true",
+            "wred_yellow_enable"     : "true",
+            "wred_red_enable"        : "true",
+            "ecn"                    : "ecn_all",
+            "green_max_threshold"    : "2097152",
+            "green_min_threshold"    : "1048576",
+            "yellow_max_threshold"   : "2097152",
+            "yellow_min_threshold"   : "1048576",
+            "red_max_threshold"      : "2097152",
+            "red_min_threshold"      : "1048576",
+            "green_drop_probability" : "5",
+            "yellow_drop_probability": "5",
+            "red_drop_probability"   : "5"
         }
     }
 }
diff --git a/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k_32x100/buffers.json.j2 b/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k_32x100/buffers.json.j2
index 93dac6b19..020656fdb 100644
--- a/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k_32x100/buffers.json.j2
+++ b/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k_32x100/buffers.json.j2
@@ -76,7 +76,7 @@
     },
     "BUFFER_POOL": {
         "ingress_lossless_pool": {
-            "size": "47218432",
+            "size": "51691264",
             "type": "ingress",
             "mode": "dynamic",
             "xoff": "17708800"
@@ -86,52 +86,77 @@
             "type": "egress",
             "mode": "dynamic",
             "xoff": "0"
+        },
+        "egress_lossless_pool": {
+            "size": "70565632",
+            "type": "egress",
+            "mode": "static"
         }
     },
     "BUFFER_PROFILE": {
         "ingress_lossless_profile": {
-            "pool":"[BUFFER_POOL|ingress_lossless_pool]",
+            "pool":"ingress_lossless_pool",
             "xoff":"38816",
             "size":"1518",
             "dynamic_th":"1",
-            "xon_offset":"13440"
+            "xon_offset":"9408"
         },
         "egress_lossless_profile": {
-            "pool":"[BUFFER_POOL|ingress_lossless_pool]",
+            "pool":"ingress_lossless_pool",
             "size":"0",
-            "static_th":"9497600"
+            "static_th":"10243072"
         },
         "ingress_lossy_profile": {
-            "pool":"[BUFFER_POOL|lossy_pool]",
+            "pool":"lossy_pool",
             "size":"0",
-            "static_th":"9497600"
+            "static_th":"10243072"
         },
         "egress_lossy_profile": {
-            "pool":"[BUFFER_POOL|lossy_pool]",
+            "pool":"lossy_pool",
             "size":"1518",
             "dynamic_th":"2"
         }
     },
     "BUFFER_PG": {
-        "{{ port_names }}|0-2": {
-            "profile" : "[BUFFER_PROFILE|ingress_lossy_profile]"
-        },
-        "{{ port_names }}|3-4": {
-            "profile" : "[BUFFER_PROFILE|ingress_lossless_profile]"
-        },
-        "{{ port_names }}|5-7": {
-            "profile" : "[BUFFER_PROFILE|ingress_lossy_profile]"
-        }
+{% for port in port_names_list %}
+                "{{ port }}|3-4": {
+                     "profile" : "ingress_lossless_profile"
+                },
+{% endfor %}
+{% for port in port_names_list %}
+                "{{ port }}|0": {
+                    "profile" : "ingress_lossy_profile"
+                },
+{% endfor %}
+{% for port in port_names_list %}
+                "{{ port }}|1-2": {
+                    "profile" : "ingress_lossy_profile"
+                },
+{% endfor %}
+{% for port in port_names_list %}
+                "{{ port }}|5-7": {
+                    "profile" : "ingress_lossy_profile"
+                }{% if not loop.last %},{% endif %}
+
+{% endfor %}
     },
+
     "BUFFER_QUEUE": {
-        "{{ port_names }}|3-4": {
-            "profile" : "[BUFFER_PROFILE|egress_lossless_profile]"
+{% for port in port_names_list %}
+        "{{ port }}|3-4": {
+             "profile" : "egress_lossless_profile"
         },
-        "{{ port_names }}|0-2": {
-            "profile" : "[BUFFER_PROFILE|egress_lossy_profile]"
+{% endfor %}
+{% for port in port_names_list %}
+        "{{ port }}|0-2": {
+            "profile" : "egress_lossy_profile"
         },
-        "{{ port_names }}|5-7": {
-            "profile" : "[BUFFER_PROFILE|egress_lossy_profile]"
-        }
+{% endfor %}
+{% for port in port_names_list %}
+        "{{ port }}|5-7": {
+            "profile" : "egress_lossy_profile"
+        }{% if not loop.last %},{% endif %}
+
+{% endfor %}
     }
 }
diff --git a/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k_32x100/buffers_defaults_def_lossy.j2 b/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k_32x100/buffers_defaults_def_lossy.j2
index 1a31812c2..79dbf9b28 100644
--- a/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k_32x100/buffers_defaults_def_lossy.j2
+++ b/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k_32x100/buffers_defaults_def_lossy.j2
@@ -7,7 +7,7 @@
 {
     "BUFFER_POOL": {
         "lossy_pool": {
-            "size": "56985600",
+            "size": "61458432",
             "type": "egress",
             "mode": "dynamic",
             "xoff": "0"
@@ -15,24 +15,28 @@
     },
     "BUFFER_PROFILE": {
         "ingress_lossy_profile": {
-            "pool":"[BUFFER_POOL|lossy_pool]",
+            "pool":"lossy_pool",
             "size":"0",
-            "static_th":"9497600"
+            "static_th":"10243072"
         },
         "egress_lossy_profile": {
-            "pool":"[BUFFER_POOL|lossy_pool]",
+            "pool":"lossy_pool",
             "size":"1518",
             "dynamic_th":"2"
         }
     },
     "BUFFER_PG": {
-        "{{ port_names }}|0-7": {
-            "profile" : "[BUFFER_PROFILE|ingress_lossy_profile]"
-        }
+{% for port in port_names_list %}
+        "{{ port }}|0-7": {
+            "profile" : "ingress_lossy_profile"
+        }{% if not loop.last %},{% endif %}
+{% endfor %}
     },
     "BUFFER_QUEUE": {
-            "{{ port_names }}|0-7": {
-            "profile" : "[BUFFER_PROFILE|egress_lossy_profile]"
-        }
+{% for port in port_names_list %}
+        "{{ port }}|0-7": {
+            "profile" : "egress_lossy_profile"
+        }{% if not loop.last %},{% endif %}
+{% endfor %}
     }
 }
diff --git a/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k_32x100/buffers_defaults_t1.j2 b/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k_32x100/buffers_defaults_t1.j2
index 93dac6b19..020656fdb 100644
--- a/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k_32x100/buffers_defaults_t1.j2
+++ b/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k_32x100/buffers_defaults_t1.j2
@@ -76,7 +76,7 @@
     },
     "BUFFER_POOL": {
         "ingress_lossless_pool": {
-            "size": "47218432",
+            "size": "51691264",
             "type": "ingress",
             "mode": "dynamic",
             "xoff": "17708800"
@@ -86,52 +86,77 @@
             "type": "egress",
             "mode": "dynamic",
             "xoff": "0"
+        },
+        "egress_lossless_pool": {
+            "size": "70565632",
+            "type": "egress",
+            "mode": "static"
         }
     },
     "BUFFER_PROFILE": {
         "ingress_lossless_profile": {
-            "pool":"[BUFFER_POOL|ingress_lossless_pool]",
+            "pool":"ingress_lossless_pool",
             "xoff":"38816",
             "size":"1518",
             "dynamic_th":"1",
-            "xon_offset":"13440"
+            "xon_offset":"9408"
         },
         "egress_lossless_profile": {
-            "pool":"[BUFFER_POOL|ingress_lossless_pool]",
+            "pool":"ingress_lossless_pool",
             "size":"0",
-            "static_th":"9497600"
+            "static_th":"10243072"
         },
         "ingress_lossy_profile": {
-            "pool":"[BUFFER_POOL|lossy_pool]",
+            "pool":"lossy_pool",
             "size":"0",
-            "static_th":"9497600"
+            "static_th":"10243072"
         },
         "egress_lossy_profile": {
-            "pool":"[BUFFER_POOL|lossy_pool]",
+            "pool":"lossy_pool",
             "size":"1518",
             "dynamic_th":"2"
         }
     },
     "BUFFER_PG": {
-        "{{ port_names }}|0-2": {
-            "profile" : "[BUFFER_PROFILE|ingress_lossy_profile]"
-        },
-        "{{ port_names }}|3-4": {
-            "profile" : "[BUFFER_PROFILE|ingress_lossless_profile]"
-        },
-        "{{ port_names }}|5-7": {
-            "profile" : "[BUFFER_PROFILE|ingress_lossy_profile]"
-        }
+{% for port in port_names_list %}
+                "{{ port }}|3-4": {
+                     "profile" : "ingress_lossless_profile"
+                },
+{% endfor %}
+{% for port in port_names_list %}
+                "{{ port }}|0": {
+                    "profile" : "ingress_lossy_profile"
+                },
+{% endfor %}
+{% for port in port_names_list %}
+                "{{ port }}|1-2": {
+                    "profile" : "ingress_lossy_profile"
+                },
+{% endfor %}
+{% for port in port_names_list %}
+                "{{ port }}|5-7": {
+                    "profile" : "ingress_lossy_profile"
+                }{% if not loop.last %},{% endif %}
+
+{% endfor %}
     },
+
     "BUFFER_QUEUE": {
-        "{{ port_names }}|3-4": {
-            "profile" : "[BUFFER_PROFILE|egress_lossless_profile]"
+{% for port in port_names_list %}
+        "{{ port }}|3-4": {
+             "profile" : "egress_lossless_profile"
         },
-        "{{ port_names }}|0-2": {
-            "profile" : "[BUFFER_PROFILE|egress_lossy_profile]"
+{% endfor %}
+{% for port in port_names_list %}
+        "{{ port }}|0-2": {
+            "profile" : "egress_lossy_profile"
         },
-        "{{ port_names }}|5-7": {
-            "profile" : "[BUFFER_PROFILE|egress_lossy_profile]"
-        }
+{% endfor %}
+{% for port in port_names_list %}
+        "{{ port }}|5-7": {
+            "profile" : "egress_lossy_profile"
+        }{% if not loop.last %},{% endif %}
+
+{% endfor %}
     }
 }
diff --git a/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k_32x100/config_32x100G_wistron_sw_to3200k.yaml b/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k_32x100/config_32x100G_wistron_sw_to3200k.yaml
index a6f5d00d8..a0faac846 100644
--- a/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k_32x100/config_32x100G_wistron_sw_to3200k.yaml
+++ b/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k_32x100/config_32x100G_wistron_sw_to3200k.yaml
@@ -10,12 +10,11 @@ nodes:
     - auto_create: "no"
       multi_interface: "yes"
     buffer_management_mode: "api_driven"
+    wred_cr_ip_proto_list: "17"
+    cr_assignment_mode: "1"
     max_lossless_tc: "2"
     ilpm_enable: "1"
     forward_profile: "IFCS_FORWARD_PROFILE_ID_PROFILE_E"
-    pcie_attn: "10, 0, 0, 0"
-    pcie_post: "10, 18, 18, 18"
-    pcie_pre1: "0, 0, 0, 0"
     led_cfg_sck_rate: "0x5"
     led_refresh_precliff_timer: "0x18eec2"
     led_refresh_cliff_timer: "0x15e"
diff --git a/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k_32x100/innovium.77700_B b/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k_32x100/innovium.77700_B
index 27297b313..57ba52cbc 100644
--- a/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k_32x100/innovium.77700_B
+++ b/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k_32x100/innovium.77700_B
@@ -5,6 +5,7 @@ device_id:         0x1b58
 # Hardware constraint information
 hardware:
         num_ibs:           6
+        ib_active:         0,1,2,3,4,5
 
         ports_per_ib:      32, 32, 32, 32, 20, 20
         recirc_port_num:   32, 32, 32, 32, 32, 32
diff --git a/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k_32x100/ivm.sai.config.yaml b/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k_32x100/ivm.sai.config.yaml
index 8ae2b9683..639a5eaaf 100644
--- a/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k_32x100/ivm.sai.config.yaml
+++ b/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k_32x100/ivm.sai.config.yaml
@@ -3,7 +3,12 @@ IFCS_SKU_FILE : "/usr/share/sonic/hwsku/innovium.77700_B"
 IFCS_INNO_CLI_PORT : "9999"
 IFCS_TARGET : "device"
 INNOVIUM_DIR : "/innovium"
-PYTHONPATH : "$INNOVIUM_DIR:$INNOVIUM_DIR/cmds:$INNOVIUM_DIR/scripts:$INNOVIUM_DIR/test/:$INNOVIUM_DIR/test/utils:$INNOVIUM_DIR/utils:$INNOVIUM_DIR/pyctypes"
+PYTHONPATH : "$INNOVIUM_DIR:$INNOVIUM_DIR/cmds:$INNOVIUM_DIR/scripts:$INNOVIUM_DIR/test/:$INNOVIUM_DIR/test/utils:$INNOVIUM_DIR/utils:$INNOVIUM_DIR/pyctypes:$INNOVIUM_DIR/ifcs_cmds:$INNOVIUM_DIR/testutil"
 PLATFORM_LIBRARY: "/usr/share/sonic/platform/lib_ivm_serdes_pltfm.so"
 IVM_SAI_DATAPATH_CONFIG_FILE: "/usr/share/sonic/hwsku/ivm.sai.datapath.config.yaml"
 IVM_SAI_PARAM_A0008: "32"
+IVM_SAI_PARAM_A0016: "1"
+IVM_SAI_PARAM_A0003: "4"
+IVM_SAI_PARAM_A0001: "TRUE"
+IVM_SAI_PARAM_A0014: "TRUE"
+IVM_SAI_PARAM_A0013: "1"
diff --git a/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k_32x100/pg_profile_lookup.ini b/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k_32x100/pg_profile_lookup.ini
index adcb52ab2..0d881737c 100644
--- a/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k_32x100/pg_profile_lookup.ini
+++ b/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k_32x100/pg_profile_lookup.ini
@@ -1,18 +1,22 @@
 # PG lossless profiles.
 # speed   cable size  xon  xoff  threshold xon_offset
-  25000   5m    1518  0    15680   1       13440
-  50000   5m    1518  0    21248   1       13440
-  100000  5m    1518  0    34624   1       13440
-  400000  5m    1518  0    117536  1       13440
-  25000   40m   1518  0    16928   1       13440
-  50000   40m   1518  0    23392   1       13440
-  100000  40m   1518  0    38816   1       13440
-  400000  40m   1518  0    135520  1       13440
-  25000   100m  1518  0    18848   1       13440
-  50000   100m  1518  0    27264   1       13440
-  100000  100m  1518  0    46496   1       13440
-  400000  100m  1518  0    166688  1       13440
-  25000   300m  1518  0    25184   1       13440
-  50000   300m  1518  0    40128   1       13440
-  100000  300m  1518  0    72384   1       13440
-  400000  300m  1518  0    268640  1       13440
+  25000   5m    1518  0    15680   1       9408
+  50000   5m    1518  0    21248   1       9408
+  100000  5m    1518  0    34624   1       9408
+  200000  5m    1518  0    62368   1       9408
+  400000  5m    1518  0    117536  1       9408
+  25000   40m   1518  0    16928   1       9408
+  50000   40m   1518  0    23392   1       9408
+  100000  40m   1518  0    38816   1       9408
+  200000  40m   1518  0    71904   1       9408
+  400000  40m   1518  0    135520  1       9408
+  25000   100m  1518  0    18848   1       9408
+  50000   100m  1518  0    27264   1       9408
+  100000  100m  1518  0    46496   1       9408
+  200000  100m  1518  0    87168   1       9408
+  400000  100m  1518  0    166688  1       9408
+  25000   300m  1518  0    25184   1       9408
+  50000   300m  1518  0    40128   1       9408
+  100000  300m  1518  0    72384   1       9408
+  200000  300m  1518  0    138112  1       9408
+  400000  300m  1518  0    268640  1       9408
diff --git a/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k_32x100/qos.json.j2 b/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k_32x100/qos.json.j2
index 4b9748c7b..b03078465 100644
--- a/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k_32x100/qos.json.j2
+++ b/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k_32x100/qos.json.j2
@@ -32,83 +32,98 @@
     },
        "DSCP_TO_TC_MAP": {
         "AZURE": {
-            "0":"0",
-            "1":"0",
-            "2":"0",
-            "3":"3",
-            "4":"4",
-            "5":"0",
-            "6":"0",
-            "7":"0",
-            "8":"1",
-            "9":"0",
-            "10":"0",
-            "11":"0",
-            "12":"0",
-            "13":"0",
-            "14":"0",
-            "15":"0",
-            "16":"0",
-            "17":"0",
-            "18":"0",
-            "19":"0",
-            "20":"0",
-            "21":"0",
-            "22":"0",
-            "23":"0",
-            "24":"0",
-            "25":"0",
-            "26":"0",
-            "27":"0",
-            "28":"0",
-            "29":"0",
-            "30":"0",
-            "31":"0",
-            "32":"0",
-            "33":"0",
-            "34":"0",
-            "35":"0",
-            "36":"0",
-            "37":"0",
-            "38":"0",
-            "39":"0",
-            "40":"0",
-            "41":"0",
-            "42":"0",
-            "43":"0",
-            "44":"0",
-            "45":"0",
-            "46":"0",
-            "47":"0",
-            "48":"0",
-            "49":"0",
-            "50":"0",
-            "51":"0",
-            "52":"0",
-            "53":"0",
-            "54":"0",
-            "55":"0",
-            "56":"0",
-            "57":"0",
-            "58":"0",
-            "59":"0",
-            "60":"0",
-            "61":"0",
-            "62":"0",
-            "63":"0"
+            "0" : "1",
+            "1" : "1",
+            "2" : "1",
+            "3" : "3",
+            "4" : "4",
+            "5" : "2",
+            "6" : "1",
+            "7" : "1",
+            "8" : "0",
+            "9" : "1",
+            "10": "1",
+            "11": "1",
+            "12": "1",
+            "13": "1",
+            "14": "1",
+            "15": "1",
+            "16": "1",
+            "17": "1",
+            "18": "1",
+            "19": "1",
+            "20": "1",
+            "21": "1",
+            "22": "1",
+            "23": "1",
+            "24": "1",
+            "25": "1",
+            "26": "1",
+            "27": "1",
+            "28": "1",
+            "29": "1",
+            "30": "1",
+            "31": "1",
+            "32": "1",
+            "33": "1",
+            "34": "1",
+            "35": "1",
+            "36": "1",
+            "37": "1",
+            "38": "1",
+            "39": "1",
+            "40": "1",
+            "41": "1",
+            "42": "1",
+            "43": "1",
+            "44": "1",
+            "45": "1",
+            "46": "5",
+            "47": "1",
+            "48": "6",
+            "49": "1",
+            "50": "1",
+            "51": "1",
+            "52": "1",
+            "53": "1",
+            "54": "1",
+            "55": "1",
+            "56": "1",
+            "57": "1",
+            "58": "1",
+            "59": "1",
+            "60": "1",
+            "61": "1",
+            "62": "1",
+            "63": "1"
         }
     },
     "PORT_QOS_MAP": {
-       "{{ port_names }}": {
-            "tc_to_pg_map": "[TC_TO_PRIORITY_GROUP_MAP|AZURE]",
-            "tc_to_queue_map": "[TC_TO_QUEUE_MAP|AZURE]",
-            "dscp_to_tc_map": "[DSCP_TO_TC_MAP|AZURE]",
+{% for port in port_names_list %}
+       "{{ port }}": {
+            "tc_to_pg_map": "AZURE",
+            "tc_to_queue_map": "AZURE",
+            "dscp_to_tc_map": "AZURE",
             "pfc_enable": "3,4"
-        }
+        }{% if not loop.last %},{% endif %}
+
+{% endfor %}
     },
     "WRED_PROFILE": {
         "AZURE_LOSSLESS" : {
-            "red_min_threshold":"50000"
+            "wred_green_enable"      : "true",
+            "wred_yellow_enable"     : "true",
+            "wred_red_enable"        : "true",
+            "ecn"                    : "ecn_all",
+            "green_max_threshold"    : "2097152",
+            "green_min_threshold"    : "1048576",
+            "yellow_max_threshold"   : "2097152",
+            "yellow_min_threshold"   : "1048576",
+            "red_max_threshold"      : "2097152",
+            "red_min_threshold"      : "1048576",
+            "green_drop_probability" : "5",
+            "yellow_drop_probability": "5",
+            "red_drop_probability"   : "5"
         }
     }
 }
diff --git a/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k_32x100/qos_defaults_def_lossy.j2 b/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k_32x100/qos_defaults_def_lossy.j2
index 104d2d78d..c1170619b 100644
--- a/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k_32x100/qos_defaults_def_lossy.j2
+++ b/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k_32x100/qos_defaults_def_lossy.j2
@@ -23,8 +23,8 @@
         "0": "0",
         "1": "0",
         "2": "0",
-        "3": "3",
-        "4": "4",
+        "3": "1",
+        "4": "2",
         "5": "0",
         "6": "0",
         "7": "0"
@@ -99,11 +99,14 @@
         }
     },
     "PORT_QOS_MAP": {
-       "{{ port_names }}": {
-            "tc_to_pg_map": "[TC_TO_PRIORITY_GROUP_MAP|AZURE]",
-            "tc_to_queue_map": "[TC_TO_QUEUE_MAP|AZURE]",
-            "dscp_to_tc_map": "[DSCP_TO_TC_MAP|AZURE]"
-        }
+{% for port in port_names_list %}
+       "{{ port }}": {
+            "tc_to_pg_map": "AZURE",
+            "tc_to_queue_map": "AZURE",
+            "dscp_to_tc_map": "AZURE"
+        }{% if not loop.last %},{% endif %}
+
+{% endfor %}
     },
     "SCHEDULER": {
         "scheduler.7": {
diff --git a/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k_32x100/qos_defaults_t1.j2 b/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k_32x100/qos_defaults_t1.j2
index 4b9748c7b..b03078465 100644
--- a/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k_32x100/qos_defaults_t1.j2
+++ b/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k_32x100/qos_defaults_t1.j2
@@ -32,83 +32,98 @@
     },
        "DSCP_TO_TC_MAP": {
         "AZURE": {
-            "0":"0",
-            "1":"0",
-            "2":"0",
-            "3":"3",
-            "4":"4",
-            "5":"0",
-            "6":"0",
-            "7":"0",
-            "8":"1",
-            "9":"0",
-            "10":"0",
-            "11":"0",
-            "12":"0",
-            "13":"0",
-            "14":"0",
-            "15":"0",
-            "16":"0",
-            "17":"0",
-            "18":"0",
-            "19":"0",
-            "20":"0",
-            "21":"0",
-            "22":"0",
-            "23":"0",
-            "24":"0",
-            "25":"0",
-            "26":"0",
-            "27":"0",
-            "28":"0",
-            "29":"0",
-            "30":"0",
-            "31":"0",
-            "32":"0",
-            "33":"0",
-            "34":"0",
-            "35":"0",
-            "36":"0",
-            "37":"0",
-            "38":"0",
-            "39":"0",
-            "40":"0",
-            "41":"0",
-            "42":"0",
-            "43":"0",
-            "44":"0",
-            "45":"0",
-            "46":"0",
-            "47":"0",
-            "48":"0",
-            "49":"0",
-            "50":"0",
-            "51":"0",
-            "52":"0",
-            "53":"0",
-            "54":"0",
-            "55":"0",
-            "56":"0",
-            "57":"0",
-            "58":"0",
-            "59":"0",
-            "60":"0",
-            "61":"0",
-            "62":"0",
-            "63":"0"
+            "0" : "1",
+            "1" : "1",
+            "2" : "1",
+            "3" : "3",
+            "4" : "4",
+            "5" : "2",
+            "6" : "1",
+            "7" : "1",
+            "8" : "0",
+            "9" : "1",
+            "10": "1",
+            "11": "1",
+            "12": "1",
+            "13": "1",
+            "14": "1",
+            "15": "1",
+            "16": "1",
+            "17": "1",
+            "18": "1",
+            "19": "1",
+            "20": "1",
+            "21": "1",
+            "22": "1",
+            "23": "1",
+            "24": "1",
+            "25": "1",
+            "26": "1",
+            "27": "1",
+            "28": "1",
+            "29": "1",
+            "30": "1",
+            "31": "1",
+            "32": "1",
+            "33": "1",
+            "34": "1",
+            "35": "1",
+            "36": "1",
+            "37": "1",
+            "38": "1",
+            "39": "1",
+            "40": "1",
+            "41": "1",
+            "42": "1",
+            "43": "1",
+            "44": "1",
+            "45": "1",
+            "46": "5",
+            "47": "1",
+            "48": "6",
+            "49": "1",
+            "50": "1",
+            "51": "1",
+            "52": "1",
+            "53": "1",
+            "54": "1",
+            "55": "1",
+            "56": "1",
+            "57": "1",
+            "58": "1",
+            "59": "1",
+            "60": "1",
+            "61": "1",
+            "62": "1",
+            "63": "1"
         }
     },
     "PORT_QOS_MAP": {
-       "{{ port_names }}": {
-            "tc_to_pg_map": "[TC_TO_PRIORITY_GROUP_MAP|AZURE]",
-            "tc_to_queue_map": "[TC_TO_QUEUE_MAP|AZURE]",
-            "dscp_to_tc_map": "[DSCP_TO_TC_MAP|AZURE]",
+{% for port in port_names_list %}
+       "{{ port }}": {
+            "tc_to_pg_map": "AZURE",
+            "tc_to_queue_map": "AZURE",
+            "dscp_to_tc_map": "AZURE",
             "pfc_enable": "3,4"
-        }
+        }{% if not loop.last %},{% endif %}
+
+{% endfor %}
     },
     "WRED_PROFILE": {
         "AZURE_LOSSLESS" : {
-            "red_min_threshold":"50000"
+            "wred_green_enable"      : "true",
+            "wred_yellow_enable"     : "true",
+            "wred_red_enable"        : "true",
+            "ecn"                    : "ecn_all",
+            "green_max_threshold"    : "2097152",
+            "green_min_threshold"    : "1048576",
+            "yellow_max_threshold"   : "2097152",
+            "yellow_min_threshold"   : "1048576",
+            "red_max_threshold"      : "2097152",
+            "red_min_threshold"      : "1048576",
+            "green_drop_probability" : "5",
+            "yellow_drop_probability": "5",
+            "red_drop_probability"   : "5"
         }
     }
 }
diff --git a/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k_72x25_6x400/buffers.json.j2 b/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k_72x25_6x400/buffers.json.j2
index 1a31812c2..794b5c854 100644
--- a/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k_72x25_6x400/buffers.json.j2
+++ b/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k_72x25_6x400/buffers.json.j2
@@ -1,3 +1,63 @@
+{# Default values which will be used if no actual configura available #}
+{% set default_cable = '40m' %}
+
+{# Port configuration to cable length look-up table #}
+{# Each record describes mapping of DUT (DUT port) role and neighbor role to cable length #}
+{# Roles described in the minigraph #}
+{% set ports2cable = {
+        'torrouter_server'       : '5m',
+        'leafrouter_torrouter'   : '40m',
+        'spinerouter_leafrouter' : '300m'
+        }
+%}
+
+{%- macro cable_length(port_name) %}
+    {%- set cable_len = [] %}
+    {%- for local_port in DEVICE_NEIGHBOR %}
+        {%- if local_port == port_name %}
+            {%- if DEVICE_NEIGHBOR_METADATA is defined and DEVICE_NEIGHBOR_METADATA[DEVICE_NEIGHBOR[local_port].name] %}
+                {%- set neighbor = DEVICE_NEIGHBOR_METADATA[DEVICE_NEIGHBOR[local_port].name] %}
+                {%- set neighbor_role = neighbor.type %}
+                {%- set roles1 = switch_role + '_' + neighbor_role %}
+                {%- set roles2 = neighbor_role + '_' + switch_role %}
+                {%- set roles1 = roles1 | lower %}
+                {%- set roles2 = roles2 | lower %}
+                {%- if roles1 in ports2cable %}
+                    {%- if cable_len.append(ports2cable[roles1]) %}{% endif %}
+                {%- elif roles2 in ports2cable %}
+                    {%- if cable_len.append(ports2cable[roles2]) %}{% endif %}
+                {%- endif %}
+            {%- endif %}
+        {%- endif %}
+    {%- endfor %}
+    {%- if cable_len -%}
+        {{ cable_len.0 }}
+    {%- else %}
+        {%- if switch_role.lower() == 'torrouter' %}
+            {%- for local_port in VLAN_MEMBER %}
+                {%- if local_port[1] == port_name %}
+                    {%- set roles3 = switch_role + '_' + 'server' %}
+                    {%- set roles3 = roles3 | lower %}
+                    {%- if roles3 in ports2cable %}
+                        {%- if cable_len.append(ports2cable[roles3]) %}{% endif %}
+                    {%- endif %}
+                {%- endif %}
+            {%- endfor %}
+            {%- if cable_len -%}
+                {{ cable_len.0 }}
+            {%- else -%}
+                {{ default_cable }}
+            {%- endif %}
+        {%- else -%}
+            {{ default_cable }}
+        {%- endif %}
+    {%- endif %}
+{%- endmacro %}
+
+{%- if DEVICE_METADATA is defined %}
+{%- set switch_role = DEVICE_METADATA['localhost']['type'] %}
+{%- endif -%}
+
 {% set port_names_list = [] %}
 {% for port in PORT %}
     {%- if port_names_list.append(port) %}{% endif %}
@@ -5,34 +65,98 @@
 {% set port_names = port_names_list | join(',') -%}
 
 {
+    "CABLE_LENGTH": {
+        "AZURE": {
+    {% for port in PORT %}
+        {% set cable = cable_length(port) -%}
+        "{{ port }}": "{{ cable }}"{%- if not loop.last -%},{% endif %}
+
+    {% endfor %}
+    }
+    },
     "BUFFER_POOL": {
+        "ingress_lossless_pool": {
+            "size": "47218432",
+            "type": "ingress",
+            "mode": "dynamic",
+            "xoff": "17708800"
+        },
         "lossy_pool": {
-            "size": "56985600",
+            "size": "18874368",
             "type": "egress",
             "mode": "dynamic",
             "xoff": "0"
+        },
+        "egress_lossless_pool": {
+            "size": "66092800",
+            "mode": "static",
+            "type": "egress"
         }
     },
     "BUFFER_PROFILE": {
+        "ingress_lossless_profile": {
+            "pool":"ingress_lossless_pool",
+            "xoff":"38816",
+            "size":"1518",
+            "dynamic_th":"1",
+            "xon_offset":"9408"
+        },
+        "egress_lossless_profile": {
+            "pool":"ingress_lossless_pool",
+            "size":"0",
+            "static_th":"9497600"
+        },
         "ingress_lossy_profile": {
-            "pool":"[BUFFER_POOL|lossy_pool]",
+            "pool":"lossy_pool",
             "size":"0",
             "static_th":"9497600"
         },
         "egress_lossy_profile": {
-            "pool":"[BUFFER_POOL|lossy_pool]",
+            "pool":"lossy_pool",
             "size":"1518",
             "dynamic_th":"2"
         }
     },
     "BUFFER_PG": {
-        "{{ port_names }}|0-7": {
-            "profile" : "[BUFFER_PROFILE|ingress_lossy_profile]"
-        }
+{% for port in port_names_list %}
+                "{{ port }}|3-4": {
+                     "profile" : "ingress_lossless_profile"
+                },
+{% endfor %}
+{% for port in port_names_list %}
+                "{{ port }}|0": {
+                    "profile" : "ingress_lossy_profile"
+                },
+{% endfor %}
+{% for port in port_names_list %}
+                "{{ port }}|1-2": {
+                    "profile" : "ingress_lossy_profile"
+                },
+{% endfor %}
+{% for port in port_names_list %}
+                "{{ port }}|5-7": {
+                    "profile" : "ingress_lossy_profile"
+                }{% if not loop.last %},{% endif %}
+
+{% endfor %}
     },
+
     "BUFFER_QUEUE": {
-            "{{ port_names }}|0-7": {
-            "profile" : "[BUFFER_PROFILE|egress_lossy_profile]"
-        }
+{% for port in port_names_list %}
+        "{{ port }}|3-4": {
+             "profile" : "egress_lossless_profile"
+        },
+{% endfor %}
+{% for port in port_names_list %}
+        "{{ port }}|0-2": {
+            "profile" : "egress_lossy_profile"
+        },
+{% endfor %}
+{% for port in port_names_list %}
+        "{{ port }}|5-7": {
+            "profile" : "egress_lossy_profile"
+        }{% if not loop.last %},{% endif %}
+
+{% endfor %}
     }
 }
diff --git a/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k_72x25_6x400/buffers_defaults_def_lossy.j2 b/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k_72x25_6x400/buffers_defaults_def_lossy.j2
index 1a31812c2..abb756c7d 100644
--- a/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k_72x25_6x400/buffers_defaults_def_lossy.j2
+++ b/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k_72x25_6x400/buffers_defaults_def_lossy.j2
@@ -15,24 +15,28 @@
     },
     "BUFFER_PROFILE": {
         "ingress_lossy_profile": {
-            "pool":"[BUFFER_POOL|lossy_pool]",
+            "pool":"lossy_pool",
             "size":"0",
             "static_th":"9497600"
         },
         "egress_lossy_profile": {
-            "pool":"[BUFFER_POOL|lossy_pool]",
+            "pool":"lossy_pool",
             "size":"1518",
             "dynamic_th":"2"
         }
     },
     "BUFFER_PG": {
-        "{{ port_names }}|0-7": {
-            "profile" : "[BUFFER_PROFILE|ingress_lossy_profile]"
-        }
+{% for port in port_names_list %}
+        "{{ port }}|0-7": {
+            "profile" : "ingress_lossy_profile"
+        }{% if not loop.last %},{% endif %}
+{% endfor %}
     },
     "BUFFER_QUEUE": {
-            "{{ port_names }}|0-7": {
-            "profile" : "[BUFFER_PROFILE|egress_lossy_profile]"
-        }
+{% for port in port_names_list %}
+        "{{ port }}|0-7": {
+            "profile" : "egress_lossy_profile"
+        }{% if not loop.last %},{% endif %}
+{% endfor %}
     }
 }
diff --git a/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k_72x25_6x400/buffers_defaults_t1.j2 b/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k_72x25_6x400/buffers_defaults_t1.j2
index 93dac6b19..1479f78fe 100644
--- a/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k_72x25_6x400/buffers_defaults_t1.j2
+++ b/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k_72x25_6x400/buffers_defaults_t1.j2
@@ -86,52 +86,76 @@
             "type": "egress",
             "mode": "dynamic",
             "xoff": "0"
+        },
+        "egress_lossless_pool": {
+            "size": "66092800",
+            "type": "egress"
         }
     },
     "BUFFER_PROFILE": {
         "ingress_lossless_profile": {
-            "pool":"[BUFFER_POOL|ingress_lossless_pool]",
+            "pool":"ingress_lossless_pool",
             "xoff":"38816",
             "size":"1518",
             "dynamic_th":"1",
-            "xon_offset":"13440"
+            "xon_offset":"9408"
         },
         "egress_lossless_profile": {
-            "pool":"[BUFFER_POOL|ingress_lossless_pool]",
+            "pool":"ingress_lossless_pool",
             "size":"0",
             "static_th":"9497600"
         },
         "ingress_lossy_profile": {
-            "pool":"[BUFFER_POOL|lossy_pool]",
+            "pool":"lossy_pool",
             "size":"0",
             "static_th":"9497600"
         },
         "egress_lossy_profile": {
-            "pool":"[BUFFER_POOL|lossy_pool]",
+            "pool":"lossy_pool",
             "size":"1518",
             "dynamic_th":"2"
         }
     },
     "BUFFER_PG": {
-        "{{ port_names }}|0-2": {
-            "profile" : "[BUFFER_PROFILE|ingress_lossy_profile]"
-        },
-        "{{ port_names }}|3-4": {
-            "profile" : "[BUFFER_PROFILE|ingress_lossless_profile]"
-        },
-        "{{ port_names }}|5-7": {
-            "profile" : "[BUFFER_PROFILE|ingress_lossy_profile]"
-        }
+{% for port in port_names_list %}
+                "{{ port }}|3-4": {
+                     "profile" : "ingress_lossless_profile"
+                },
+{% endfor %}
+{% for port in port_names_list %}
+                "{{ port }}|0": {
+                    "profile" : "ingress_lossy_profile"
+                },
+{% endfor %}
+{% for port in port_names_list %}
+                "{{ port }}|1-2": {
+                    "profile" : "ingress_lossy_profile"
+                },
+{% endfor %}
+{% for port in port_names_list %}
+                "{{ port }}|5-7": {
+                    "profile" : "ingress_lossy_profile"
+                }{% if not loop.last %},{% endif %}
+
+{% endfor %}
     },
+
     "BUFFER_QUEUE": {
-        "{{ port_names }}|3-4": {
-            "profile" : "[BUFFER_PROFILE|egress_lossless_profile]"
+{% for port in port_names_list %}
+        "{{ port }}|3-4": {
+             "profile" : "egress_lossless_profile"
         },
-        "{{ port_names }}|0-2": {
-            "profile" : "[BUFFER_PROFILE|egress_lossy_profile]"
+{% endfor %}
+{% for port in port_names_list %}
+        "{{ port }}|0-2": {
+            "profile" : "egress_lossy_profile"
         },
-        "{{ port_names }}|5-7": {
-            "profile" : "[BUFFER_PROFILE|egress_lossy_profile]"
-        }
+{% endfor %}
+{% for port in port_names_list %}
+        "{{ port }}|5-7": {
+            "profile" : "egress_lossy_profile"
+        }{% if not loop.last %},{% endif %}
+
+{% endfor %}
     }
 }
diff --git a/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k_72x25_6x400/innovium.77700_A b/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k_72x25_6x400/innovium.77700_A
index 84aa41983..ec1330780 100644
--- a/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k_72x25_6x400/innovium.77700_A
+++ b/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k_72x25_6x400/innovium.77700_A
@@ -5,6 +5,7 @@ device_id:         0x1b58
 # Hardware constraint information
 hardware:
         num_ibs:           6
+        ib_active:         0,1,2,3,4,5
 
         ports_per_ib:      32, 32, 32, 32, 20, 20
         recirc_port_num:   32, 32, 32, 32, 32, 32
diff --git a/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k_72x25_6x400/innovium.77700_B b/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k_72x25_6x400/innovium.77700_B
index 27297b313..57ba52cbc 100644
--- a/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k_72x25_6x400/innovium.77700_B
+++ b/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k_72x25_6x400/innovium.77700_B
@@ -5,6 +5,7 @@ device_id:         0x1b58
 # Hardware constraint information
 hardware:
         num_ibs:           6
+        ib_active:         0,1,2,3,4,5
 
         ports_per_ib:      32, 32, 32, 32, 20, 20
         recirc_port_num:   32, 32, 32, 32, 32, 32
diff --git a/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k_72x25_6x400/ivm.sai.config.yaml b/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k_72x25_6x400/ivm.sai.config.yaml
index 01fe64ec7..471622b2e 100644
--- a/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k_72x25_6x400/ivm.sai.config.yaml
+++ b/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k_72x25_6x400/ivm.sai.config.yaml
@@ -3,7 +3,12 @@ IFCS_SKU_FILE : "/usr/share/sonic/hwsku/innovium.77700_A"
 IFCS_INNO_CLI_PORT : "9999"
 IFCS_TARGET : "device"
 INNOVIUM_DIR : "/innovium"
-PYTHONPATH : "$INNOVIUM_DIR:$INNOVIUM_DIR/cmds:$INNOVIUM_DIR/scripts:$INNOVIUM_DIR/test/:$INNOVIUM_DIR/test/utils:$INNOVIUM_DIR/utils:$INNOVIUM_DIR/pyctypes"
+PYTHONPATH : "$INNOVIUM_DIR:$INNOVIUM_DIR/cmds:$INNOVIUM_DIR/scripts:$INNOVIUM_DIR/test/:$INNOVIUM_DIR/test/utils:$INNOVIUM_DIR/utils:$INNOVIUM_DIR/pyctypes:$INNOVIUM_DIR/ifcs_cmds:$INNOVIUM_DIR/testutil"
 PLATFORM_LIBRARY: "/usr/share/sonic/platform/lib_ivm_serdes_pltfm.so"
 IVM_SAI_DATAPATH_CONFIG_FILE: "/usr/share/sonic/hwsku/ivm.sai.datapath.config.yaml"
 IVM_SAI_PARAM_A0008: "32"
+IVM_SAI_PARAM_A0016: "1"
+IVM_SAI_PARAM_A0003: "4"
+IVM_SAI_PARAM_A0001: "TRUE"
+IVM_SAI_PARAM_A0014: "TRUE"
+IVM_SAI_PARAM_A0013: "1"
diff --git a/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k_72x25_6x400/pg_profile_lookup.ini b/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k_72x25_6x400/pg_profile_lookup.ini
index adcb52ab2..0d881737c 100644
--- a/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k_72x25_6x400/pg_profile_lookup.ini
+++ b/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k_72x25_6x400/pg_profile_lookup.ini
@@ -1,18 +1,22 @@
 # PG lossless profiles.
 # speed   cable size  xon  xoff  threshold xon_offset
-  25000   5m    1518  0    15680   1       13440
-  50000   5m    1518  0    21248   1       13440
-  100000  5m    1518  0    34624   1       13440
-  400000  5m    1518  0    117536  1       13440
-  25000   40m   1518  0    16928   1       13440
-  50000   40m   1518  0    23392   1       13440
-  100000  40m   1518  0    38816   1       13440
-  400000  40m   1518  0    135520  1       13440
-  25000   100m  1518  0    18848   1       13440
-  50000   100m  1518  0    27264   1       13440
-  100000  100m  1518  0    46496   1       13440
-  400000  100m  1518  0    166688  1       13440
-  25000   300m  1518  0    25184   1       13440
-  50000   300m  1518  0    40128   1       13440
-  100000  300m  1518  0    72384   1       13440
-  400000  300m  1518  0    268640  1       13440
+  25000   5m    1518  0    15680   1       9408
+  50000   5m    1518  0    21248   1       9408
+  100000  5m    1518  0    34624   1       9408
+  200000  5m    1518  0    62368   1       9408
+  400000  5m    1518  0    117536  1       9408
+  25000   40m   1518  0    16928   1       9408
+  50000   40m   1518  0    23392   1       9408
+  100000  40m   1518  0    38816   1       9408
+  200000  40m   1518  0    71904   1       9408
+  400000  40m   1518  0    135520  1       9408
+  25000   100m  1518  0    18848   1       9408
+  50000   100m  1518  0    27264   1       9408
+  100000  100m  1518  0    46496   1       9408
+  200000  100m  1518  0    87168   1       9408
+  400000  100m  1518  0    166688  1       9408
+  25000   300m  1518  0    25184   1       9408
+  50000   300m  1518  0    40128   1       9408
+  100000  300m  1518  0    72384   1       9408
+  200000  300m  1518  0    138112  1       9408
+  400000  300m  1518  0    268640  1       9408
diff --git a/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k_72x25_6x400/qos.json.j2 b/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k_72x25_6x400/qos.json.j2
index 104d2d78d..b03078465 100644
--- a/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k_72x25_6x400/qos.json.j2
+++ b/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k_72x25_6x400/qos.json.j2
@@ -32,87 +32,98 @@
     },
        "DSCP_TO_TC_MAP": {
         "AZURE": {
-            "0":"0",
-            "1":"0",
-            "2":"0",
-            "3":"0",
-            "4":"0",
-            "5":"0",
-            "6":"0",
-            "7":"0",
-            "8":"0",
-            "9":"0",
-            "10":"0",
-            "11":"0",
-            "12":"0",
-            "13":"0",
-            "14":"0",
-            "15":"0",
-            "16":"0",
-            "17":"0",
-            "18":"0",
-            "19":"0",
-            "20":"0",
-            "21":"0",
-            "22":"0",
-            "23":"0",
-            "24":"0",
-            "25":"0",
-            "26":"0",
-            "27":"0",
-            "28":"0",
-            "29":"0",
-            "30":"0",
-            "31":"0",
-            "32":"0",
-            "33":"0",
-            "34":"0",
-            "35":"0",
-            "36":"0",
-            "37":"0",
-            "38":"0",
-            "39":"0",
-            "40":"0",
-            "41":"0",
-            "42":"0",
-            "43":"0",
-            "44":"0",
-            "45":"0",
-            "46":"0",
-            "47":"0",
-            "48":"0",
-            "49":"0",
-            "50":"0",
-            "51":"0",
-            "52":"0",
-            "53":"0",
-            "54":"0",
-            "55":"0",
-            "56":"0",
-            "57":"0",
-            "58":"0",
-            "59":"0",
-            "60":"0",
-            "61":"0",
-            "62":"0",
-            "63":"0"
+            "0" : "1",
+            "1" : "1",
+            "2" : "1",
+            "3" : "3",
+            "4" : "4",
+            "5" : "2",
+            "6" : "1",
+            "7" : "1",
+            "8" : "0",
+            "9" : "1",
+            "10": "1",
+            "11": "1",
+            "12": "1",
+            "13": "1",
+            "14": "1",
+            "15": "1",
+            "16": "1",
+            "17": "1",
+            "18": "1",
+            "19": "1",
+            "20": "1",
+            "21": "1",
+            "22": "1",
+            "23": "1",
+            "24": "1",
+            "25": "1",
+            "26": "1",
+            "27": "1",
+            "28": "1",
+            "29": "1",
+            "30": "1",
+            "31": "1",
+            "32": "1",
+            "33": "1",
+            "34": "1",
+            "35": "1",
+            "36": "1",
+            "37": "1",
+            "38": "1",
+            "39": "1",
+            "40": "1",
+            "41": "1",
+            "42": "1",
+            "43": "1",
+            "44": "1",
+            "45": "1",
+            "46": "5",
+            "47": "1",
+            "48": "6",
+            "49": "1",
+            "50": "1",
+            "51": "1",
+            "52": "1",
+            "53": "1",
+            "54": "1",
+            "55": "1",
+            "56": "1",
+            "57": "1",
+            "58": "1",
+            "59": "1",
+            "60": "1",
+            "61": "1",
+            "62": "1",
+            "63": "1"
         }
     },
     "PORT_QOS_MAP": {
-       "{{ port_names }}": {
-            "tc_to_pg_map": "[TC_TO_PRIORITY_GROUP_MAP|AZURE]",
-            "tc_to_queue_map": "[TC_TO_QUEUE_MAP|AZURE]",
-            "dscp_to_tc_map": "[DSCP_TO_TC_MAP|AZURE]"
-        }
-    },
-    "SCHEDULER": {
-        "scheduler.7": {
-            "type": "STRICT"
-        }
+{% for port in port_names_list %}
+       "{{ port }}": {
+            "tc_to_pg_map": "AZURE",
+            "tc_to_queue_map": "AZURE",
+            "dscp_to_tc_map": "AZURE",
+            "pfc_enable": "3,4"
+        }{% if not loop.last %},{% endif %}
+
+{% endfor %}
     },
-    "QUEUE": {
-        "{{ port_names }}|7": {
-            "scheduler": "[SCHEDULER|scheduler.7]"
+    "WRED_PROFILE": {
+        "AZURE_LOSSLESS" : {
+            "wred_green_enable"      : "true",
+            "wred_yellow_enable"     : "true",
+            "wred_red_enable"        : "true",
+            "ecn"                    : "ecn_all",
+            "green_max_threshold"    : "2097152",
+            "green_min_threshold"    : "1048576",
+            "yellow_max_threshold"   : "2097152",
+            "yellow_min_threshold"   : "1048576",
+            "red_max_threshold"      : "2097152",
+            "red_min_threshold"      : "1048576",
+            "green_drop_probability" : "5",
+            "yellow_drop_probability": "5",
+            "red_drop_probability"   : "5"
         }
     }
 }
diff --git a/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k_72x25_6x400/qos_defaults_def_lossy.j2 b/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k_72x25_6x400/qos_defaults_def_lossy.j2
index 104d2d78d..c1170619b 100644
--- a/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k_72x25_6x400/qos_defaults_def_lossy.j2
+++ b/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k_72x25_6x400/qos_defaults_def_lossy.j2
@@ -23,8 +23,8 @@
         "0": "0",
         "1": "0",
         "2": "0",
-        "3": "3",
-        "4": "4",
+        "3": "1",
+        "4": "2",
         "5": "0",
         "6": "0",
         "7": "0"
@@ -99,11 +99,14 @@
         }
     },
     "PORT_QOS_MAP": {
-       "{{ port_names }}": {
-            "tc_to_pg_map": "[TC_TO_PRIORITY_GROUP_MAP|AZURE]",
-            "tc_to_queue_map": "[TC_TO_QUEUE_MAP|AZURE]",
-            "dscp_to_tc_map": "[DSCP_TO_TC_MAP|AZURE]"
-        }
+{% for port in port_names_list %}
+       "{{ port }}": {
+            "tc_to_pg_map": "AZURE",
+            "tc_to_queue_map": "AZURE",
+            "dscp_to_tc_map": "AZURE"
+        }{% if not loop.last %},{% endif %}
+
+{% endfor %}
     },
     "SCHEDULER": {
         "scheduler.7": {
diff --git a/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k_72x25_6x400/qos_defaults_t1.j2 b/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k_72x25_6x400/qos_defaults_t1.j2
index 4b9748c7b..b03078465 100644
--- a/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k_72x25_6x400/qos_defaults_t1.j2
+++ b/device/wistron/x86_64-wistron_sw_to3200k-r0/Wistron_sw_to3200k_72x25_6x400/qos_defaults_t1.j2
@@ -32,83 +32,98 @@
     },
        "DSCP_TO_TC_MAP": {
         "AZURE": {
-            "0":"0",
-            "1":"0",
-            "2":"0",
-            "3":"3",
-            "4":"4",
-            "5":"0",
-            "6":"0",
-            "7":"0",
-            "8":"1",
-            "9":"0",
-            "10":"0",
-            "11":"0",
-            "12":"0",
-            "13":"0",
-            "14":"0",
-            "15":"0",
-            "16":"0",
-            "17":"0",
-            "18":"0",
-            "19":"0",
-            "20":"0",
-            "21":"0",
-            "22":"0",
-            "23":"0",
-            "24":"0",
-            "25":"0",
-            "26":"0",
-            "27":"0",
-            "28":"0",
-            "29":"0",
-            "30":"0",
-            "31":"0",
-            "32":"0",
-            "33":"0",
-            "34":"0",
-            "35":"0",
-            "36":"0",
-            "37":"0",
-            "38":"0",
-            "39":"0",
-            "40":"0",
-            "41":"0",
-            "42":"0",
-            "43":"0",
-            "44":"0",
-            "45":"0",
-            "46":"0",
-            "47":"0",
-            "48":"0",
-            "49":"0",
-            "50":"0",
-            "51":"0",
-            "52":"0",
-            "53":"0",
-            "54":"0",
-            "55":"0",
-            "56":"0",
-            "57":"0",
-            "58":"0",
-            "59":"0",
-            "60":"0",
-            "61":"0",
-            "62":"0",
-            "63":"0"
+            "0" : "1",
+            "1" : "1",
+            "2" : "1",
+            "3" : "3",
+            "4" : "4",
+            "5" : "2",
+            "6" : "1",
+            "7" : "1",
+            "8" : "0",
+            "9" : "1",
+            "10": "1",
+            "11": "1",
+            "12": "1",
+            "13": "1",
+            "14": "1",
+            "15": "1",
+            "16": "1",
+            "17": "1",
+            "18": "1",
+            "19": "1",
+            "20": "1",
+            "21": "1",
+            "22": "1",
+            "23": "1",
+            "24": "1",
+            "25": "1",
+            "26": "1",
+            "27": "1",
+            "28": "1",
+            "29": "1",
+            "30": "1",
+            "31": "1",
+            "32": "1",
+            "33": "1",
+            "34": "1",
+            "35": "1",
+            "36": "1",
+            "37": "1",
+            "38": "1",
+            "39": "1",
+            "40": "1",
+            "41": "1",
+            "42": "1",
+            "43": "1",
+            "44": "1",
+            "45": "1",
+            "46": "5",
+            "47": "1",
+            "48": "6",
+            "49": "1",
+            "50": "1",
+            "51": "1",
+            "52": "1",
+            "53": "1",
+            "54": "1",
+            "55": "1",
+            "56": "1",
+            "57": "1",
+            "58": "1",
+            "59": "1",
+            "60": "1",
+            "61": "1",
+            "62": "1",
+            "63": "1"
         }
     },
     "PORT_QOS_MAP": {
-       "{{ port_names }}": {
-            "tc_to_pg_map": "[TC_TO_PRIORITY_GROUP_MAP|AZURE]",
-            "tc_to_queue_map": "[TC_TO_QUEUE_MAP|AZURE]",
-            "dscp_to_tc_map": "[DSCP_TO_TC_MAP|AZURE]",
+{% for port in port_names_list %}
+       "{{ port }}": {
+            "tc_to_pg_map": "AZURE",
+            "tc_to_queue_map": "AZURE",
+            "dscp_to_tc_map": "AZURE",
             "pfc_enable": "3,4"
-        }
+        }{% if not loop.last %},{% endif %}
+
+{% endfor %}
     },
     "WRED_PROFILE": {
         "AZURE_LOSSLESS" : {
-            "red_min_threshold":"50000"
+            "wred_green_enable"      : "true",
+            "wred_yellow_enable"     : "true",
+            "wred_red_enable"        : "true",
+            "ecn"                    : "ecn_all",
+            "green_max_threshold"    : "2097152",
+            "green_min_threshold"    : "1048576",
+            "yellow_max_threshold"   : "2097152",
+            "yellow_min_threshold"   : "1048576",
+            "red_max_threshold"      : "2097152",
+            "red_min_threshold"      : "1048576",
+            "green_drop_probability" : "5",
+            "yellow_drop_probability": "5",
+            "red_drop_probability"   : "5"
         }
     }
 }
diff --git a/device/wistron/x86_64-wistron_sw_to3200k-r0/installer.conf b/device/wistron/x86_64-wistron_sw_to3200k-r0/installer.conf
index 6af5fa8d9..d7d410dae 100644
--- a/device/wistron/x86_64-wistron_sw_to3200k-r0/installer.conf
+++ b/device/wistron/x86_64-wistron_sw_to3200k-r0/installer.conf
@@ -1,4 +1,4 @@
 CONSOLE_PORT=0x3f8
 CONSOLE_DEV=4
 CONSOLE_SPEED=115200
-ONIE_PLATFORM_EXTRA_CMDLINE_LINUX="pcie_aspm=off"
+ONIE_PLATFORM_EXTRA_CMDLINE_LINUX="pcie_aspm=off intel_iommu=off"
diff --git a/device/wistron/x86_64-wistron_sw_to3200k-r0/plugins/eeprom.py b/device/wistron/x86_64-wistron_sw_to3200k-r0/plugins/eeprom.py
index 9f59510ea..b7724886e 100644
--- a/device/wistron/x86_64-wistron_sw_to3200k-r0/plugins/eeprom.py
+++ b/device/wistron/x86_64-wistron_sw_to3200k-r0/plugins/eeprom.py
@@ -3,16 +3,16 @@
 try:
     import os
     from sonic_eeprom import eeprom_tlvinfo
-except ImportError, e:
+except ImportError as e:
     raise ImportError (str(e) + "- required module not found")
 
 def eeprom_check():
-    filepath="/sys/bus/i2c/devices/0-0056/eeprom"    
+    filepath="/sys/bus/i2c/devices/0-0056/eeprom"
     if os.path.isfile(filepath):
         return 1 #now board, 0x56
     else:
         return 0 #now board, 0x57
-    
+
 class board(eeprom_tlvinfo.TlvInfoDecoder):
     _TLV_INFO_MAX_LEN = 256
     def __init__(self, name, path, cpld_root, ro):
diff --git a/device/wistron/x86_64-wistron_sw_to3200k-r0/plugins/sfputil.py b/device/wistron/x86_64-wistron_sw_to3200k-r0/plugins/sfputil.py
index fe59dc7d8..898357901 100644
--- a/device/wistron/x86_64-wistron_sw_to3200k-r0/plugins/sfputil.py
+++ b/device/wistron/x86_64-wistron_sw_to3200k-r0/plugins/sfputil.py
@@ -111,7 +111,7 @@ class SfpUtil(SfpUtilBase):
             content = val_file.readline().rstrip()
             val_file.close()
         except IOError as e:
-            print "Error: unable to access file: %s" % str(e)
+            print("Error: unable to access file: %s" % str(e))
             return False
 
         if content == "1":
@@ -145,13 +145,13 @@ class SfpUtil(SfpUtilBase):
         elif timeout > 0:
             timeout = timeout / float(1000) # Convert to secs
         else:
-            print "get_transceiver_change_event:Invalid timeout value", timeout
+            print("get_transceiver_change_event:Invalid timeout value", timeout)
             return False, {}
 
         end_time = start_time + timeout
         if start_time > end_time:
-            print 'get_transceiver_change_event:' \
-                       'time wrap / invalid timeout value', timeout
+            print('get_transceiver_change_event:' \
+                       'time wrap / invalid timeout value', timeout)
 
             return False, {} # Time wrap or possibly incorrect timeout
 
@@ -182,5 +182,5 @@ class SfpUtil(SfpUtilBase):
                     if timeout > 0:
                         time.sleep(timeout)
                     return True, {}
-        print "get_evt_change_event: Should not reach here."
+        print("get_evt_change_event: Should not reach here.")
         return False, {}
diff --git a/platform/innovium/sonic-platform-modules-wistron/6512-32r/modules/Makefile b/platform/innovium/sonic-platform-modules-wistron/6512-32r/modules/Makefile
index 86a67f550..4e7a7e819 100644
--- a/platform/innovium/sonic-platform-modules-wistron/6512-32r/modules/Makefile
+++ b/platform/innovium/sonic-platform-modules-wistron/6512-32r/modules/Makefile
@@ -1,7 +1,7 @@
 ifneq ($(KERNELRELEASE),)
 obj-m:= wistron_6512_32r_cpld.o wistron_6512_32r_fan.o \
 		wistron_6512_32r_oom.o wistron_6512_32r_psu.o \
-		wistron_6512_32r_thermal.o \
+		wistron_6512_32r_thermal.o i2c-imc.o \
 		wistron_6512_32r_leds.o wistron_6512_32r_syseeprom.o
 else
 ifeq (,$(KERNEL_SRC))
diff --git a/platform/innovium/sonic-platform-modules-wistron/6512-32r/modules/wistron_6512_32r_cpld.c b/platform/innovium/sonic-platform-modules-wistron/6512-32r/modules/wistron_6512_32r_cpld.c
index a6c21966d..e66d95a52 100644
--- a/platform/innovium/sonic-platform-modules-wistron/6512-32r/modules/wistron_6512_32r_cpld.c
+++ b/platform/innovium/sonic-platform-modules-wistron/6512-32r/modules/wistron_6512_32r_cpld.c
@@ -37,6 +37,7 @@ struct wistron_cpld_data {
 	int              reset[PORT_NUM];
 	int              lpmod[PORT_NUM];
 	int              modsel[PORT_NUM];
+	int              data_rdy[PORT_NUM];
 };
 
 static const struct i2c_device_id wistron_cpld_id[] = {
@@ -51,6 +52,7 @@ MODULE_DEVICE_TABLE(i2c, wistron_cpld_id);
 #define TRANSCEIVER_RESET_ATTR_ID(index)	MODULE_RESET_##index
 #define TRANSCEIVER_LPMOD_ATTR_ID(index)	MODULE_LPMOD_##index
 #define TRANSCEIVER_MODSEL_ATTR_ID(index)	MODULE_MODSEL_##index
+#define TRANSCEIVER_DATA_RDY_ATTR_ID(index)	MODULE_DATA_RDY_##index
 
 enum wistron_cpld_sysfs_attributes {
 	/* chip version */
@@ -189,6 +191,38 @@ enum wistron_cpld_sysfs_attributes {
 	TRANSCEIVER_MODSEL_ATTR_ID(30),
 	TRANSCEIVER_MODSEL_ATTR_ID(31),
 	TRANSCEIVER_MODSEL_ATTR_ID(32),
+	TRANSCEIVER_DATA_RDY_ATTR_ID(1),
+	TRANSCEIVER_DATA_RDY_ATTR_ID(2),
+	TRANSCEIVER_DATA_RDY_ATTR_ID(3),
+	TRANSCEIVER_DATA_RDY_ATTR_ID(4),
+	TRANSCEIVER_DATA_RDY_ATTR_ID(5),
+	TRANSCEIVER_DATA_RDY_ATTR_ID(6),
+	TRANSCEIVER_DATA_RDY_ATTR_ID(7),
+	TRANSCEIVER_DATA_RDY_ATTR_ID(8),
+	TRANSCEIVER_DATA_RDY_ATTR_ID(9),
+	TRANSCEIVER_DATA_RDY_ATTR_ID(10),
+	TRANSCEIVER_DATA_RDY_ATTR_ID(11),
+	TRANSCEIVER_DATA_RDY_ATTR_ID(12),
+	TRANSCEIVER_DATA_RDY_ATTR_ID(13),
+	TRANSCEIVER_DATA_RDY_ATTR_ID(14),
+	TRANSCEIVER_DATA_RDY_ATTR_ID(15),
+	TRANSCEIVER_DATA_RDY_ATTR_ID(16),
+	TRANSCEIVER_DATA_RDY_ATTR_ID(17),
+	TRANSCEIVER_DATA_RDY_ATTR_ID(18),
+	TRANSCEIVER_DATA_RDY_ATTR_ID(19),
+	TRANSCEIVER_DATA_RDY_ATTR_ID(20),
+	TRANSCEIVER_DATA_RDY_ATTR_ID(21),
+	TRANSCEIVER_DATA_RDY_ATTR_ID(22),
+	TRANSCEIVER_DATA_RDY_ATTR_ID(23),
+	TRANSCEIVER_DATA_RDY_ATTR_ID(24),
+	TRANSCEIVER_DATA_RDY_ATTR_ID(25),
+	TRANSCEIVER_DATA_RDY_ATTR_ID(26),
+	TRANSCEIVER_DATA_RDY_ATTR_ID(27),
+	TRANSCEIVER_DATA_RDY_ATTR_ID(28),
+	TRANSCEIVER_DATA_RDY_ATTR_ID(29),
+	TRANSCEIVER_DATA_RDY_ATTR_ID(30),
+	TRANSCEIVER_DATA_RDY_ATTR_ID(31),
+	TRANSCEIVER_DATA_RDY_ATTR_ID(32),
 };
 
 /* sysfs attributes for hwmon */
@@ -204,6 +238,8 @@ static ssize_t get_mode_lpmod(struct device *dev, struct device_attribute *da, c
 static ssize_t set_mode_lpmod(struct device *dev, struct device_attribute *da, const char *buf, size_t count);
 static ssize_t get_mode_modsel(struct device *dev, struct device_attribute *da, char *buf);
 static ssize_t set_mode_modsel(struct device *dev, struct device_attribute *da, const char *buf, size_t count);
+static ssize_t get_mode_data_rdy(struct device *dev, struct device_attribute *da, char *buf);
+static ssize_t set_mode_data_rdy(struct device *dev, struct device_attribute *da, const char *buf, size_t count);
 
 /* version */
 static SENSOR_DEVICE_ATTR(version, S_IWUSR | S_IRUGO, get_version, set_version, CPLD_VERSION);
@@ -234,6 +270,10 @@ static SENSOR_DEVICE_ATTR(psu_led,  S_IWUSR | S_IRUGO, get_led_status, set_led_s
 	static SENSOR_DEVICE_ATTR(port##index##_modsel, S_IWUSR | S_IRUGO, get_mode_modsel, set_mode_modsel, MODULE_MODSEL_##index)
 #define DECLARE_TRANSCEIVER_MODSEL_ATTR(index)  &sensor_dev_attr_port##index##_modsel.dev_attr.attr
 
+#define DECLARE_TRANSCEIVER_SENSOR_DEVICE_DATA_RDY_ATTR(index) \
+	static SENSOR_DEVICE_ATTR(port##index##_data_rdy, S_IWUSR | S_IRUGO, get_mode_data_rdy, set_mode_data_rdy, MODULE_DATA_RDY_##index)
+#define DECLARE_TRANSCEIVER_DATA_RDY_ATTR(index)  &sensor_dev_attr_port##index##_data_rdy.dev_attr.attr
+
 /* transceiver attributes */
 DECLARE_TRANSCEIVER_PRESENT_SENSOR_DEVICE_ATTR(1);
 DECLARE_TRANSCEIVER_PRESENT_SENSOR_DEVICE_ATTR(2);
@@ -363,6 +403,38 @@ DECLARE_TRANSCEIVER_SENSOR_DEVICE_MODSEL_ATTR(29);
 DECLARE_TRANSCEIVER_SENSOR_DEVICE_MODSEL_ATTR(30);
 DECLARE_TRANSCEIVER_SENSOR_DEVICE_MODSEL_ATTR(31);
 DECLARE_TRANSCEIVER_SENSOR_DEVICE_MODSEL_ATTR(32);
+DECLARE_TRANSCEIVER_SENSOR_DEVICE_DATA_RDY_ATTR(1);
+DECLARE_TRANSCEIVER_SENSOR_DEVICE_DATA_RDY_ATTR(2);
+DECLARE_TRANSCEIVER_SENSOR_DEVICE_DATA_RDY_ATTR(3);
+DECLARE_TRANSCEIVER_SENSOR_DEVICE_DATA_RDY_ATTR(4);
+DECLARE_TRANSCEIVER_SENSOR_DEVICE_DATA_RDY_ATTR(5);
+DECLARE_TRANSCEIVER_SENSOR_DEVICE_DATA_RDY_ATTR(6);
+DECLARE_TRANSCEIVER_SENSOR_DEVICE_DATA_RDY_ATTR(7);
+DECLARE_TRANSCEIVER_SENSOR_DEVICE_DATA_RDY_ATTR(8);
+DECLARE_TRANSCEIVER_SENSOR_DEVICE_DATA_RDY_ATTR(9);
+DECLARE_TRANSCEIVER_SENSOR_DEVICE_DATA_RDY_ATTR(10);
+DECLARE_TRANSCEIVER_SENSOR_DEVICE_DATA_RDY_ATTR(11);
+DECLARE_TRANSCEIVER_SENSOR_DEVICE_DATA_RDY_ATTR(12);
+DECLARE_TRANSCEIVER_SENSOR_DEVICE_DATA_RDY_ATTR(13);
+DECLARE_TRANSCEIVER_SENSOR_DEVICE_DATA_RDY_ATTR(14);
+DECLARE_TRANSCEIVER_SENSOR_DEVICE_DATA_RDY_ATTR(15);
+DECLARE_TRANSCEIVER_SENSOR_DEVICE_DATA_RDY_ATTR(16);
+DECLARE_TRANSCEIVER_SENSOR_DEVICE_DATA_RDY_ATTR(17);
+DECLARE_TRANSCEIVER_SENSOR_DEVICE_DATA_RDY_ATTR(18);
+DECLARE_TRANSCEIVER_SENSOR_DEVICE_DATA_RDY_ATTR(19);
+DECLARE_TRANSCEIVER_SENSOR_DEVICE_DATA_RDY_ATTR(20);
+DECLARE_TRANSCEIVER_SENSOR_DEVICE_DATA_RDY_ATTR(21);
+DECLARE_TRANSCEIVER_SENSOR_DEVICE_DATA_RDY_ATTR(22);
+DECLARE_TRANSCEIVER_SENSOR_DEVICE_DATA_RDY_ATTR(23);
+DECLARE_TRANSCEIVER_SENSOR_DEVICE_DATA_RDY_ATTR(24);
+DECLARE_TRANSCEIVER_SENSOR_DEVICE_DATA_RDY_ATTR(25);
+DECLARE_TRANSCEIVER_SENSOR_DEVICE_DATA_RDY_ATTR(26);
+DECLARE_TRANSCEIVER_SENSOR_DEVICE_DATA_RDY_ATTR(27);
+DECLARE_TRANSCEIVER_SENSOR_DEVICE_DATA_RDY_ATTR(28);
+DECLARE_TRANSCEIVER_SENSOR_DEVICE_DATA_RDY_ATTR(29);
+DECLARE_TRANSCEIVER_SENSOR_DEVICE_DATA_RDY_ATTR(30);
+DECLARE_TRANSCEIVER_SENSOR_DEVICE_DATA_RDY_ATTR(31);
+DECLARE_TRANSCEIVER_SENSOR_DEVICE_DATA_RDY_ATTR(32);
 
 static struct attribute *wistron_fpga_attributes[] = {
 	&sensor_dev_attr_version.dev_attr.attr,
@@ -443,6 +515,22 @@ static struct attribute *wistron_cpld1_attributes[] = {
 	DECLARE_TRANSCEIVER_MODSEL_ATTR(14),
 	DECLARE_TRANSCEIVER_MODSEL_ATTR(15),
 	DECLARE_TRANSCEIVER_MODSEL_ATTR(16),
+	DECLARE_TRANSCEIVER_DATA_RDY_ATTR(1),
+	DECLARE_TRANSCEIVER_DATA_RDY_ATTR(2),
+	DECLARE_TRANSCEIVER_DATA_RDY_ATTR(3),
+	DECLARE_TRANSCEIVER_DATA_RDY_ATTR(4),
+	DECLARE_TRANSCEIVER_DATA_RDY_ATTR(5),
+	DECLARE_TRANSCEIVER_DATA_RDY_ATTR(6),
+	DECLARE_TRANSCEIVER_DATA_RDY_ATTR(7),
+	DECLARE_TRANSCEIVER_DATA_RDY_ATTR(8),
+	DECLARE_TRANSCEIVER_DATA_RDY_ATTR(9),
+	DECLARE_TRANSCEIVER_DATA_RDY_ATTR(10),
+	DECLARE_TRANSCEIVER_DATA_RDY_ATTR(11),
+	DECLARE_TRANSCEIVER_DATA_RDY_ATTR(12),
+	DECLARE_TRANSCEIVER_DATA_RDY_ATTR(13),
+	DECLARE_TRANSCEIVER_DATA_RDY_ATTR(14),
+	DECLARE_TRANSCEIVER_DATA_RDY_ATTR(15),
+	DECLARE_TRANSCEIVER_DATA_RDY_ATTR(16),
 	NULL
 };
 
@@ -516,6 +604,22 @@ static struct attribute *wistron_cpld2_attributes[] = {
 	DECLARE_TRANSCEIVER_MODSEL_ATTR(30),
 	DECLARE_TRANSCEIVER_MODSEL_ATTR(31),
 	DECLARE_TRANSCEIVER_MODSEL_ATTR(32),
+	DECLARE_TRANSCEIVER_DATA_RDY_ATTR(17),
+	DECLARE_TRANSCEIVER_DATA_RDY_ATTR(18),
+	DECLARE_TRANSCEIVER_DATA_RDY_ATTR(19),
+	DECLARE_TRANSCEIVER_DATA_RDY_ATTR(20),
+	DECLARE_TRANSCEIVER_DATA_RDY_ATTR(21),
+	DECLARE_TRANSCEIVER_DATA_RDY_ATTR(22),
+	DECLARE_TRANSCEIVER_DATA_RDY_ATTR(23),
+	DECLARE_TRANSCEIVER_DATA_RDY_ATTR(24),
+	DECLARE_TRANSCEIVER_DATA_RDY_ATTR(25),
+	DECLARE_TRANSCEIVER_DATA_RDY_ATTR(26),
+	DECLARE_TRANSCEIVER_DATA_RDY_ATTR(27),
+	DECLARE_TRANSCEIVER_DATA_RDY_ATTR(28),
+	DECLARE_TRANSCEIVER_DATA_RDY_ATTR(29),
+	DECLARE_TRANSCEIVER_DATA_RDY_ATTR(30),
+	DECLARE_TRANSCEIVER_DATA_RDY_ATTR(31),
+	DECLARE_TRANSCEIVER_DATA_RDY_ATTR(32),
 	NULL
 };
 
@@ -758,6 +862,43 @@ static ssize_t set_mode_modsel(struct device *dev, struct device_attribute *da,
 	return count;
 }
 
+static ssize_t get_mode_data_rdy(struct device *dev, struct device_attribute *da, char *buf)
+{
+	struct sensor_device_attribute  *attr = to_sensor_dev_attr(da);
+	struct i2c_client               *client = to_i2c_client(dev);
+	struct wistron_cpld_data    	*data = i2c_get_clientdata(client);
+	int                             update_idx, data_rdy = 0;
+
+	update_idx = attr->index - MODULE_DATA_RDY_1;
+
+	mutex_lock(&data->lock);
+	data_rdy = data->data_rdy[update_idx];
+	mutex_unlock(&data->lock);
+
+	return sprintf(buf, "%d", data_rdy);
+}
+
+static ssize_t set_mode_data_rdy(struct device *dev, struct device_attribute *da, const char *buf, size_t count)
+{
+	struct sensor_device_attribute  *attr = to_sensor_dev_attr(da);
+	struct i2c_client               *client = to_i2c_client(dev);
+	struct wistron_cpld_data     *data = i2c_get_clientdata(client);
+	int                             error, data_rdy;
+	int                             update_idx;
+
+	error = kstrtoint(buf, 10, &data_rdy);
+	if (error)
+		return error;
+
+	update_idx = attr->index - MODULE_DATA_RDY_1;
+
+	mutex_lock(&data->lock);
+	data->data_rdy[update_idx] = data_rdy;
+	mutex_unlock(&data->lock);
+
+	return count;
+}
+
 static void wistron_cpld_add_client(struct i2c_client *client)
 {
 	struct cpld_client_node *node = kzalloc(sizeof(struct cpld_client_node), GFP_KERNEL);
diff --git a/platform/innovium/sonic-platform-modules-wistron/6512-32r/modules/wistron_6512_32r_oom.c b/platform/innovium/sonic-platform-modules-wistron/6512-32r/modules/wistron_6512_32r_oom.c
index 423637349..f68dd2a1e 100644
--- a/platform/innovium/sonic-platform-modules-wistron/6512-32r/modules/wistron_6512_32r_oom.c
+++ b/platform/innovium/sonic-platform-modules-wistron/6512-32r/modules/wistron_6512_32r_oom.c
@@ -10,19 +10,69 @@
 #include <linux/delay.h>
 #include <linux/dmi.h>
 
-/* QSFP-DD: page0 (low page + high page (128+128 byte)), page 2 (high page (128 byte)), page11 (high page (128 byte))*/
+#define QSFP28_TYPE	0x11
+#define QSFP_DD_TYPE	0x18
+
+#define LOWER_PAGE_OFFSET	0x0
+#define PAGE0_OFFSET	0x80
+#define PAGE1_OFFSET	0x0
+#define PAGE2_OFFSET	0x80
+#define PAGE3_OFFSET	0x0
+#define PAGE10_OFFSET	0x80
+#define PAGE11_OFFSET	0x100
+
+#define QSFP_DD_CHAN_MON_OFFSET	0x1a
+#define QSFP_DD_TEMP_OFFSET	0xe
+#define QSFP_DD_VOLT_OFFSET	0x10
+#define QSFP_DD_RX_LOS_OFFSET	0x13
+#define QSFP_DD_TX_FAULT_OFFSET	0x7
+#define QSFP_DD_DISABLE_OFFSET	0x2
+#define QSFP_DD_POWER_MODE_OFFSET	0x1a
+
+#define QSFP_DD_GRID_OFFSET		128
+#define QSFP_DD_FREQ_OFFSET		136
+#define QSFP_DD_OUTP_OFFSET		200
+
+#define QSFP28_DOM_BULK_DATA_OFFSET	0x16
+#define QSFP28_RX_LOS_OFFSET	0x3
+#define QSFP28_TX_FAULT_OFFSET	0x4
+#define QSFP28_DISABLE_OFFSET	0x56
+#define QSFP28_POWER_MODE_OFFSET	0x5d
+
+
+/* QSFP-DD: page0 (low page + high page (128+128 byte)), page 1/2/3/10/11 (high page (128 byte))*/
 #define EEPROM_DATA_SIZE        256
+#define EEPROM3_DATA_SIZE        384
+#define EEPROM_ONE_PAGE_DATA_SIZE	128
 
 /* Addresses scanned */
 static const unsigned short normal_i2c[] = { I2C_CLIENT_END };
 #define MAX_PORT_NAME_LEN       20
+#define TEMP_DATA_SIZE	2
+#define VOLT_DATA_SIZE	2
+#define QSFP_DD_CHAN_MON_DATA_SIZE	0x30
+#define QSFP_DOM_BULK_DATA_SIZE	0x24
 
-enum sysfs_fan_attributes {
+enum sysfs_oom_attributes {
 	OOM_LP_MODE,
 	OOM_TEMP,
 	OOM_EEPROM1,
 	OOM_EEPROM2,
+	OOM_EEPROM3,
 	OOM_PORT_NAME,
+	OOM_TEMP_E,
+	OOM_VOLT_E,
+	OOM_QSFPDD_CHAN_MON,
+	OOM_QSFP_DOM_BULK,
+	OOM_CHAN_RX_LOS,
+	OOM_CHAN_TX_FAULT,
+	OOM_CHAN_DISABLE,
+	OOM_POWER_MODE,
+	OOM_EEPROM_PG4,
+	OOM_EEPROM_PG12,
+	OOM_GRID,
+	OOM_FREQ,
+	OOM_OUTPUT_POWER,
 	OOM_ATTR_MAX
 };
 
@@ -35,7 +85,23 @@ struct wistron_oom_data {
 	int             temp;
 	unsigned char   eeprom1[EEPROM_DATA_SIZE];
 	unsigned char   eeprom2[EEPROM_DATA_SIZE];
+	unsigned char   eeprom3[EEPROM3_DATA_SIZE];
 	char            port_name[MAX_PORT_NAME_LEN];
+
+	unsigned char	qsfp_dd_chan_mon[QSFP_DD_CHAN_MON_DATA_SIZE];
+	unsigned char	qsfp_dom_bulk[QSFP_DOM_BULK_DATA_SIZE];
+	unsigned char	tempe[TEMP_DATA_SIZE];
+	unsigned char	volte[VOLT_DATA_SIZE];
+	int				rx_los;
+	int				tx_fault;
+	int				disable;
+	int				power_mode;
+
+	unsigned char   eeprom_pg4[EEPROM_ONE_PAGE_DATA_SIZE];
+	unsigned char   eeprom_pg12[EEPROM_ONE_PAGE_DATA_SIZE];
+	int				grid;
+	int				freq;
+	int				outp;
 };
 
 /* sysfs attributes for hwmon */
@@ -45,20 +111,63 @@ static ssize_t get_oom_info1(struct device *dev, struct device_attribute *da, ch
 static ssize_t set_oom_info1(struct device *dev, struct device_attribute *da, const char *buf, size_t count);
 static ssize_t get_oom_info2(struct device *dev, struct device_attribute *da, char *buf);
 static ssize_t set_oom_info2(struct device *dev, struct device_attribute *da, const char *buf, size_t count);
+static ssize_t get_oom_info3(struct device *dev, struct device_attribute *da, char *buf);
+static ssize_t set_oom_info3(struct device *dev, struct device_attribute *da, const char *buf, size_t count);
 static ssize_t get_port_name(struct device *dev, struct device_attribute *da, char *buf);
 static ssize_t set_port_name(struct device *dev, struct device_attribute *da, const char *buf, size_t count);
+static ssize_t get_t_v_e(struct device *dev, struct device_attribute *da, char *buf);
+static ssize_t set_t_v_e(struct device *dev, struct device_attribute *da, const char *buf, size_t count);
+static ssize_t get_qsfp_dd_chan_mon(struct device *dev, struct device_attribute *da, char *buf);
+static ssize_t set_qsfp_dd_chan_mon(struct device *dev, struct device_attribute *da, const char *buf, size_t count);
+static ssize_t get_qsfp_dom_bulk(struct device *dev, struct device_attribute *da, char *buf);
+static ssize_t set_qsfp_dom_bulk(struct device *dev, struct device_attribute *da, const char *buf, size_t count);
+
+static ssize_t get_oom_info_one_page(struct device *dev, struct device_attribute *da, char *buf);
+static ssize_t set_oom_info_one_page(struct device *dev, struct device_attribute *da, const char *buf, size_t count);
+
+
 static SENSOR_DEVICE_ATTR(lp_mode, S_IWUSR | S_IRUGO, get_oom_value, set_oom_value, OOM_LP_MODE);
 static SENSOR_DEVICE_ATTR(temp, S_IWUSR | S_IRUGO, get_oom_value, set_oom_value, OOM_TEMP);
 static SENSOR_DEVICE_ATTR(eeprom1, S_IWUSR | S_IRUGO, get_oom_info1, set_oom_info1, OOM_EEPROM1);
 static SENSOR_DEVICE_ATTR(eeprom2, S_IWUSR | S_IRUGO, get_oom_info2, set_oom_info2, OOM_EEPROM2);
+static SENSOR_DEVICE_ATTR(eeprom3, S_IWUSR | S_IRUGO, get_oom_info3, set_oom_info3, OOM_EEPROM3);
 static SENSOR_DEVICE_ATTR(port_name, S_IRUGO | S_IWUSR, get_port_name, set_port_name, OOM_PORT_NAME);
+static SENSOR_DEVICE_ATTR(qsfp_dd_chan_mon, S_IWUSR | S_IRUGO, get_qsfp_dd_chan_mon, set_qsfp_dd_chan_mon, OOM_QSFPDD_CHAN_MON);
+static SENSOR_DEVICE_ATTR(qsfp_dom_bulk, S_IWUSR | S_IRUGO, get_qsfp_dom_bulk, set_qsfp_dom_bulk, OOM_QSFP_DOM_BULK);
+static SENSOR_DEVICE_ATTR(tempe, S_IWUSR | S_IRUGO, get_t_v_e, set_t_v_e, OOM_TEMP_E);
+static SENSOR_DEVICE_ATTR(volte, S_IWUSR | S_IRUGO, get_t_v_e, set_t_v_e, OOM_VOLT_E);
+static SENSOR_DEVICE_ATTR(rx_los, S_IWUSR | S_IRUGO, get_oom_value, set_oom_value, OOM_CHAN_RX_LOS);
+static SENSOR_DEVICE_ATTR(tx_fault, S_IWUSR | S_IRUGO, get_oom_value, set_oom_value, OOM_CHAN_TX_FAULT);
+static SENSOR_DEVICE_ATTR(disable, S_IWUSR | S_IRUGO, get_oom_value, set_oom_value, OOM_CHAN_DISABLE);
+static SENSOR_DEVICE_ATTR(power_mode, S_IWUSR | S_IRUGO, get_oom_value, set_oom_value, OOM_POWER_MODE);
+
+static SENSOR_DEVICE_ATTR(eeprom_pg4, S_IWUSR | S_IRUGO, get_oom_info_one_page, set_oom_info_one_page, OOM_EEPROM_PG4);
+static SENSOR_DEVICE_ATTR(eeprom_pg12, S_IWUSR | S_IRUGO, get_oom_info_one_page, set_oom_info_one_page, OOM_EEPROM_PG12);
+static SENSOR_DEVICE_ATTR(grid, S_IWUSR | S_IRUGO, get_oom_value, set_oom_value, OOM_GRID);
+static SENSOR_DEVICE_ATTR(freq, S_IWUSR | S_IRUGO, get_oom_value, set_oom_value, OOM_FREQ);
+static SENSOR_DEVICE_ATTR(output_power, S_IWUSR | S_IRUGO, get_oom_value, set_oom_value, OOM_OUTPUT_POWER);
 
 static struct attribute *wistron_oom_attributes[] = {
 	&sensor_dev_attr_lp_mode.dev_attr.attr,
 	&sensor_dev_attr_temp.dev_attr.attr,
 	&sensor_dev_attr_eeprom1.dev_attr.attr,
 	&sensor_dev_attr_eeprom2.dev_attr.attr,
+	&sensor_dev_attr_eeprom3.dev_attr.attr,
 	&sensor_dev_attr_port_name.dev_attr.attr,
+	&sensor_dev_attr_qsfp_dd_chan_mon.dev_attr.attr,
+	&sensor_dev_attr_qsfp_dom_bulk.dev_attr.attr,
+	&sensor_dev_attr_tempe.dev_attr.attr,
+	&sensor_dev_attr_volte.dev_attr.attr,
+	&sensor_dev_attr_rx_los.dev_attr.attr,
+	&sensor_dev_attr_tx_fault.dev_attr.attr,
+	&sensor_dev_attr_disable.dev_attr.attr,
+	&sensor_dev_attr_power_mode.dev_attr.attr,
+
+	&sensor_dev_attr_eeprom_pg4.dev_attr.attr,
+	&sensor_dev_attr_eeprom_pg12.dev_attr.attr,
+	&sensor_dev_attr_grid.dev_attr.attr,
+	&sensor_dev_attr_freq.dev_attr.attr,
+	&sensor_dev_attr_output_power.dev_attr.attr,
 	NULL
 };
 
@@ -70,10 +179,39 @@ static ssize_t get_oom_value(struct device *dev, struct device_attribute *da, ch
 	int                             value = 0;
 
 	mutex_lock(&data->lock);
-	if (attr->index == OOM_LP_MODE)
-		value = data->lp_mode;
-	else
-		value = data->temp;
+	switch (attr->index) {
+		case OOM_LP_MODE:
+			value = data->lp_mode;
+			break;
+		case OOM_TEMP:
+			value = data->temp;
+			break;
+		case OOM_CHAN_RX_LOS:
+			value = data->rx_los;
+			break;
+		case OOM_CHAN_TX_FAULT:
+			value = data->tx_fault;
+			break;
+		case OOM_CHAN_DISABLE:
+			value = data->disable;
+			break;
+		case OOM_POWER_MODE:
+			value = data->power_mode;
+			break;
+		case OOM_FREQ:
+			value = data->freq;
+			break;
+		case OOM_OUTPUT_POWER:
+			value = data->outp;
+			break;
+		case OOM_GRID:
+			value = data->grid;
+			break;
+		default:
+			value = data->temp;
+			break;
+
+	}
 
 	mutex_unlock(&data->lock);
 	return sprintf(buf, "%d", value);
@@ -93,15 +231,163 @@ static ssize_t set_oom_value(struct device *dev, struct device_attribute *da, co
 	}
 
 	mutex_lock(&data->lock);
-	if (attr->index == OOM_LP_MODE)
-		data->lp_mode = value;
-	else
-		data->temp = value;
+	switch (attr->index) {
+		case OOM_LP_MODE:
+			data->lp_mode = value;
+			break;
+		case OOM_TEMP:
+			data->temp = value;
+			break;
+		case OOM_CHAN_RX_LOS:
+			data->rx_los = value;
+			if (data->eeprom1[0] == QSFP_DD_TYPE)
+				data->eeprom3[PAGE11_OFFSET + QSFP_DD_RX_LOS_OFFSET] = value;
+			if (data->eeprom1[0] == QSFP28_TYPE)
+				data->eeprom1[LOWER_PAGE_OFFSET + QSFP28_RX_LOS_OFFSET] = value;
+			break;
+		case OOM_CHAN_TX_FAULT:
+			data->tx_fault = value;
+			if (data->eeprom1[0] == QSFP_DD_TYPE)
+				data->eeprom3[PAGE11_OFFSET + QSFP_DD_TX_FAULT_OFFSET] = value;
+			if (data->eeprom1[0] == QSFP28_TYPE)
+				data->eeprom1[LOWER_PAGE_OFFSET + QSFP28_TX_FAULT_OFFSET] = value;
+			break;
+		case OOM_CHAN_DISABLE:
+			data->disable = value;
+			if (data->eeprom1[0] == QSFP_DD_TYPE)
+				data->eeprom3[PAGE10_OFFSET + QSFP_DD_DISABLE_OFFSET] = value;
+			if (data->eeprom1[0] == QSFP28_TYPE)
+				data->eeprom1[LOWER_PAGE_OFFSET + QSFP28_DISABLE_OFFSET] = value;
+			break;
+		case OOM_POWER_MODE:
+			data->power_mode = value;
+			if (data->eeprom1[0] == QSFP_DD_TYPE)
+				data->eeprom1[LOWER_PAGE_OFFSET + QSFP_DD_POWER_MODE_OFFSET] = value;
+			if (data->eeprom1[0] == QSFP28_TYPE)
+				data->eeprom1[LOWER_PAGE_OFFSET + QSFP28_POWER_MODE_OFFSET] = value;
+			break;
+		case OOM_FREQ:
+			data->freq = value;
+			if (data->eeprom1[0] == QSFP_DD_TYPE) {
+				data->eeprom_pg12[QSFP_DD_FREQ_OFFSET - EEPROM_ONE_PAGE_DATA_SIZE] = (value & 0xff00) >> 8;
+				data->eeprom_pg12[QSFP_DD_FREQ_OFFSET - EEPROM_ONE_PAGE_DATA_SIZE + 1] = (value & 0xff);
+			}
+			break;
+		case OOM_OUTPUT_POWER:
+			data->outp = value;
+			if (data->eeprom1[0] == QSFP_DD_TYPE) {
+				data->eeprom_pg12[QSFP_DD_OUTP_OFFSET - EEPROM_ONE_PAGE_DATA_SIZE] = (value & 0xff00) >> 8;
+				data->eeprom_pg12[QSFP_DD_OUTP_OFFSET - EEPROM_ONE_PAGE_DATA_SIZE + 1] = (value & 0xff);
+			}
+			break;
+		case OOM_GRID:
+			data->grid = value;
+			if (data->eeprom1[0] == QSFP_DD_TYPE) {
+				data->eeprom_pg12[QSFP_DD_GRID_OFFSET - EEPROM_ONE_PAGE_DATA_SIZE] = value;
+			}
+			break;
+		default:
+			data->temp = value;
+			break;
+	}
 
 	mutex_unlock(&data->lock);
 	return count;
 }
 
+static ssize_t get_oom_info_one_page(struct device *dev, struct device_attribute *da, char *buf)
+{
+    struct sensor_device_attribute  *attr = to_sensor_dev_attr(da);
+    struct i2c_client               *client = to_i2c_client(dev);
+    struct wistron_oom_data	        *data = i2c_get_clientdata(client);
+
+    mutex_lock(&data->lock);
+    switch (attr->index)
+    {
+        case OOM_EEPROM_PG4:
+        {
+            memcpy(buf, data->eeprom_pg4, EEPROM_ONE_PAGE_DATA_SIZE);
+            break;
+        }
+        case OOM_EEPROM_PG12:
+        {
+            memcpy(buf, data->eeprom_pg12, EEPROM_ONE_PAGE_DATA_SIZE);
+            break;
+        }
+	}
+    mutex_unlock(&data->lock);
+    return EEPROM_ONE_PAGE_DATA_SIZE;
+}
+
+static ssize_t set_oom_info_one_page(struct device *dev, struct device_attribute *da, const char *buf, size_t size)
+{
+    struct sensor_device_attribute  *attr = to_sensor_dev_attr(da);
+    struct i2c_client               *client = to_i2c_client(dev);
+    struct wistron_oom_data         *data = i2c_get_clientdata(client);
+    int                             i=0, j=0, k=0;
+    unsigned char                   str[3];
+    unsigned int                    val;
+
+    k=0;
+    mutex_lock(&data->lock);
+    memzero_explicit(str, sizeof(str));
+    if (strlen(buf) >= EEPROM_ONE_PAGE_DATA_SIZE)
+    {
+        for (i=0; i < strlen(buf) ; i++)
+        {
+            for (j=0;j<2; j++)
+            {
+                str[j]=buf[i+j];
+            }
+            sscanf(str, "%x", &val);
+            i=j+i-1;
+            if (k>=EEPROM_ONE_PAGE_DATA_SIZE)
+            {
+                break;
+            }
+
+            switch (attr->index)
+            {
+                case OOM_EEPROM_PG4:
+                {
+                    data->eeprom_pg4[k]=(unsigned char)val;
+                    break;
+                }
+                case OOM_EEPROM_PG12:
+                {
+                    data->eeprom_pg12[k]=(unsigned char)val;
+                    break;
+                }
+                default:
+                    break;
+            }
+
+            k++;
+        }
+    }
+    else
+    {
+        switch (attr->index)
+        {
+            case OOM_EEPROM_PG4:
+            {
+                memzero_explicit(&data->eeprom_pg4, sizeof(data->eeprom_pg4));
+                break;
+            }
+            case OOM_EEPROM_PG12:
+            {
+                memzero_explicit(&data->eeprom_pg12, sizeof(data->eeprom_pg12));
+                break;
+            }
+            default:
+                break;
+        }
+    }
+
+    mutex_unlock(&data->lock);
+    return size;
+}
+
 static ssize_t get_oom_info1(struct device *dev, struct device_attribute *da, char *buf)
 {
 	struct i2c_client           *client = to_i2c_client(dev);
@@ -123,8 +409,8 @@ static ssize_t set_oom_info1(struct device *dev, struct device_attribute *da, co
 	unsigned int                val;
 
 	mutex_lock(&data->lock);
-	memset(data->eeprom1, 0xFF, EEPROM_DATA_SIZE);
-	memset(str, 0x0, 3);
+	memzero_explicit(data->eeprom1, EEPROM_DATA_SIZE);
+	memzero_explicit(str, sizeof(str));
 
 	if (strlen(buf) >= EEPROM_DATA_SIZE) {
 		for (i=0; i < strlen(buf) ; i++) {
@@ -170,8 +456,8 @@ static ssize_t set_oom_info2(struct device *dev, struct device_attribute *da, co
 	unsigned int                val;
 
 	mutex_lock(&data->lock);
-	memset(data->eeprom2, 0xFF, EEPROM_DATA_SIZE);
-	memset(str, 0x0, 3);
+	memzero_explicit(data->eeprom2, EEPROM_DATA_SIZE);
+	memzero_explicit(str, sizeof(str));
 
 	if (strlen(buf) >= EEPROM_DATA_SIZE) {
 		for (i = 0; i < strlen(buf) ; i++) {
@@ -195,6 +481,52 @@ static ssize_t set_oom_info2(struct device *dev, struct device_attribute *da, co
 	return size;
 }
 
+static ssize_t get_oom_info3(struct device *dev, struct device_attribute *da, char *buf)
+{
+	struct i2c_client           *client = to_i2c_client(dev);
+	struct wistron_oom_data  	*data = i2c_get_clientdata(client);
+
+	mutex_lock(&data->lock);
+	memcpy(buf, data->eeprom3, EEPROM3_DATA_SIZE);
+	mutex_unlock(&data->lock);
+
+	return EEPROM3_DATA_SIZE;
+}
+
+static ssize_t set_oom_info3(struct device *dev, struct device_attribute *da, const char *buf, size_t size)
+{
+	struct i2c_client           *client = to_i2c_client(dev);
+	struct wistron_oom_data  	*data = i2c_get_clientdata(client);
+	int                         i = 0, j = 0, k = 0;
+	unsigned char               str[3];
+	unsigned int                val;
+
+	mutex_lock(&data->lock);
+	memzero_explicit(data->eeprom3, EEPROM3_DATA_SIZE);
+	memzero_explicit(str, sizeof(str));
+
+	if (strlen(buf) >= EEPROM3_DATA_SIZE) {
+		for (i = 0; i < strlen(buf) ; i++) {
+			for (j = 0; j < 2; j++) {
+				str[j] = buf[i + j];
+			}
+
+			sscanf(str, "%x", &val);
+
+			i = j + i - 1;
+			if (k >= EEPROM3_DATA_SIZE)
+				break;
+
+			data->eeprom3[k]=(unsigned char)val;
+			k++;
+		}
+	}
+
+	mutex_unlock(&data->lock);
+
+	return size;
+}
+
 static ssize_t get_port_name(struct device *dev, struct device_attribute *da, char *buf)
 {
 	struct i2c_client           *client = to_i2c_client(dev);
@@ -224,6 +556,191 @@ static ssize_t set_port_name(struct device *dev, struct device_attribute *da, co
 	return count;
 }
 
+static ssize_t get_t_v_e(struct device *dev, struct device_attribute *da, char *buf)
+{
+	struct sensor_device_attribute  *attr = to_sensor_dev_attr(da);
+	struct i2c_client           *client = to_i2c_client(dev);
+	struct wistron_oom_data  	*data = i2c_get_clientdata(client);
+
+	mutex_lock(&data->lock);
+	if (attr->index == OOM_TEMP_E)
+		memcpy(buf, data->tempe, TEMP_DATA_SIZE);
+	else
+		memcpy(buf, data->volte, VOLT_DATA_SIZE);
+	mutex_unlock(&data->lock);
+
+	return (attr->index == OOM_TEMP_E) ? TEMP_DATA_SIZE : VOLT_DATA_SIZE;
+}
+
+static ssize_t set_t_v_e(struct device *dev, struct device_attribute *da, const char *buf, size_t size)
+{
+	struct sensor_device_attribute  *attr = to_sensor_dev_attr(da);
+	struct i2c_client           *client = to_i2c_client(dev);
+	struct wistron_oom_data  	*data = i2c_get_clientdata(client);
+	int                         i = 0, j = 0, k = 0;
+	unsigned char               str[3];
+	unsigned int                val;
+
+	mutex_lock(&data->lock);
+	if (attr->index == OOM_TEMP_E) {
+		memzero_explicit(data->tempe, TEMP_DATA_SIZE);
+		memzero_explicit(str, sizeof(str));
+
+		if (strlen(buf) >= TEMP_DATA_SIZE) {
+			for (i = 0; i < strlen(buf) ; i++) {
+				for (j = 0; j < 2; j++) {
+					str[j] = buf[i + j];
+				}
+
+				sscanf(str, "%x", &val);
+
+				i = j + i - 1;
+				if (k >= TEMP_DATA_SIZE)
+					break;
+
+				data->tempe[k]=(unsigned char)val;
+
+				if (k == 0)
+					data->temp = data->tempe[k];
+				k++;
+			}
+		}
+
+		if (data->eeprom1[0] == QSFP_DD_TYPE)
+			memcpy(&data->eeprom1[LOWER_PAGE_OFFSET + QSFP_DD_TEMP_OFFSET], data->tempe, TEMP_DATA_SIZE);
+	}
+	else {
+		memzero_explicit(data->volte, VOLT_DATA_SIZE);
+		memzero_explicit(str, sizeof(str));
+
+		if (strlen(buf) >= VOLT_DATA_SIZE) {
+			for (i = 0; i < strlen(buf) ; i++) {
+				for (j = 0; j < 2; j++) {
+					str[j] = buf[i + j];
+				}
+
+				sscanf(str, "%x", &val);
+
+				i = j + i - 1;
+				if (k >= VOLT_DATA_SIZE)
+					break;
+
+				data->volte[k]=(unsigned char)val;
+				k++;
+			}
+		}
+
+		if (data->eeprom1[0] == QSFP_DD_TYPE)
+			memcpy(&data->eeprom1[LOWER_PAGE_OFFSET + QSFP_DD_VOLT_OFFSET], data->volte, VOLT_DATA_SIZE);
+	}
+
+	mutex_unlock(&data->lock);
+
+	return size;
+}
+
+static ssize_t get_qsfp_dd_chan_mon(struct device *dev, struct device_attribute *da, char *buf)
+{
+	struct i2c_client           *client = to_i2c_client(dev);
+	struct wistron_oom_data  	*data = i2c_get_clientdata(client);
+
+	mutex_lock(&data->lock);
+	memcpy(buf, data->qsfp_dd_chan_mon, QSFP_DD_CHAN_MON_DATA_SIZE);
+	mutex_unlock(&data->lock);
+
+	return QSFP_DD_CHAN_MON_DATA_SIZE;
+}
+
+static ssize_t set_qsfp_dd_chan_mon(struct device *dev, struct device_attribute *da, const char *buf, size_t size)
+{
+	struct i2c_client           *client = to_i2c_client(dev);
+	struct wistron_oom_data  	*data = i2c_get_clientdata(client);
+	int                         i = 0, j = 0, k = 0;
+	unsigned char               str[3];
+	unsigned int                val;
+
+	mutex_lock(&data->lock);
+	memzero_explicit(data->qsfp_dd_chan_mon, QSFP_DD_CHAN_MON_DATA_SIZE);
+	memzero_explicit(str, sizeof(str));
+
+	if (strlen(buf) >= QSFP_DD_CHAN_MON_DATA_SIZE) {
+		for (i=0; i < strlen(buf) ; i++) {
+			for (j = 0; j < 2; j++) {
+				str[j] = buf[i + j];
+			}
+
+			sscanf(str, "%x", &val);
+
+			i = j + i - 1;
+
+			if (k >= QSFP_DD_CHAN_MON_DATA_SIZE)
+				break;
+
+			data->qsfp_dd_chan_mon[k] = (unsigned char)val;
+			k++;
+		}
+	}
+
+	if (data->eeprom1[0] == QSFP_DD_TYPE)
+		memcpy(&data->eeprom3[PAGE11_OFFSET + QSFP_DD_CHAN_MON_OFFSET], data->qsfp_dd_chan_mon, QSFP_DD_CHAN_MON_DATA_SIZE);
+
+	mutex_unlock(&data->lock);
+
+	return size;
+}
+
+static ssize_t get_qsfp_dom_bulk(struct device *dev, struct device_attribute *da, char *buf)
+{
+	struct i2c_client           *client = to_i2c_client(dev);
+	struct wistron_oom_data  	*data = i2c_get_clientdata(client);
+
+	mutex_lock(&data->lock);
+	memcpy(buf, data->qsfp_dom_bulk, QSFP_DOM_BULK_DATA_SIZE);
+	mutex_unlock(&data->lock);
+
+	return QSFP_DOM_BULK_DATA_SIZE;
+}
+
+static ssize_t set_qsfp_dom_bulk(struct device *dev, struct device_attribute *da, const char *buf, size_t size)
+{
+	struct i2c_client           *client = to_i2c_client(dev);
+	struct wistron_oom_data  	*data = i2c_get_clientdata(client);
+	int                         i = 0, j = 0, k = 0;
+	unsigned char               str[3];
+	unsigned int                val;
+
+	mutex_lock(&data->lock);
+	memzero_explicit(data->qsfp_dom_bulk, QSFP_DOM_BULK_DATA_SIZE);
+	memzero_explicit(str, sizeof(str));
+
+	if (strlen(buf) >= QSFP_DOM_BULK_DATA_SIZE) {
+		for (i=0; i < strlen(buf) ; i++) {
+			for (j = 0; j < 2; j++) {
+				str[j] = buf[i + j];
+			}
+
+			sscanf(str, "%x", &val);
+
+			i = j + i - 1;
+
+			if (k >= QSFP_DOM_BULK_DATA_SIZE)
+				break;
+
+			data->qsfp_dom_bulk[k] = (unsigned char)val;
+			k++;
+		}
+	}
+
+	if (data->eeprom1[0] == QSFP28_TYPE) {
+		memcpy(&data->eeprom1[LOWER_PAGE_OFFSET + QSFP28_DOM_BULK_DATA_OFFSET], data->qsfp_dom_bulk, QSFP_DOM_BULK_DATA_SIZE);
+		data->temp = data->qsfp_dom_bulk[0];
+	}
+
+	mutex_unlock(&data->lock);
+
+	return size;
+}
+
 static const struct attribute_group wistron_oom_group = {
 	.attrs = wistron_oom_attributes,
 };
diff --git a/platform/innovium/sonic-platform-modules-wistron/6512-32r/modules/wistron_6512_32r_psu.c b/platform/innovium/sonic-platform-modules-wistron/6512-32r/modules/wistron_6512_32r_psu.c
index 1ea7764dd..fa48e9ce5 100644
--- a/platform/innovium/sonic-platform-modules-wistron/6512-32r/modules/wistron_6512_32r_psu.c
+++ b/platform/innovium/sonic-platform-modules-wistron/6512-32r/modules/wistron_6512_32r_psu.c
@@ -21,6 +21,7 @@ static const unsigned short normal_i2c[] = { I2C_CLIENT_END };
 #define MFR_VENDOR_NAME_LENGTH	16
 #define MFR_MODEL_NAME_LENGTH	16
 #define MFR_SERIAL_NUM_LENGTH	32
+#define MFR_REV_LENGTH	10
 
 /* Each client has this additional data */
 struct wistron_psu_data {
@@ -33,13 +34,15 @@ struct wistron_psu_data {
 	int              v_out;
 	int              i_in;
 	int              i_out;
-	int              p_in;
-	int              p_out;
+	long             p_in;
+	long             p_out;
 	int              temp_input;
+	int              pwm;
 	int              fault;
 	u8               mfr_id[MFR_VENDOR_NAME_LENGTH];
 	u8               mfr_model[MFR_MODEL_NAME_LENGTH];
 	u8               mfr_serial[MFR_SERIAL_NUM_LENGTH];
+	u8               mfr_rev[MFR_REV_LENGTH];
 };
 
 enum psu_index {
@@ -57,10 +60,12 @@ enum wistron_psu_sysfs_attributes {
 	PSU_P_IN,
 	PSU_P_OUT,
 	PSU_TEMP1_INPUT,
+	PSU_PWM,
 	PSU_FAULT,
 	PSU_MFR_ID,
 	PSU_MFR_MODEL,
 	PSU_MFR_SERIAL,
+	PSU_MFR_REV,
 };
 
 /* sysfs attributes for hwmon */
@@ -73,10 +78,12 @@ static SENSOR_DEVICE_ATTR(curr2_input,   S_IWUSR | S_IRUGO, get_value,  set_valu
 static SENSOR_DEVICE_ATTR(power1_input,  S_IWUSR | S_IRUGO, get_value,  set_value, PSU_P_IN);
 static SENSOR_DEVICE_ATTR(power2_input,  S_IWUSR | S_IRUGO, get_value,  set_value, PSU_P_OUT);
 static SENSOR_DEVICE_ATTR(temp1_input,   S_IWUSR | S_IRUGO, get_value,  set_value, PSU_TEMP1_INPUT);
+static SENSOR_DEVICE_ATTR(pwm,   S_IWUSR | S_IRUGO, get_value,  set_value, PSU_PWM);
 static SENSOR_DEVICE_ATTR(fault,		 S_IWUSR | S_IRUGO, get_value,  set_value, PSU_FAULT);
 static SENSOR_DEVICE_ATTR(vendor,        S_IWUSR | S_IRUGO, get_value,  set_value, PSU_MFR_ID);
 static SENSOR_DEVICE_ATTR(model,     	 S_IWUSR | S_IRUGO, get_value,  set_value, PSU_MFR_MODEL);
 static SENSOR_DEVICE_ATTR(sn,   		 S_IWUSR | S_IRUGO, get_value,  set_value, PSU_MFR_SERIAL);
+static SENSOR_DEVICE_ATTR(rev,   		 S_IWUSR | S_IRUGO, get_value,  set_value, PSU_MFR_REV);
 
 
 static struct attribute *wistron_psu_attributes[] = {
@@ -89,10 +96,12 @@ static struct attribute *wistron_psu_attributes[] = {
 	&sensor_dev_attr_power1_input.dev_attr.attr,
 	&sensor_dev_attr_power2_input.dev_attr.attr,
 	&sensor_dev_attr_temp1_input.dev_attr.attr,
+	&sensor_dev_attr_pwm.dev_attr.attr,
 	&sensor_dev_attr_fault.dev_attr.attr,
 	&sensor_dev_attr_vendor.dev_attr.attr,
 	&sensor_dev_attr_model.dev_attr.attr,
 	&sensor_dev_attr_sn.dev_attr.attr,
+	&sensor_dev_attr_rev.dev_attr.attr,
 	NULL
 };
 
@@ -162,14 +171,17 @@ static ssize_t get_value(struct device *dev, struct device_attribute *da, char *
 			ret_count = sprintf(buf, "%d", data->i_out);
 			break;
 		case PSU_P_IN:
-			ret_count = sprintf(buf, "%d", data->p_in);
+			ret_count = sprintf(buf, "%ld", data->p_in);
 			break;
 		case PSU_P_OUT:
-			ret_count = sprintf(buf, "%d", data->p_out);
+			ret_count = sprintf(buf, "%ld", data->p_out);
 			break;
 		case PSU_TEMP1_INPUT:
 			ret_count = sprintf(buf, "%d", data->temp_input);
 			break;
+		case PSU_PWM:
+			ret_count = sprintf(buf, "%d", data->pwm);
+			break;
 		case PSU_FAULT:
 			ret_count = sprintf(buf, "%d", data->fault);
 			break;
@@ -182,6 +194,9 @@ static ssize_t get_value(struct device *dev, struct device_attribute *da, char *
 		case PSU_MFR_SERIAL:
 			ret_count = sprintf(buf, "%s", data->mfr_serial);
 			break;
+		case PSU_MFR_REV:
+			ret_count = sprintf(buf, "%s", data->mfr_rev);
+			break;
 		default:
 			break;
 	}
@@ -222,12 +237,12 @@ static ssize_t set_value(struct device *dev, struct device_attribute *da, const
 				goto exit_err;
 			break;
 		case PSU_P_IN:
-			error = kstrtoint(buf, 10, &data->p_in);
+			error = kstrtol(buf, 10, &data->p_in);
 			if (error)
 				goto exit_err;
 			break;
 		case PSU_P_OUT:
-			error = kstrtoint(buf, 10, &data->p_out);
+			error = kstrtol(buf, 10, &data->p_out);
 			if (error)
 				goto exit_err;
 			break;
@@ -236,23 +251,32 @@ static ssize_t set_value(struct device *dev, struct device_attribute *da, const
 			if (error)
 				goto exit_err;
 			break;
+		case PSU_PWM:
+			error = kstrtoint(buf, 10, &data->pwm);
+			if (error)
+				goto exit_err;
+			break;
 		case PSU_FAULT:
 			error = kstrtoint(buf, 10, &data->fault);
 			if (error)
 				goto exit_err;
 			break;
 		case PSU_MFR_ID:
-			memset(&data->mfr_id, 0x0, sizeof(data->mfr_id));
+			memzero_explicit(&data->mfr_id, sizeof(data->mfr_id));
 			strncpy(data->mfr_id, buf, sizeof(data->mfr_id) - 1);
 			break;
 		case PSU_MFR_MODEL:
-			memset(&data->mfr_model, 0x0, sizeof(data->mfr_model));
+			memzero_explicit(&data->mfr_model, sizeof(data->mfr_model));
 			strncpy(data->mfr_model, buf, sizeof(data->mfr_model) - 1);
 			break;
 		case PSU_MFR_SERIAL:
-			memset(&data->mfr_serial, 0x0, sizeof(data->mfr_serial));
+			memzero_explicit(&data->mfr_serial, sizeof(data->mfr_serial));
 			strncpy(data->mfr_serial, buf, sizeof(data->mfr_serial) - 1);
 			break;
+		case PSU_MFR_REV:
+			memzero_explicit(&data->mfr_rev, sizeof(data->mfr_rev));
+			strncpy(data->mfr_rev, buf, sizeof(data->mfr_rev) - 1);
+			break;
 		default:
 			break;
 	}
diff --git a/platform/innovium/sonic-platform-modules-wistron/6512-32r/modules/wistron_6512_32r_syseeprom.c b/platform/innovium/sonic-platform-modules-wistron/6512-32r/modules/wistron_6512_32r_syseeprom.c
index a281df719..578aa3c1d 100644
--- a/platform/innovium/sonic-platform-modules-wistron/6512-32r/modules/wistron_6512_32r_syseeprom.c
+++ b/platform/innovium/sonic-platform-modules-wistron/6512-32r/modules/wistron_6512_32r_syseeprom.c
@@ -43,8 +43,8 @@ static ssize_t set_syseeprom(struct device *dev, struct device_attribute *da, co
 	unsigned int val;
 
 	mutex_lock(&data->lock);
-	memset(data->eeprom, 0xFF, EEPROM_DATA_SIZE);
-	memset(str, 0x0, 3);
+	memzero_explicit(data->eeprom, EEPROM_DATA_SIZE);
+	memzero_explicit(str, sizeof(str));
 
 	if (strlen(buf) >= EEPROM_DATA_SIZE) {
 		for (i = 0; i < strlen(buf) ; i++) {
diff --git a/platform/innovium/sonic-platform-modules-wistron/6512-32r/service/6512-32r-platform.service b/platform/innovium/sonic-platform-modules-wistron/6512-32r/service/6512-32r-platform.service
index 1842d036c..ab8effcc4 100644
--- a/platform/innovium/sonic-platform-modules-wistron/6512-32r/service/6512-32r-platform.service
+++ b/platform/innovium/sonic-platform-modules-wistron/6512-32r/service/6512-32r-platform.service
@@ -1,7 +1,6 @@
 [Unit]
 Description=Wistron 6512-32R Platform Monitoring service
-Before=pmon.service
-After=sysinit.target
+After=platform-modules-6512-32r.service
 DefaultDependencies=no
 
 [Service]
diff --git a/platform/innovium/sonic-platform-modules-wistron/6512-32r/setup.py b/platform/innovium/sonic-platform-modules-wistron/6512-32r/setup.py
index 3c2888412..3b92de8c1 100644
--- a/platform/innovium/sonic-platform-modules-wistron/6512-32r/setup.py
+++ b/platform/innovium/sonic-platform-modules-wistron/6512-32r/setup.py
@@ -1,7 +1,5 @@
 from setuptools import setup
 
-DEVICE_NAME = 'wistron'
-HW_SKU = 'x86_64-wistron_6512_32r-r0'
 
 setup(
     name='sonic-platform',
@@ -16,9 +14,8 @@ setup(
     packages=[
         'sonic_platform',
     ],
-    package_dir={
-        'sonic_platform': '../../../../device/{}/{}/sonic_platform'.format(DEVICE_NAME, HW_SKU)},
-    classifiers=[
+   package_dir={'sonic_platform': 'sonic_platform'},
+   classifiers=[
         'Development Status :: 3 - Alpha',
         'Environment :: Plugins',
         'Intended Audience :: Developers',
diff --git a/platform/innovium/sonic-platform-modules-wistron/6512-32r/utils/platform_sync b/platform/innovium/sonic-platform-modules-wistron/6512-32r/utils/platform_sync
index 9c357e7ac..071339cac 100644
--- a/platform/innovium/sonic-platform-modules-wistron/6512-32r/utils/platform_sync
+++ b/platform/innovium/sonic-platform-modules-wistron/6512-32r/utils/platform_sync
@@ -3,5 +3,7 @@
 /usr/local/bin/sonic-led-monitor &
 /usr/local/bin/sonic-qsfp-monitor &
 /usr/local/bin/sonic-psu-monitor &
+/usr/local/bin/sonic-qsfp-eeprom-monitor &
+/usr/local/bin/sonic-send-temp-to-bmc &
 exit 0
 
diff --git a/platform/innovium/sonic-platform-modules-wistron/6512-32r/utils/platform_syseeprom b/platform/innovium/sonic-platform-modules-wistron/6512-32r/utils/platform_syseeprom
index 2db0a921c..4a19db909 100644
--- a/platform/innovium/sonic-platform-modules-wistron/6512-32r/utils/platform_syseeprom
+++ b/platform/innovium/sonic-platform-modules-wistron/6512-32r/utils/platform_syseeprom
@@ -1,10 +1,15 @@
 #!/bin/bash
-eeprom_part1=$(ipmitool raw 0x30 0x25 0x00 0xaa 0x80 0x0 2>>/dev/null)
-eeprom_part2=$(ipmitool raw 0x30 0x25 0x00 0xaa 0x80 0x80 2>>/dev/null)
-eeprom1_full=$eeprom_part1$eeprom_part2
-eeprom1_full=$(echo $eeprom1_full | sed 's/[[:space:]]//g')
-eeprom1_path="/sys/bus/i2c/devices/0-0055/eeprom"
-eeprom1_full=$(echo $eeprom1_full | sed -e 's/ //g')
-echo $eeprom1_full > $eeprom1_path
+board_ver=$(i2cget -f -y 0 0x55 0x0 1>/dev/null 2>/dev/null; echo $?)
+
+if [ $board_ver != 0 ]; then
+	eeprom_part1=$(ipmitool raw 0x30 0x25 0x00 0xaa 0x80 0x0 2>>/dev/null)
+	eeprom_part2=$(ipmitool raw 0x30 0x25 0x00 0xaa 0x80 0x80 2>>/dev/null)
+	eeprom1_full=$eeprom_part1$eeprom_part2
+	eeprom1_full=$(echo $eeprom1_full | sed 's/[[:space:]]//g')
+	eeprom1_path="/sys/bus/i2c/devices/0-0055/eeprom"
+	eeprom1_full=$(echo $eeprom1_full | sed -e 's/ //g')
+	echo $eeprom1_full > $eeprom1_path
+fi
+
 exit 0
 
diff --git a/platform/innovium/sonic-platform-modules-wistron/6512-32r/utils/sonic-psu-monitor b/platform/innovium/sonic-platform-modules-wistron/6512-32r/utils/sonic-psu-monitor
index 180456f6a..291e3f85c 100644
--- a/platform/innovium/sonic-platform-modules-wistron/6512-32r/utils/sonic-psu-monitor
+++ b/platform/innovium/sonic-platform-modules-wistron/6512-32r/utils/sonic-psu-monitor
@@ -44,13 +44,8 @@ add_byte(){
 # string_read [start byte] [length]
 string_read(){
 	value=""
-	len=$(echo $val | awk '{print $'"$1"'}')
-	byte_hex_test $len
-	if [ $? -eq 0 ]; then
-		return 0
-	fi
-	len=$(printf "%d" 0x$len)
-	s=$(($1 + 1))
+	len=$2
+	s=$(($1))
 	e=$(($1 + len - 1))
 	for i in $(seq $s $e)
 	do
@@ -74,120 +69,160 @@ get_PSU_information()
 {
 	val=$(ipmitool raw 0x30 0x89 2>>/dev/null)
 	if [ -e /sys/bus/i2c/devices/0-005a/vendor ] && [ -e /sys/bus/i2c/devices/0-0059/vendor ];then
-		#PSU1 Vin
-		add_byte 1 2
-		if [ $? -eq 1 ];then
-			value=$(($value * 10))
-			echo $value > /sys/bus/i2c/devices/0-005a/in1_input
-		fi
-		#PSU2 Vin
-		add_byte 3 4
-		if [ $? -eq 1 ];then
-			value=$(($value * 10))
-			echo $value > /sys/bus/i2c/devices/0-0059/in1_input
-		fi
-		#PSU 1 Vout
-		add_byte 5 6
-		if [ $? -eq 1 ];then
-			value=$(($value * 10))
-			echo $value > /sys/bus/i2c/devices/0-005a/in2_input
-		fi
-		#PSU 2 Vout
-		add_byte 7 8
-		if [ $? -eq 1 ];then
-			value=$(($value * 10))
-			echo $value > /sys/bus/i2c/devices/0-0059/in2_input
-		fi
-		#PSU 1 Iin
-		add_byte 9 10
-		if [ $? -eq 1 ];then
-			value=$(($value * 10))
-			echo $value > /sys/bus/i2c/devices/0-005a/curr1_input
-		fi
-		#PSU 2 Iin
-		add_byte 11 12
-		if [ $? -eq 1 ];then
-			value=$(($value * 10))
-			echo $value > /sys/bus/i2c/devices/0-0059/curr1_input
-		fi
-		#PSU 1 Iout
-		add_byte 13 14
-		if [ $? -eq 1 ];then
-			value=$(($value * 10))
-			echo $value > /sys/bus/i2c/devices/0-005a/curr2_input
-		fi
-		#PSU 2 Iout
-		add_byte 15 16
-		if [ $? -eq 1 ];then
-			value=$(($value * 10))
-			echo $value > /sys/bus/i2c/devices/0-0059/curr2_input
-		fi
-		#PSU 1 Pin
-		add_byte 17 18
-		if [ $? -eq 1 ];then
-			value=$(($value * 1000000))
-			echo $value > /sys/bus/i2c/devices/0-005a/power1_input
-		fi
-		#PSU 2 Pin
-		add_byte 19 20
-		if [ $? -eq 1 ];then
-			value=$(($value * 1000000))
-			echo $value > /sys/bus/i2c/devices/0-0059/power1_input
-		fi
-		#PSU 1 Pout
-		add_byte 21 22
-		if [ $? -eq 1 ];then
-			value=$(($value * 1000000))
-			echo $value > /sys/bus/i2c/devices/0-005a/power2_input
-		fi
-		#PSU 2 Pout
-		add_byte 23 24
-		if [ $? -eq 1 ];then
-			value=$(($value * 1000000))
-			echo $value > /sys/bus/i2c/devices/0-0059/power2_input
-		fi
-		#PSU 1 Temp1
-		byte_read 25
-		if [ $? -eq 1 ];then
-			value=$(($value * 1000))
-			echo $value > /sys/bus/i2c/devices/0-005a/temp1_input
-		fi
-		#PSU 2 Temp1
-		byte_read 26
-		if [ $? -eq 1 ];then
-			value=$(($value * 1000))
-			echo $value > /sys/bus/i2c/devices/0-0059/temp1_input
-		fi
 
 		byte_read 31
 		if [ $? -eq 1 ];then
 			echo $value > /sys/bus/i2c/devices/0-005a/present
+			psu1_present=$value
+		fi
+
+		if [ $psu1_present -eq 1 ]; then
+			#PSU1 Vin
+			add_byte 1 2
+			if [ $? -eq 1 ];then
+				value=$(($value * 10))
+				echo $value > /sys/bus/i2c/devices/0-005a/in1_input
+			fi
+			#PSU 1 Vout
+			add_byte 5 6
+			if [ $? -eq 1 ];then
+				value=$(($value * 10))
+				echo $value > /sys/bus/i2c/devices/0-005a/in2_input
+			fi
+			#PSU 1 Iin
+			add_byte 9 10
+			if [ $? -eq 1 ];then
+				value=$(($value * 10))
+				echo $value > /sys/bus/i2c/devices/0-005a/curr1_input
+			fi
+			#PSU 1 Iout
+			add_byte 13 14
+			if [ $? -eq 1 ];then
+				value=$(($value * 10))
+				echo $value > /sys/bus/i2c/devices/0-005a/curr2_input
+			fi
+			#PSU 1 Pin
+			add_byte 17 18
+			if [ $? -eq 1 ];then
+				value=$(($value * 1000000))
+				echo $value > /sys/bus/i2c/devices/0-005a/power1_input
+			fi
+			#PSU 1 Pout
+			add_byte 21 22
+			if [ $? -eq 1 ];then
+				value=$(($value * 1000000))
+				echo $value > /sys/bus/i2c/devices/0-005a/power2_input
+			fi
+			#PSU 1 Temp1
+			byte_read 25
+			if [ $? -eq 1 ];then
+				value=$(($value * 1000))
+				echo $value > /sys/bus/i2c/devices/0-005a/temp1_input
+			fi
+
+			byte_read 33
+			if [ $? -eq 1 ];then
+				echo $value > /sys/bus/i2c/devices/0-005a/power_good
+			fi
+
+			add_byte 35 36
+			if [ $? -eq 1 ];then
+				echo $value > /sys/bus/i2c/devices/0-005a/fault
+			fi
+
+			byte_read 41
+			if [ $? -eq 1 ];then
+				echo $value > /sys/bus/i2c/devices/0-005a/pwm
+			fi
+		else
+			echo 0 > /sys/bus/i2c/devices/0-005a/in1_input
+			echo 0 > /sys/bus/i2c/devices/0-005a/in2_input
+			echo 0 > /sys/bus/i2c/devices/0-005a/curr1_input
+			echo 0 > /sys/bus/i2c/devices/0-005a/curr2_input
+			echo 0 > /sys/bus/i2c/devices/0-005a/power1_input
+			echo 0 > /sys/bus/i2c/devices/0-005a/power2_input
+			echo 0 > /sys/bus/i2c/devices/0-005a/temp1_input
+			echo 0 > /sys/bus/i2c/devices/0-005a/power_good
+			echo 0 > /sys/bus/i2c/devices/0-005a/fault
+			echo 0 > /sys/bus/i2c/devices/0-005a/pwm
 		fi
 
 		byte_read 32
 		if [ $? -eq 1 ];then
 			echo $value > /sys/bus/i2c/devices/0-0059/present
+			psu2_present=$value
 		fi
 
-		#PSU 1 2 PSU power good
-		byte_read 33
-		if [ $? -eq 1 ];then
-			echo $value > /sys/bus/i2c/devices/0-005a/power_good
-		fi
+		if [ $psu2_present -eq 1 ]; then
+			#PSU2 Vin
+			add_byte 3 4
+			if [ $? -eq 1 ];then
+				value=$(($value * 10))
+				echo $value > /sys/bus/i2c/devices/0-0059/in1_input
+			fi
+			#PSU 2 Vout
+			add_byte 7 8
+			if [ $? -eq 1 ];then
+				value=$(($value * 10))
+				echo $value > /sys/bus/i2c/devices/0-0059/in2_input
+			fi
+			#PSU 2 Iin
+			add_byte 11 12
+			if [ $? -eq 1 ];then
+				value=$(($value * 10))
+				echo $value > /sys/bus/i2c/devices/0-0059/curr1_input
+			fi
+			#PSU 2 Iout
+			add_byte 15 16
+			if [ $? -eq 1 ];then
+				value=$(($value * 10))
+				echo $value > /sys/bus/i2c/devices/0-0059/curr2_input
+			fi
+			#PSU 2 Pin
+			add_byte 19 20
+			if [ $? -eq 1 ];then
+				value=$(($value * 1000000))
+				echo $value > /sys/bus/i2c/devices/0-0059/power1_input
+			fi
+			#PSU 2 Pout
+			add_byte 23 24
+			if [ $? -eq 1 ];then
+				value=$(($value * 1000000))
+				echo $value > /sys/bus/i2c/devices/0-0059/power2_input
+			fi
+			#PSU 2 Temp1
+			byte_read 26
+			if [ $? -eq 1 ];then
+				value=$(($value * 1000))
+				echo $value > /sys/bus/i2c/devices/0-0059/temp1_input
+			fi
 
-		byte_read 34
-		if [ $? -eq 1 ];then
-			echo $value > /sys/bus/i2c/devices/0-0059/power_good
-		fi
+			#PSU 1 2 PSU power good
+			byte_read 34
+			if [ $? -eq 1 ];then
+				echo $value > /sys/bus/i2c/devices/0-0059/power_good
+			fi
 
-		add_byte 35 36
-		if [ $? -eq 1 ];then
-			echo $value > /sys/bus/i2c/devices/0-005a/fault
-		fi
+			add_byte 37 38
+			if [ $? -eq 1 ];then
+				echo $value > /sys/bus/i2c/devices/0-0059/fault
+			fi
 
-		add_byte 37 38
-		if [ $? -eq 1 ];then
-			echo $value > /sys/bus/i2c/devices/0-0059/fault
+			byte_read 42
+			if [ $? -eq 1 ];then
+				echo $value > /sys/bus/i2c/devices/0-0059/pwm
+			fi
+		else
+			echo 0 > /sys/bus/i2c/devices/0-0059/in1_input
+			echo 0 > /sys/bus/i2c/devices/0-0059/in2_input
+			echo 0 > /sys/bus/i2c/devices/0-0059/curr1_input
+			echo 0 > /sys/bus/i2c/devices/0-0059/curr2_input
+			echo 0 > /sys/bus/i2c/devices/0-0059/power1_input
+			echo 0 > /sys/bus/i2c/devices/0-0059/power2_input
+			echo 0 > /sys/bus/i2c/devices/0-0059/temp1_input
+			echo 0 > /sys/bus/i2c/devices/0-0059/power_good
+			echo 0 > /sys/bus/i2c/devices/0-0059/fault
+			echo 0 > /sys/bus/i2c/devices/0-0059/pwm
 		fi
 	fi
 
@@ -195,35 +230,60 @@ get_PSU_information()
 
 	val=$(ipmitool raw 0x30 0x8a 2>>/dev/null)
 	if [ -e /sys/bus/i2c/devices/0-005a/vendor ] && [ -e /sys/bus/i2c/devices/0-0059/vendor ];then
-		#PSU1 mfr_ID
-		string_read 1
-		if [ $? -eq 1 ];then
-			echo $value > /sys/bus/i2c/devices/0-005a/vendor
-		fi
-		#PSU2 mfr_ID
-		string_read 21
-		if [ $? -eq 1 ];then
-			echo $value > /sys/bus/i2c/devices/0-0059/vendor
-		fi
-		#PSU1 mfr_model
-		string_read 41
-		if [ $? -eq 1 ];then
-			echo $value > /sys/bus/i2c/devices/0-005a/model
-		fi
-		#PSU2 mfr_model
-		string_read 61
-		if [ $? -eq 1 ];then
-			echo $value > /sys/bus/i2c/devices/0-0059/model
-		fi
-		#PSU1 mfr_serial
-		string_read 81
-		if [ $? -eq 1 ];then
-			echo $value > /sys/bus/i2c/devices/0-005a/sn
+		if [ $psu1_present -eq 1 ]; then
+			#PSU1 mfr_ID
+			string_read 1 20
+			if [ $? -eq 1 ];then
+				echo $value > /sys/bus/i2c/devices/0-005a/vendor
+			fi
+			#PSU1 mfr_model
+			string_read 41 20
+			if [ $? -eq 1 ];then
+				echo $value > /sys/bus/i2c/devices/0-005a/model
+			fi
+			#PSU1 mfr_serial
+			string_read 81 30
+			if [ $? -eq 1 ];then
+				echo $value > /sys/bus/i2c/devices/0-005a/sn
+			fi
+			#PSU1 mfr_rev
+			string_read 141 2
+			if [ $? -eq 1 ];then
+				echo $value > /sys/bus/i2c/devices/0-005a/rev
+			fi
+		else
+			echo "" > /sys/bus/i2c/devices/0-005a/vendor
+			echo "" > /sys/bus/i2c/devices/0-005a/model
+			echo "" > /sys/bus/i2c/devices/0-005a/sn
+			echo "" > /sys/bus/i2c/devices/0-005a/rev
 		fi
-		#PSU1 mfr_serial
-		string_read 111
-		if [ $? -eq 1 ];then
-			echo $value > /sys/bus/i2c/devices/0-0059/sn
+		if [ $psu2_present -eq 1 ]; then
+			#PSU2 mfr_ID
+			string_read 21 20
+			if [ $? -eq 1 ];then
+				echo $value > /sys/bus/i2c/devices/0-0059/vendor
+			fi
+			#PSU2 mfr_model
+			string_read 61 20
+			if [ $? -eq 1 ];then
+				echo $value > /sys/bus/i2c/devices/0-0059/model
+			fi
+			#PSU2 mfr_serial
+			string_read 111 30
+			if [ $? -eq 1 ];then
+				echo $value > /sys/bus/i2c/devices/0-0059/sn
+			fi
+
+			#PSU2 mfr_serial
+			string_read 143 2
+			if [ $? -eq 1 ];then
+				echo $value > /sys/bus/i2c/devices/0-0059/rev
+			fi
+		else
+			echo "" > /sys/bus/i2c/devices/0-0059/vendor
+			echo "" > /sys/bus/i2c/devices/0-0059/model
+			echo "" > /sys/bus/i2c/devices/0-0059/sn
+			echo "" > /sys/bus/i2c/devices/0-0059/rev
 		fi
 	fi
 }
diff --git a/platform/innovium/sonic-platform-modules-wistron/6512-32r/utils/sonic-qsfp-monitor b/platform/innovium/sonic-platform-modules-wistron/6512-32r/utils/sonic-qsfp-monitor
index 645b85288..f2eb92834 100644
--- a/platform/innovium/sonic-platform-modules-wistron/6512-32r/utils/sonic-qsfp-monitor
+++ b/platform/innovium/sonic-platform-modules-wistron/6512-32r/utils/sonic-qsfp-monitor
@@ -1,7 +1,7 @@
 #!/bin/bash
 
-debug_flag=0
-port_map=('00' '10' '11' '12' '13' '14' '15' '16' '17' '18' '19' '1a' '1b' '1c' '1d' '1e' '1f' '20' '21' '22' '23' '24' '25' '26' '27' '28' '29' '2a' '2b' '2c' '2d' '2e' '2f')
+board_ver=$(ipmitool raw 0x30 0x25 0x1 0xe0 0x1 0x0 1>/dev/null 2>/dev/null; echo $?) #error will get 1 means EVT, otherwise DVT
+
 port_1_8_presence=0
 port_9_16_presence=0
 port_17_24_presence=0
@@ -10,6 +10,14 @@ port_1_8_reset=0
 port_9_16_reset=0
 port_17_24_reset=0
 port_25_32_reset=0
+port_1_8_lpmode=0
+port_9_16_lpmode=0
+port_17_24_lpmode=0
+port_25_32_lpmode=0
+port_1_8_modsel=0
+port_9_16_modsel=0
+port_17_24_modsel=0
+port_25_32_modsel=0
 
 result=0
 pre_port_1_8_reset=256
@@ -25,6 +33,8 @@ pre_port_9_16_modsel=256
 pre_port_17_24_modsel=256
 pre_port_25_32_modsel=256
 
+port_pre_present=(0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0)
+
 byte_hex_test()
 {
 	if ! [[ $1  =~ ^[0-9A-Fa-f]{2}$ ]] ; then
@@ -34,405 +44,517 @@ byte_hex_test()
 	fi
 }
 
-#$1=mux $2=channel $3=dev_addr, $4=reg, $5=val
-bmc_write()
-{
-	addr_8b=$(echo $(($3)) | awk '{printf $1}')
-	addr_8b=`expr $addr_8b \\* 2`
-	ipmitool raw 0x30 0x85 $1 $2 $addr_8b 2 $4 $5 1>>/dev/null 2>>/dev/null
-	sleep 1
-	ipmitool raw 0x30 0x87 1>>/dev/null 2>>/dev/null
-}
-
-#$1=mux $2=channel $3=dev_addr, $4=reg, $5=len
-bmc_read()
+bmc_read_low_speed_signal_status()
 {
-	addr_8b=$(echo $(($3)) | awk '{printf $1}')
-	addr_8b=`expr $addr_8b \\* 2`
-	ipmitool raw 0x30 0x86 $1 $2 $addr_8b $5 $4 1>>/dev/null 2>>/dev/null
-	sleep 1
-	val=$(ipmitool raw 0x30 0x87 2>>/dev/null)
-	if [ $? -eq 0 ];then
-		result=$val
-		return 1
-	else
+	val=$(ipmitool raw 0x30 0x8d 2>/dev/null);
+	if [ $? -ne 0 ];then
 		return 0
 	fi
-}
 
-bmc_qsfp_lpmode_write()
-{
+	port_1_8_presence=$(echo $val | awk '{printf $1}')
+	byte_hex_test $port_1_8_presence
+	if [ $? -eq 0 ]; then
+		return 0
+	fi
+	port_1_8_presence=$( printf "%d" 0x$port_1_8_presence )
 
-	cpld_path="/sys/bus/i2c/devices/0-0006/"
-	val=0
-	for i in $(seq 1 8);
-	do
-		lpmode_path=$cpld_path"port"$i"_lpmode"
-		lpmode_input=$(cat $lpmode_path | awk '{printf $1}')
-		val=$((val | (lpmode_input << ($i - 1))))
-	done
-	if [ $val -ne $pre_port_1_8_lpmode ]; then
-		ipmitool raw 0x30 0x25 0x00 0x0c 0x0 0x50 $val 1>>/dev/null 2>>/dev/null
-		sleep 0.05
-		pre_port_1_8_lpmode=$val
+	port_9_16_presence=$(echo $val | awk '{printf $2}')
+	byte_hex_test $port_9_16_presence
+	if [ $? -eq 0 ]; then
+		return 0
 	fi
-	val=0
-	for i in $(seq 9 16);
-	do
-		lpmode_path=$cpld_path"port"$i"_lpmode"
-		lpmode_input=$(cat $lpmode_path | awk '{printf $1}')
-		val=$((val | (lpmode_input << ($i - 9))))
-	done
+	port_9_16_presence=$( printf "%d" 0x$port_9_16_presence )
 
-	if [ $val -ne $pre_port_9_16_lpmode ]; then
-		ipmitool raw 0x30 0x25 0x00 0x0c 0x0 0x51 $val 1>>/dev/null 2>>/dev/null
-		sleep 0.05
-		pre_port_9_16_lpmode=$val
+	port_17_24_presence=$(echo $val | awk '{printf $9}')
+	byte_hex_test $port_17_24_presence
+	if [ $? -eq 0 ]; then
+		return 0
 	fi
+	port_17_24_presence=$( printf "%d" 0x$port_17_24_presence )
 
-	cpld_path="/sys/bus/i2c/devices/0-0007/"
-	val=0
-	for i in $(seq 17 24);
-	do
-		lpmode_path=$cpld_path"port"$i"_lpmode"
-		lpmode_input=$(cat $lpmode_path | awk '{printf $1}')
-		val=$((val | (lpmode_input << ($i - 17))))
-	done
+	port_25_32_presence=$(echo $val | awk '{printf $10}')
+	byte_hex_test $port_25_32_presence
+	if [ $? -eq 0 ]; then
+		return 0
+	fi
+	port_25_32_presence=$( printf "%d" 0x$port_25_32_presence )
 
-	if [ $val -ne $pre_port_17_24_lpmode ]; then
-		ipmitool raw 0x30 0x25 0x00 0x0e 0x0 0x50 $val 1>>/dev/null 2>>/dev/null
-		sleep 0.05
-		pre_port_17_24_lpmode=$val
+	port_1_8_reset=$(echo $val | awk '{printf $3}')
+	byte_hex_test $port_1_8_reset
+	if [ $? -eq 0 ]; then
+		return 0
 	fi
-	val=0
-	for i in $(seq 25 32);
-	do
-		lpmode_path=$cpld_path"port"$i"_lpmode"
-		lpmode_input=$(cat $lpmode_path | awk '{printf $1}')
-		val=$((val | (lpmode_input << ($i - 25))))
-	done
+	port_1_8_reset=$( printf "%d" 0x$port_1_8_reset )
 
-	if [ $val -ne $pre_port_25_32_lpmode ]; then
-		ipmitool raw 0x30 0x25 0x00 0x0e 0x0 0x51 $val 1>>/dev/null 2>>/dev/null
-		sleep 0.05
-		pre_port_25_32_lpmode=$val
+	port_9_16_reset=$(echo $val | awk '{printf $4}')
+	byte_hex_test $port_9_16_reset
+	if [ $? -eq 0 ]; then
+		return 0
 	fi
+	port_9_16_reset=$( printf "%d" 0x$port_9_16_reset )
 
+	port_17_24_reset=$(echo $val | awk '{printf $11}')
+	byte_hex_test $port_17_24_reset
+	if [ $? -eq 0 ]; then
+		return 0
+	fi
+	port_17_24_reset=$( printf "%d" 0x$port_17_24_reset )
 
-	return 0
-}
+	port_25_32_reset=$(echo $val | awk '{printf $12}')
+	byte_hex_test $port_25_32_reset
+	if [ $? -eq 0 ]; then
+		return 0
+	fi
+	port_25_32_reset=$( printf "%d" 0x$port_25_32_reset )
 
-bmc_qsfp_modsel_write()
-{
+	port_1_8_lpmode=$(echo $val | awk '{printf $5}')
+	byte_hex_test $port_1_8_lpmode
+	if [ $? -eq 0 ]; then
+		return 0
+	fi
+	port_1_8_lpmode=$( printf "%d" 0x$port_1_8_lpmode )
 
-	cpld_path="/sys/bus/i2c/devices/0-0006/"
-	val=0
-	for i in $(seq 1 8);
-	do
-		modsel_path=$cpld_path"port"$i"_modsel"
-		modsel_input=$(cat $modsel_path | awk '{printf $1}')
-		val=$((val | (modsel_input << ($i - 1))))
-	done
+	port_9_16_lpmode=$(echo $val | awk '{printf $6}')
+	byte_hex_test $port_9_16_lpmode
+	if [ $? -eq 0 ]; then
+		return 0
+	fi
+	port_9_16_lpmode=$( printf "%d" 0x$port_9_16_lpmode )
 
-	val=$((0xff - val))
-	if [ $val -ne $pre_port_1_8_modsel ]; then
-		ipmitool raw 0x30 0x25 0x00 0x0c 0x0 0x60 $val 1>>/dev/null 2>>/dev/null
-		sleep 0.05
-		pre_port_1_8_modsel=$val
+	port_17_24_lpmode=$(echo $val | awk '{printf $13}')
+	byte_hex_test $port_17_24_lpmode
+	if [ $? -eq 0 ]; then
+		return 0
 	fi
-	val=0
-	for i in $(seq 9 16);
-	do
-		modsel_path=$cpld_path"port"$i"_modsel"
-		modsel_input=$(cat $modsel_path | awk '{printf $1}')
-		val=$((val | (modsel_input << ($i - 9))))
-	done
+	port_17_24_lpmode=$( printf "%d" 0x$port_17_24_lpmode )
 
-	val=$((0xff - val))
-	if [ $val -ne $pre_port_9_16_modsel ]; then
-		ipmitool raw 0x30 0x25 0x00 0x0c 0x0 0x61 $val 1>>/dev/null 2>>/dev/null
-		sleep 0.05
-		pre_port_9_16_modsel=$val
+	port_25_32_lpmode=$(echo $val | awk '{printf $14}')
+	byte_hex_test $port_25_32_lpmode
+	if [ $? -eq 0 ]; then
+		return 0
 	fi
+	port_25_32_lpmode=$( printf "%d" 0x$port_25_32_lpmode )
 
-	cpld_path="/sys/bus/i2c/devices/0-0007/"
-	val=0
-	for i in $(seq 17 24);
-	do
-		modsel_path=$cpld_path"port"$i"_modsel"
-		modsel_input=$(cat $modsel_path | awk '{printf $1}')
-		val=$((val | (modsel_input << ($i - 17))))
-	done
+	port_1_8_modsel=$(echo $val | awk '{printf $7}')
+	byte_hex_test $port_1_8_modsel
+	if [ $? -eq 0 ]; then
+		return 0
+	fi
+	port_1_8_modsel=$( printf "%d" 0x$port_1_8_modsel )
 
-	val=$((0xff - val))
-	if [ $val -ne $pre_port_17_24_modsel ]; then
-		ipmitool raw 0x30 0x25 0x00 0x0e 0x0 0x60 $val 1>>/dev/null 2>>/dev/null
-		sleep 0.05
-		pre_port_17_24_modsel=$val
+	port_9_16_modsel=$(echo $val | awk '{printf $8}')
+	byte_hex_test $port_9_16_modsel
+	if [ $? -eq 0 ]; then
+		return 0
 	fi
-	val=0
-	for i in $(seq 25 32);
-	do
-		modsel_path=$cpld_path"port"$i"_modsel"
-		modsel_input=$(cat $modsel_path | awk '{printf $1}')
-		val=$((val | (modsel_input << ($i - 25))))
-	done
+	port_9_16_modsel=$( printf "%d" 0x$port_9_16_modsel )
 
-	val=$((0xff - val))
-	if [ $val -ne $pre_port_25_32_modsel ]; then
-		ipmitool raw 0x30 0x25 0x00 0x0e 0x0 0x61 $val 1>>/dev/null 2>>/dev/null
-		sleep 0.05
-		pre_port_25_32_modsel=$val
+	port_17_24_modsel=$(echo $val | awk '{printf $15}')
+	byte_hex_test $port_17_24_modsel
+	if [ $? -eq 0 ]; then
+		return 0
 	fi
+	port_17_24_modsel=$( printf "%d" 0x$port_17_24_modsel )
 
+	port_25_32_modsel=$(echo $val | awk '{printf $16}')
+	byte_hex_test $port_25_32_modsel
+	if [ $? -eq 0 ]; then
+		return 0
+	fi
+	port_25_32_modsel=$( printf "%d" 0x$port_25_32_modsel )
 
-	return 0
+	return 1
 }
 
-bmc_qsfp_presence_read()
+bmc_qsfp_lpmode_write()
 {
-	a=0
-	tmp1=$(ipmitool raw 0x30 0x25 0x00 0x0c 0x1 0x30 2>>/dev/null)
-	a=$((a+$?))
-	tmp1=$(echo $tmp1 | awk '{printf $1}')
-	sleep 0.05
-	tmp2=$(ipmitool raw 0x30 0x25 0x00 0x0c 0x1 0x31 2>>/dev/null)
-	a=$((a+$?))
-	tmp2=$(echo $tmp2 | awk '{printf $1}')
-	sleep 0.05
-	tmp3=$(ipmitool raw 0x30 0x25 0x00 0x0e 0x1 0x30 2>>/dev/null)
-	a=$((a+$?))
-	tmp3=$(echo $tmp3 | awk '{printf $1}')
-	sleep 0.05
-	tmp4=$(ipmitool raw 0x30 0x25 0x00 0x0e 0x1 0x31 2>>/dev/null)
-	a=$((a+$?))
-	tmp4=$(echo $tmp4 | awk '{printf $1}')
-	sleep 0.05
-	if [ $a -eq 0 ];then
-		byte_hex_test $tmp1
-		if [ $? -eq 0 ]; then
-			return 0
+
+	if [ $board_ver == 1 ]; then
+		cpld_path="/sys/bus/i2c/devices/0-0006/"
+		val=0
+		for i in $(seq 1 8);
+		do
+			lpmode_path=$cpld_path"port"$i"_lpmode"
+			lpmode_input=$(cat $lpmode_path | awk '{printf $1}')
+			val=$((val | (lpmode_input << ($i - 1))))
+		done
+		if [ $val -ne $pre_port_1_8_lpmode ]; then
+			ipmitool raw 0x30 0x25 0x00 0x0c 0x0 0x50 $val 1>>/dev/null 2>>/dev/null
+			sleep 0.05
+			pre_port_1_8_lpmode=$val
 		fi
-		port_1_8_presence=$( printf "%d" 0x$tmp1 )
-		byte_hex_test $tmp2
-		if [ $? -eq 0 ]; then
-			return 0
+		val=0
+		for i in $(seq 9 16);
+		do
+			lpmode_path=$cpld_path"port"$i"_lpmode"
+			lpmode_input=$(cat $lpmode_path | awk '{printf $1}')
+			val=$((val | (lpmode_input << ($i - 9))))
+		done
+
+		if [ $val -ne $pre_port_9_16_lpmode ]; then
+			ipmitool raw 0x30 0x25 0x00 0x0c 0x0 0x51 $val 1>>/dev/null 2>>/dev/null
+			sleep 0.05
+			pre_port_9_16_lpmode=$val
 		fi
-		port_9_16_presence=$( printf "%d" 0x$tmp2 )
-		byte_hex_test $tmp3
-		if [ $? -eq 0 ]; then
-			return 0
+
+		cpld_path="/sys/bus/i2c/devices/0-0007/"
+		val=0
+		for i in $(seq 17 24);
+		do
+			lpmode_path=$cpld_path"port"$i"_lpmode"
+			lpmode_input=$(cat $lpmode_path | awk '{printf $1}')
+			val=$((val | (lpmode_input << ($i - 17))))
+		done
+
+		if [ $val -ne $pre_port_17_24_lpmode ]; then
+			ipmitool raw 0x30 0x25 0x00 0x0e 0x0 0x50 $val 1>>/dev/null 2>>/dev/null
+			sleep 0.05
+			pre_port_17_24_lpmode=$val
 		fi
-		port_17_24_presence=$( printf "%d" 0x$tmp3 )
-		byte_hex_test $tmp4
-		if [ $? -eq 0 ]; then
-			return 0
+		val=0
+		for i in $(seq 25 32);
+		do
+			lpmode_path=$cpld_path"port"$i"_lpmode"
+			lpmode_input=$(cat $lpmode_path | awk '{printf $1}')
+			val=$((val | (lpmode_input << ($i - 25))))
+		done
+
+		if [ $val -ne $pre_port_25_32_lpmode ]; then
+			ipmitool raw 0x30 0x25 0x00 0x0e 0x0 0x51 $val 1>>/dev/null 2>>/dev/null
+			sleep 0.05
+			pre_port_25_32_lpmode=$val
 		fi
-		port_25_32_presence=$( printf "%d" 0x$tmp4 )
-		return 1
+
+	else
+		cpld_path="/sys/bus/i2c/devices/0-0006/"
+		val=0
+		for i in $(seq 1 8);
+		do
+			lpmode_path=$cpld_path"port"$i"_lpmode"
+			lpmode_input=$(cat $lpmode_path | awk '{printf $1}')
+			val=$((val | (lpmode_input << ($i - 1))))
+		done
+		val2=0
+		for i in $(seq 9 16);
+		do
+			lpmode_path=$cpld_path"port"$i"_lpmode"
+			lpmode_input=$(cat $lpmode_path | awk '{printf $1}')
+			val2=$((val2 | (lpmode_input << ($i - 9))))
+		done
+
+		if [ $val -ne $port_1_8_lpmode ] || [ $val2 -ne $port_9_16_lpmode ]; then
+			ipmitool raw 0x30 0x8c 0x0 0x1 $val $val2 1>>/dev/null 2>>/dev/null
+		fi
+
+		cpld_path="/sys/bus/i2c/devices/0-0007/"
+		val=0
+		for i in $(seq 17 24);
+		do
+			lpmode_path=$cpld_path"port"$i"_lpmode"
+			lpmode_input=$(cat $lpmode_path | awk '{printf $1}')
+			val=$((val | (lpmode_input << ($i - 17))))
+		done
+
+		val2=0
+		for i in $(seq 25 32);
+		do
+			lpmode_path=$cpld_path"port"$i"_lpmode"
+			lpmode_input=$(cat $lpmode_path | awk '{printf $1}')
+			val2=$((val2 | (lpmode_input << ($i - 25))))
+		done
+
+		if [ $val -ne $port_17_24_lpmode ] || [ $val2 -ne $port_25_32_lpmode ]; then
+			ipmitool raw 0x30 0x8c 0x1 0x1 $val $val2 1>>/dev/null 2>>/dev/null
+		fi
+
 	fi
 
 	return 0
 }
 
-bmc_qsfp_reset_write()
+bmc_qsfp_modsel_write()
 {
 
-	cpld_path="/sys/bus/i2c/devices/0-0006/"
-	val=0
-	for i in $(seq 1 8);
-	do
-		reset_path=$cpld_path"port"$i"_reset"
-		reset_input=$(cat $reset_path | awk '{printf $1}')
-		val=$((val | (reset_input << ($i - 1))))
-	done
+	if [ $board_ver == 1 ]; then
+		cpld_path="/sys/bus/i2c/devices/0-0006/"
+		val=0
+		for i in $(seq 1 8);
+		do
+			modsel_path=$cpld_path"port"$i"_modsel"
+			modsel_input=$(cat $modsel_path | awk '{printf $1}')
+			val=$((val | (modsel_input << ($i - 1))))
+		done
 
-	val=$((0xff - val))
-	if [ $val -ne $pre_port_1_8_reset ]; then
-		ipmitool raw 0x30 0x25 0x00 0x0c 0x0 0x20 $val 1>>/dev/null 2>>/dev/null
-		sleep 0.05
-		pre_port_1_8_reset=$val
-	fi
-	val=0
-	for i in $(seq 9 16);
-	do
-		reset_path=$cpld_path"port"$i"_reset"
-		reset_input=$(cat $reset_path | awk '{printf $1}')
-		val=$((val | (reset_input << ($i - 9))))
-	done
+		val=$((0xff - val))
+		if [ $val -ne $pre_port_1_8_modsel ]; then
+			ipmitool raw 0x30 0x25 0x00 0x0c 0x0 0x60 $val 1>>/dev/null 2>>/dev/null
+			sleep 0.05
+			pre_port_1_8_modsel=$val
+		fi
+		val=0
+		for i in $(seq 9 16);
+		do
+			modsel_path=$cpld_path"port"$i"_modsel"
+			modsel_input=$(cat $modsel_path | awk '{printf $1}')
+			val=$((val | (modsel_input << ($i - 9))))
+		done
 
-	val=$((0xff - val))
-	if [ $val -ne $pre_port_9_16_reset ]; then
-		ipmitool raw 0x30 0x25 0x00 0x0c 0x0 0x21 $val 1>>/dev/null 2>>/dev/null
-		sleep 0.05
-		pre_port_9_16_reset=$val
-	fi
+		val=$((0xff - val))
+		if [ $val -ne $pre_port_9_16_modsel ]; then
+			ipmitool raw 0x30 0x25 0x00 0x0c 0x0 0x61 $val 1>>/dev/null 2>>/dev/null
+			sleep 0.05
+			pre_port_9_16_modsel=$val
+		fi
 
-	cpld_path="/sys/bus/i2c/devices/0-0007/"
-	val=0
-	for i in $(seq 17 24);
-	do
-		reset_path=$cpld_path"port"$i"_reset"
-		reset_input=$(cat $reset_path | awk '{printf $1}')
-		val=$((val | (reset_input << ($i - 17))))
-	done
+		cpld_path="/sys/bus/i2c/devices/0-0007/"
+		val=0
+		for i in $(seq 17 24);
+		do
+			modsel_path=$cpld_path"port"$i"_modsel"
+			modsel_input=$(cat $modsel_path | awk '{printf $1}')
+			val=$((val | (modsel_input << ($i - 17))))
+		done
 
-	val=$((0xff - val))
-	if [ $val -ne $pre_port_17_24_reset ]; then
-		ipmitool raw 0x30 0x25 0x00 0x0e 0x0 0x20 $val 1>>/dev/null 2>>/dev/null
-		sleep 0.05
-		pre_port_17_24_reset=$val
-	fi
-	val=0
-	for i in $(seq 25 32);
-	do
-		reset_path=$cpld_path"port"$i"_reset"
-		reset_input=$(cat $reset_path | awk '{printf $1}')
-		val=$((val | (reset_input << ($i - 25))))
-	done
+		val=$((0xff - val))
+		if [ $val -ne $pre_port_17_24_modsel ]; then
+			ipmitool raw 0x30 0x25 0x00 0x0e 0x0 0x60 $val 1>>/dev/null 2>>/dev/null
+			sleep 0.05
+			pre_port_17_24_modsel=$val
+		fi
+		val=0
+		for i in $(seq 25 32);
+		do
+			modsel_path=$cpld_path"port"$i"_modsel"
+			modsel_input=$(cat $modsel_path | awk '{printf $1}')
+			val=$((val | (modsel_input << ($i - 25))))
+		done
 
-	val=$((0xff - val))
-	if [ $val -ne $pre_port_25_32_reset ]; then
-		ipmitool raw 0x30 0x25 0x00 0x0e 0x0 0x21 $val 1>>/dev/null 2>>/dev/null
-		sleep 0.05
-		pre_port_25_32_reset=$val
-	fi
+		val=$((0xff - val))
+		if [ $val -ne $pre_port_25_32_modsel ]; then
+			ipmitool raw 0x30 0x25 0x00 0x0e 0x0 0x61 $val 1>>/dev/null 2>>/dev/null
+			sleep 0.05
+			pre_port_25_32_modsel=$val
+		fi
+	else
+		cpld_path="/sys/bus/i2c/devices/0-0006/"
+		val=0
+		for i in $(seq 1 8);
+		do
+			modsel_path=$cpld_path"port"$i"_modsel"
+			modsel_input=$(cat $modsel_path | awk '{printf $1}')
+			val=$((val | (modsel_input << ($i - 1))))
+		done
 
+		val=$((0xff - val))
+
+		val2=0
+		for i in $(seq 9 16);
+		do
+			modsel_path=$cpld_path"port"$i"_modsel"
+			modsel_input=$(cat $modsel_path | awk '{printf $1}')
+			val2=$((val2 | (modsel_input << ($i - 9))))
+		done
+
+		val2=$((0xff - val2))
+		if [ $val -ne $port_1_8_modsel ] || [ $val2 -ne $port_9_16_modsel ]; then
+			ipmitool raw 0x30 0x8c 0x0 0x2 $val $val2 1>>/dev/null 2>>/dev/null
+		fi
+
+		cpld_path="/sys/bus/i2c/devices/0-0007/"
+		val=0
+		for i in $(seq 17 24);
+		do
+			modsel_path=$cpld_path"port"$i"_modsel"
+			modsel_input=$(cat $modsel_path | awk '{printf $1}')
+			val=$((val | (modsel_input << ($i - 17))))
+		done
+
+		val=$((0xff - val))
+
+		val2=0
+		for i in $(seq 25 32);
+		do
+			modsel_path=$cpld_path"port"$i"_modsel"
+			modsel_input=$(cat $modsel_path | awk '{printf $1}')
+			val2=$((val2 | (modsel_input << ($i - 25))))
+		done
+
+		val2=$((0xff - val2))
+		if [ $val -ne $port_17_24_modsel ] || [ $val2 -ne $port_25_32_modsel ]; then
+			ipmitool raw 0x30 0x8c 0x1 0x2 $val $val2 1>>/dev/null 2>>/dev/null
+		fi
+	fi
 
 	return 0
 }
 
-#$1=port_no
-bmc_qsfp_eeprom_read()
+bmc_qsfp_presence_read()
 {
-	local port=$1
-	local eeprom_part1
-	local eeprom_part2
-	local eeprom_part3
-	local eeprom_part4
-	local eeprom1_full
-	local eeprom2_full
-
-	port=`expr $port - 1`
-	i2cmux_dev=0
-	i2cmux_dev=`expr $port / 8`
-	i2cmux_dev=`expr $i2cmux_dev + 2`
-	ch=`expr $port % 8`
-
-	bmc_write $i2cmux_dev $ch 0x50 0x7f 0x00
-	bmc_read $i2cmux_dev $ch 0x50 0 128
-	if [ $? -eq 1 ];then
-		eeprom_part1=$result
-	else
-		return 1
-	fi
+	if [ $board_ver == 1 ]; then
+		a=0
+		tmp1=$(ipmitool raw 0x30 0x25 0x00 0x0c 0x1 0x30 2>>/dev/null)
+		a=$((a+$?))
+		tmp1=$(echo $tmp1 | awk '{printf $1}')
+		sleep 0.05
+		tmp2=$(ipmitool raw 0x30 0x25 0x00 0x0c 0x1 0x31 2>>/dev/null)
+		a=$((a+$?))
+		tmp2=$(echo $tmp2 | awk '{printf $1}')
+		sleep 0.05
+		tmp3=$(ipmitool raw 0x30 0x25 0x00 0x0e 0x1 0x30 2>>/dev/null)
+		a=$((a+$?))
+		tmp3=$(echo $tmp3 | awk '{printf $1}')
+		sleep 0.05
+		tmp4=$(ipmitool raw 0x30 0x25 0x00 0x0e 0x1 0x31 2>>/dev/null)
+		a=$((a+$?))
+		tmp4=$(echo $tmp4 | awk '{printf $1}')
+		sleep 0.05
+		if [ $a -eq 0 ];then
+			byte_hex_test $tmp1
+			if [ $? -eq 0 ]; then
+				return 0
+			fi
+			port_1_8_presence=$( printf "%d" 0x$tmp1 )
+			byte_hex_test $tmp2
+			if [ $? -eq 0 ]; then
+				return 0
+			fi
+			port_9_16_presence=$( printf "%d" 0x$tmp2 )
+			byte_hex_test $tmp3
+			if [ $? -eq 0 ]; then
+				return 0
+			fi
+			port_17_24_presence=$( printf "%d" 0x$tmp3 )
+			byte_hex_test $tmp4
+			if [ $? -eq 0 ]; then
+				return 0
+			fi
+			port_25_32_presence=$( printf "%d" 0x$tmp4 )
+			return 1
+		fi
 
-	bmc_read $i2cmux_dev $ch 0x50 128 128
-	if [ $? -eq 1 ];then
-		eeprom_part2=$result
+		return 0
 	else
-		return 1
+		bmc_read_low_speed_signal_status
+		if [ $? -eq 0 ]; then
+			return 0
+		fi
 	fi
+}
 
-	#QSFP-DD page2
-	bmc_write $i2cmux_dev $ch 0x50 0x7f 0x02
-	bmc_read $i2cmux_dev $ch 0x50 128 128
-	if [ $? -eq 1 ];then
-		eeprom_part3=$result
-	else
-		return 1
-	fi
+bmc_qsfp_reset_write()
+{
 
-	#QSFP-DD page11
-	bmc_write $i2cmux_dev $ch 0x50 0x7f 0x11
-	bmc_read $i2cmux_dev $ch 0x50 128 128
-	if [ $? -eq 1 ];then
-		eeprom_part4=$result
-	else
-		return 1
-	fi
+	if [ $board_ver == 1 ]; then
+		cpld_path="/sys/bus/i2c/devices/0-0006/"
+		val=0
+		for i in $(seq 1 8);
+		do
+			reset_path=$cpld_path"port"$i"_reset"
+			reset_input=$(cat $reset_path | awk '{printf $1}')
+			val=$((val | (reset_input << ($i - 1))))
+		done
 
-	sfp_type=$(echo $eeprom_part1 | awk '{printf $1}')
-	byte_hex_test $sfp_type
-	if [ $? -eq 0 ]; then
-		return
-	fi
-	sfp_type=$( printf "%d" 0x$sfp_type )
-
-	#get temperature
-	temp=$(echo $eeprom_part1 | awk '{printf $15}')
-	if [ $temp != "" ];then
-		temp=$( printf "%d" 0x$temp )
-		temp_path="/sys/bus/i2c/devices/0-00"${port_map[$1]}"/temp"
-		echo $temp > $temp_path
-	fi
+		val=$((0xff - val))
+		if [ $val -ne $pre_port_1_8_reset ]; then
+			ipmitool raw 0x30 0x25 0x00 0x0c 0x0 0x20 $val 1>>/dev/null 2>>/dev/null
+			sleep 0.05
+			pre_port_1_8_reset=$val
+		fi
+		val=0
+		for i in $(seq 9 16);
+		do
+			reset_path=$cpld_path"port"$i"_reset"
+			reset_input=$(cat $reset_path | awk '{printf $1}')
+			val=$((val | (reset_input << ($i - 9))))
+		done
 
-	#get lp_mode
-	lpmod_path="/sys/bus/i2c/devices/0-00"${port_map[$1]}"/lp_mode"
-	if [ $sfp_type -eq 24 ];then
-		lpmod=$(echo $eeprom_part1 | awk '{printf $27}')
-		if [ $lpmod != "" ];then
-			state=$((lpmod&0x10))
-			if [ $state -eq 16 ];then
-				echo 1 > $lpmod_path
-			else
-				echo 0 > $lpmod_path
-			fi
+		val=$((0xff - val))
+		if [ $val -ne $pre_port_9_16_reset ]; then
+			ipmitool raw 0x30 0x25 0x00 0x0c 0x0 0x21 $val 1>>/dev/null 2>>/dev/null
+			sleep 0.05
+			pre_port_9_16_reset=$val
 		fi
-	elif [ $sfp_type -eq 17 ];then
-		lpmod=$(echo $eeprom_part1 | awk '{printf $93}')
-		if [ $lpmod != "" ];then
-			state=$((lpmod&0x02))
-			if [ $state -eq 2 ];then
-				echo 1 > $lpmod_path
-			else
-				echo 0 > $lpmod_path
-			fi
+
+		cpld_path="/sys/bus/i2c/devices/0-0007/"
+		val=0
+		for i in $(seq 17 24);
+		do
+			reset_path=$cpld_path"port"$i"_reset"
+			reset_input=$(cat $reset_path | awk '{printf $1}')
+			val=$((val | (reset_input << ($i - 17))))
+		done
+
+		val=$((0xff - val))
+		if [ $val -ne $pre_port_17_24_reset ]; then
+			ipmitool raw 0x30 0x25 0x00 0x0e 0x0 0x20 $val 1>>/dev/null 2>>/dev/null
+			sleep 0.05
+			pre_port_17_24_reset=$val
 		fi
-	else
-		lpmod=""
-	fi
+		val=0
+		for i in $(seq 25 32);
+		do
+			reset_path=$cpld_path"port"$i"_reset"
+			reset_input=$(cat $reset_path | awk '{printf $1}')
+			val=$((val | (reset_input << ($i - 25))))
+		done
 
-	eeprom1_full=$eeprom_part1$eeprom_part2
-	eeprom1_full=$(echo $eeprom1_full | sed 's/[[:space:]]//g')
-	eeprom2_full=$eeprom_part3$eeprom_part4
-	eeprom2_full=$(echo $eeprom2_full | sed 's/[[:space:]]//g')
-
-	if [ $debug_flag -eq 0 ];then
-		eeprom1_path="/sys/bus/i2c/devices/0-00"${port_map[$1]}"/eeprom1"
-		eeprom1_full=$(echo $eeprom1_full | sed -e 's/ //g')
-		echo $eeprom1_full > $eeprom1_path
-		eeprom2_path="/sys/bus/i2c/devices/0-00"${port_map[$1]}"/eeprom2"
-		eeprom2_full=$(echo $eeprom2_full | sed -e 's/ //g')
-		echo $eeprom2_full > $eeprom2_path
+		val=$((0xff - val))
+		if [ $val -ne $pre_port_25_32_reset ]; then
+			ipmitool raw 0x30 0x25 0x00 0x0e 0x0 0x21 $val 1>>/dev/null 2>>/dev/null
+			sleep 0.05
+			pre_port_25_32_reset=$val
+		fi
 	else
-		printf "\nPort %d EEPROM:" $1
-		printf "-----------------------------------------------\n"
-		for i in $(seq 1 256);
+		cpld_path="/sys/bus/i2c/devices/0-0006/"
+		val=0
+		for i in $(seq 1 8);
 		do
-			printf "%s " ${eeprom1_full:0:2}
-			eeprom1_full=$(echo $eeprom1_full | sed 's/^..//')
+			reset_path=$cpld_path"port"$i"_reset"
+			reset_input=$(cat $reset_path | awk '{printf $1}')
+			val=$((val | (reset_input << ($i - 1))))
+		done
 
-			val=`expr $i % 16`
-			if [ $val -eq 0 ];then
-				printf "\n"
-			fi
+		val=$((0xff - val))
+		val2=0
+		for i in $(seq 9 16);
+		do
+			reset_path=$cpld_path"port"$i"_reset"
+			reset_input=$(cat $reset_path | awk '{printf $1}')
+			val2=$((val2 | (reset_input << ($i - 9))))
 		done
-		printf "\n-----------------------------------------------\n"
+
+		val2=$((0xff - val2))
+		if [ $val -ne $port_1_8_reset ] || [ $val2 -ne $port_9_16_reset ]; then
+			ipmitool raw 0x30 0x8c 0x0 0x0 $val $val2 1>>/dev/null 2>>/dev/null
+		fi
+
+		cpld_path="/sys/bus/i2c/devices/0-0007/"
+		val=0
+		for i in $(seq 17 24);
+		do
+			reset_path=$cpld_path"port"$i"_reset"
+			reset_input=$(cat $reset_path | awk '{printf $1}')
+			val=$((val | (reset_input << ($i - 17))))
+		done
+
+		val=$((0xff - val))
+		val2=0
+		for i in $(seq 25 32);
+		do
+			reset_path=$cpld_path"port"$i"_reset"
+			reset_input=$(cat $reset_path | awk '{printf $1}')
+			val2=$((val2 | (reset_input << ($i - 25))))
+		done
+
+		val2=$((0xff - val2))
+		if [ $val -ne $port_17_24_reset ] || [ $val2 -ne $port_25_32_reset ]; then
+			ipmitool raw 0x30 0x8c 0x1 0x0 $val $val2 1>>/dev/null 2>>/dev/null
+		fi
 	fi
 
 	return 0
 }
 
-#$1=port_no
-bmc_qsfp_eeprom_clear()
-{
-	eeprom1_path="/sys/bus/i2c/devices/0-00"${port_map[$1]}"/eeprom1"
-	echo "" > $eeprom1_path
-	eeprom2_path="/sys/bus/i2c/devices/0-00"${port_map[$1]}"/eeprom2"
-	echo "" > $eeprom2_path
-}
-
 QSFP_monitor()
 {
 	while true
@@ -463,16 +585,24 @@ QSFP_monitor()
 
 				if [ $is_presence -eq 0 ];then
 					echo 1 > $cpld_path"port"$i"_present"
-					bmc_qsfp_eeprom_read $i
+					if [ $board_ver == 0 ]; then
+						if [ -e /tmp/eeprom_init_done ] && [ ${port_pre_present[$((i - 1))]} -eq 0 ]; then
+							touch /tmp/plugin_module_event
+						fi
+
+						port_pre_present[$((i - 1))]=1
+					fi
 				else
 					echo 0 > $cpld_path"port"$i"_present"
-					bmc_qsfp_eeprom_clear $i
+					echo 0 > $cpld_path"port"$i"_data_rdy"
+					if [ $board_ver == 0 ]; then
+						port_pre_present[$((i - 1))]=0
+					fi
 				fi
 			done
-			sleep 2
-		else
-			sleep 1
 		fi
+
+		sleep 0.2
 	done
 }
 
diff --git a/platform/innovium/sonic-platform-modules-wistron/6512-32r/utils/wistron_6512_32r_util.py b/platform/innovium/sonic-platform-modules-wistron/6512-32r/utils/wistron_6512_32r_util.py
index 030942825..31cf25f4c 100644
--- a/platform/innovium/sonic-platform-modules-wistron/6512-32r/utils/wistron_6512_32r_util.py
+++ b/platform/innovium/sonic-platform-modules-wistron/6512-32r/utils/wistron_6512_32r_util.py
@@ -68,8 +68,6 @@ mknod =[
 # PSU
 'echo wistron_psu1 0x5a > /sys/bus/i2c/devices/i2c-0/new_device',
 'echo wistron_psu2 0x59 > /sys/bus/i2c/devices/i2c-0/new_device',
-# EEPROM
-'echo wistron_syseeprom 0x55 > /sys/bus/i2c/devices/i2c-0/new_device',
 ]
 
 FORCE = 0
@@ -173,6 +171,7 @@ kos = [
 'modprobe ipmi_watchdog',
 'modprobe i2c_dev',
 'modprobe at24',
+'modprobe i2c-imc',
 'modprobe wistron_6512_32r_syseeprom',
 'modprobe wistron_6512_32r_cpld',
 'modprobe wistron_6512_32r_fan',
@@ -242,6 +241,20 @@ def device_install():
             if FORCE == 0:
                 return status
 
+
+    status, output = log_os_system("i2cget -y 0 0x55 0x0 1>/dev/null 2>/dev/null; echo $?", 1)
+    if status:
+        print(output)
+        if FORCE == 0:
+            return status
+    else:
+        if output == '0':
+            log_os_system("echo 24c02 0x55 > /sys/bus/i2c/devices/i2c-0/new_device", 1)
+        else:
+            log_os_system("echo wistron_syseeprom 0x55 > /sys/bus/i2c/devices/i2c-0/new_device", 1)
+
+
+
     for i in range(0,len(sfp_map)):
         status, output = log_os_system("echo wistron_oom 0x"+str(sfp_map[i])+ " > /sys/bus/i2c/devices/i2c-0/new_device", 1)
         if status:
@@ -324,12 +337,6 @@ def do_install():
     else:
         print(PROJECT_NAME.upper()+" devices detected....")
 
-    status, output = log_os_system(
-        "/bin/sh /usr/local/bin/platform_api_mgnt.sh init", 1)
-    if status:
-            print(output)
-            if FORCE == 0:
-                return status
     return
 
 def do_uninstall():
diff --git a/platform/innovium/sonic-platform-modules-wistron/sw-to3200k/modules/wistron_i2c_psu.c b/platform/innovium/sonic-platform-modules-wistron/sw-to3200k/modules/wistron_i2c_psu.c
index 746e58148..5024ecdd7 100644
--- a/platform/innovium/sonic-platform-modules-wistron/sw-to3200k/modules/wistron_i2c_psu.c
+++ b/platform/innovium/sonic-platform-modules-wistron/sw-to3200k/modules/wistron_i2c_psu.c
@@ -342,25 +342,25 @@ static ssize_t set_value
         }
         case PSU_MFR_ID:
         {
-            memset(&data->mfr_id, 0x0, sizeof(data->mfr_id));
+            memzero_explicit(&data->mfr_id, sizeof(data->mfr_id));
             strncpy(data->mfr_id, buf, sizeof(data->mfr_id)-1);
             break;
         }
         case PSU_MFR_MODEL:
         {
-            memset(&data->mfr_model, 0x0, sizeof(data->mfr_model));
+            memzero_explicit(&data->mfr_model, sizeof(data->mfr_model));
             strncpy(data->mfr_model, buf, sizeof(data->mfr_model)-1);
             break;
         }
         case PSU_MFR_REVISION:
         {
-            memset(&data->mfr_revsion, 0x0, sizeof(data->mfr_revsion));
+            memzero_explicit(&data->mfr_revsion, sizeof(data->mfr_revsion));
             strncpy(data->mfr_revsion, buf, sizeof(data->mfr_revsion)-1);
             break;
         }
         case PSU_MFR_SERIAL:
         {
-            memset(&data->mfr_serial, 0x0, sizeof(data->mfr_serial));
+            memzero_explicit(&data->mfr_serial, sizeof(data->mfr_serial));
             strncpy(data->mfr_serial, buf, sizeof(data->mfr_serial)-1);
             break;
         }
@@ -403,7 +403,7 @@ static int wistron_i2c_psu_probe(struct i2c_client *client, const struct i2c_dev
         goto exit_free;
     }
 
-    data->hwmon_dev = hwmon_device_register(&client->dev);
+	data->hwmon_dev = hwmon_device_register_with_info(&client->dev, "wistron_i2c_psu", NULL, NULL, NULL);
     if (IS_ERR(data->hwmon_dev))
     {
         status = PTR_ERR(data->hwmon_dev);
diff --git a/platform/innovium/sonic-platform-modules-wistron/sw-to3200k/modules/wistron_sw_to3200k_fan.c b/platform/innovium/sonic-platform-modules-wistron/sw-to3200k/modules/wistron_sw_to3200k_fan.c
index 82dfa71b7..0f7e856e8 100644
--- a/platform/innovium/sonic-platform-modules-wistron/sw-to3200k/modules/wistron_sw_to3200k_fan.c
+++ b/platform/innovium/sonic-platform-modules-wistron/sw-to3200k/modules/wistron_sw_to3200k_fan.c
@@ -16,6 +16,8 @@
 
 static ssize_t get_fan_value(struct device *dev, struct device_attribute *da, char *buf);
 static ssize_t set_fan_value(struct device *dev, struct device_attribute *da, const char *buf, size_t count);
+static ssize_t get_version(struct device *dev, struct device_attribute *da, char *buf);
+static ssize_t set_version(struct device *dev, struct device_attribute *da, const char *buf, size_t count);
 
 enum fan_id {
     FAN1_ID,
@@ -49,7 +51,7 @@ enum sysfs_fan_attributes {
     FAN4_DIRECTION,
     FAN5_DIRECTION,
     FAN6_DIRECTION,
-    FAN7_DIRECTION, 
+    FAN7_DIRECTION,
     FAN1_FRONT_SPEED_RPM,
     FAN2_FRONT_SPEED_RPM,
     FAN3_FRONT_SPEED_RPM,
@@ -64,6 +66,7 @@ enum sysfs_fan_attributes {
     FAN5_REAR_SPEED_RPM,
     FAN6_REAR_SPEED_RPM,
     FAN7_REAR_SPEED_RPM,
+    CPLD_VERSION,
     FAN_ATTR_MAX
 };
 
@@ -71,9 +74,13 @@ enum sysfs_fan_attributes {
 struct sw_to3200k_fan_data {
     struct device   *hwmon_dev;
     struct mutex     update_lock;
+    int              version;
     int              fan_val[FAN_ATTR_MAX];
 };
 
+/* version */
+static SENSOR_DEVICE_ATTR(version, S_IWUSR | S_IRUGO, get_version, set_version, CPLD_VERSION);
+
 /* Define attributes */
 #define DECLARE_FAN_DUTY_CYCLE_SENSOR_DEV_ATTR(index) \
     static SENSOR_DEVICE_ATTR(fan##index##_duty_cycle_percentage, S_IWUSR | S_IRUGO, get_fan_value, set_fan_value, FAN##index##_DUTY_CYCLE_PERCENTAGE)
@@ -171,9 +178,40 @@ static struct attribute *sw_to3200k_fan_attributes[] = {
     DECLARE_FAN_DIRECTION_ATTR(6),
     DECLARE_FAN_DIRECTION_ATTR(7),
     DECLARE_FAN_DUTY_CYCLE_ATTR(),
+    &sensor_dev_attr_version.dev_attr.attr,
     NULL
 };
 
+static ssize_t get_version(struct device *dev, struct device_attribute *da, char *buf)
+{
+	struct i2c_client               *client = to_i2c_client(dev);
+	struct sw_to3200k_fan_data     *data = i2c_get_clientdata(client);
+	int                             version;
+
+	mutex_lock(&data->update_lock);
+	version = data->version;
+	mutex_unlock(&data->update_lock);
+	return sprintf(buf, "%d", version);
+}
+
+static ssize_t set_version(struct device *dev, struct device_attribute *da, const char *buf, size_t count)
+{
+	struct i2c_client               *client = to_i2c_client(dev);
+	struct sw_to3200k_fan_data     *data = i2c_get_clientdata(client);
+	int                             error, version;
+
+	error = kstrtoint(buf, 10, &version);
+	if (error)
+	{
+		return error;
+	}
+
+	mutex_lock(&data->update_lock);
+	data->version = version;
+	mutex_unlock(&data->update_lock);
+	return count;
+}
+
 static ssize_t get_fan_value(struct device *dev, struct device_attribute *da, char *buf)
 {
     struct sensor_device_attribute  *attr = to_sensor_dev_attr(da);
@@ -245,7 +283,7 @@ static int sw_to3200k_fan_probe
         goto exit_free;
     }
 
-    data->hwmon_dev = hwmon_device_register(&client->dev);
+	data->hwmon_dev = hwmon_device_register_with_info(&client->dev, "wistron_fan", NULL, NULL, NULL);
     if (IS_ERR(data->hwmon_dev))
     {
         status = PTR_ERR(data->hwmon_dev);
diff --git a/platform/innovium/sonic-platform-modules-wistron/sw-to3200k/modules/wistron_sw_to3200k_oom.c b/platform/innovium/sonic-platform-modules-wistron/sw-to3200k/modules/wistron_sw_to3200k_oom.c
index 6e1df229c..4441197b2 100644
--- a/platform/innovium/sonic-platform-modules-wistron/sw-to3200k/modules/wistron_sw_to3200k_oom.c
+++ b/platform/innovium/sonic-platform-modules-wistron/sw-to3200k/modules/wistron_sw_to3200k_oom.c
@@ -11,6 +11,9 @@
 #include <linux/delay.h>
 #include <linux/dmi.h>
 
+
+#define QSFP_DD_TYPE    0x18
+
 /* QSFP-DD: page0 (low page (128 byte)), page 0 (high page (128 byte)), page 2 (high page (128 byte)), page11 (high page (128 byte))*/
 #define EEPROM_DATA_SIZE        128
 
@@ -26,8 +29,14 @@ enum sysfs_fan_attributes {
     OOM_EEPROM_PG1,
     OOM_EEPROM_PG2,
     OOM_EEPROM_PG3,
+    OOM_EEPROM_PG4,
     OOM_EEPROM_PG11,
+    OOM_EEPROM_PG12,
     OOM_PORT_NAME,
+	OOM_POWER_MODE,
+	OOM_GRID,
+	OOM_FREQ,
+	OOM_OUTPUT_POWER,
     OOM_ATTR_MAX
 };
 
@@ -43,8 +52,14 @@ struct sw_to3200k_oom_data {
     unsigned char   eeprom1[EEPROM_DATA_SIZE];
     unsigned char   eeprom2[EEPROM_DATA_SIZE];
     unsigned char   eeprom3[EEPROM_DATA_SIZE];
+    unsigned char   eeprom4[EEPROM_DATA_SIZE];
     unsigned char   eeprom11[EEPROM_DATA_SIZE];
+    unsigned char   eeprom12[EEPROM_DATA_SIZE];
     char            port_name[MAX_PORT_NAME_LEN];
+	int 			power_mode;
+	int				grid;
+	int				freq;
+	int				outp;
 };
 
 /* sysfs attributes for hwmon */
@@ -61,8 +76,14 @@ static SENSOR_DEVICE_ATTR(eeprom_pg0, S_IWUSR | S_IRUGO, get_oom_info, set_oom_i
 static SENSOR_DEVICE_ATTR(eeprom_pg1, S_IWUSR | S_IRUGO, get_oom_info, set_oom_info, OOM_EEPROM_PG1);
 static SENSOR_DEVICE_ATTR(eeprom_pg2, S_IWUSR | S_IRUGO, get_oom_info, set_oom_info, OOM_EEPROM_PG2);
 static SENSOR_DEVICE_ATTR(eeprom_pg3, S_IWUSR | S_IRUGO, get_oom_info, set_oom_info, OOM_EEPROM_PG3);
+static SENSOR_DEVICE_ATTR(eeprom_pg4, S_IWUSR | S_IRUGO, get_oom_info, set_oom_info, OOM_EEPROM_PG4);
 static SENSOR_DEVICE_ATTR(eeprom_pg11, S_IWUSR | S_IRUGO, get_oom_info, set_oom_info, OOM_EEPROM_PG11);
+static SENSOR_DEVICE_ATTR(eeprom_pg12, S_IWUSR | S_IRUGO, get_oom_info, set_oom_info, OOM_EEPROM_PG12);
 static SENSOR_DEVICE_ATTR(port_name, S_IRUGO | S_IWUSR, get_port_name, set_port_name, OOM_PORT_NAME);
+static SENSOR_DEVICE_ATTR(power_mode, S_IWUSR | S_IRUGO, get_oom_value, set_oom_value, OOM_POWER_MODE);
+static SENSOR_DEVICE_ATTR(grid, S_IWUSR | S_IRUGO, get_oom_value, set_oom_value, OOM_GRID);
+static SENSOR_DEVICE_ATTR(freq, S_IWUSR | S_IRUGO, get_oom_value, set_oom_value, OOM_FREQ);
+static SENSOR_DEVICE_ATTR(output_power, S_IWUSR | S_IRUGO, get_oom_value, set_oom_value, OOM_OUTPUT_POWER);
 
 static struct attribute *sw_to3200k_oom_attributes[] = {
     &sensor_dev_attr_lp_mode.dev_attr.attr,
@@ -72,8 +93,14 @@ static struct attribute *sw_to3200k_oom_attributes[] = {
     &sensor_dev_attr_eeprom_pg1.dev_attr.attr,
     &sensor_dev_attr_eeprom_pg2.dev_attr.attr,
     &sensor_dev_attr_eeprom_pg3.dev_attr.attr,
+    &sensor_dev_attr_eeprom_pg4.dev_attr.attr,
     &sensor_dev_attr_eeprom_pg11.dev_attr.attr,
+    &sensor_dev_attr_eeprom_pg12.dev_attr.attr,
     &sensor_dev_attr_port_name.dev_attr.attr,
+    &sensor_dev_attr_power_mode.dev_attr.attr,
+    &sensor_dev_attr_grid.dev_attr.attr,
+    &sensor_dev_attr_freq.dev_attr.attr,
+    &sensor_dev_attr_output_power.dev_attr.attr,
     NULL
 };
 
@@ -85,14 +112,26 @@ static ssize_t get_oom_value(struct device *dev, struct device_attribute *da, ch
     int                             value = 0;
 
     mutex_lock(&data->lock);
-    if (attr->index == OOM_LP_MODE)
-    {
-        value = data->lp_mode;
-    }
-    else
-    {
-        value = data->temp;
-    }
+	switch (attr->index) {
+		case OOM_LP_MODE:
+			value = data->lp_mode;
+			break;
+		case OOM_TEMP:
+			value = data->temp;
+			break;
+		case OOM_POWER_MODE:
+			value = data->power_mode;
+			break;
+		case OOM_FREQ:
+			value = data->freq;
+			break;
+		case OOM_OUTPUT_POWER:
+			value = data->outp;
+			break;
+		case OOM_GRID:
+			value = data->grid;
+			break;
+	}
     mutex_unlock(&data->lock);
     return sprintf(buf, "%d", value);
 }
@@ -111,15 +150,47 @@ static ssize_t set_oom_value(struct device *dev, struct device_attribute *da, co
         return error;
     }
 
-    mutex_lock(&data->lock);
-    if (attr->index == OOM_LP_MODE)
-    {
-        data->lp_mode = value;
-    }
-    else
-    {
-        data->temp = value;
-    }
+	switch (attr->index) {
+		case OOM_LP_MODE:
+			data->lp_mode = value;
+			break;
+		case OOM_TEMP:
+			data->temp = value;
+			break;
+		case OOM_POWER_MODE:
+			if (data->eeproml[0] == QSFP_DD_TYPE)
+				data->eeproml[26] = value;
+			else
+				data->eeproml[93] = value;
+			data->power_mode = value;
+			break;
+		case OOM_FREQ:
+			if (data->eeproml[0] == QSFP_DD_TYPE)
+			{
+				data->eeprom12[72] = (value & 0xff00) >> 8;
+				data->eeprom12[73] = (value & 0xff);
+			}
+
+			data->freq = value;
+			break;
+		case OOM_OUTPUT_POWER:
+			if (data->eeproml[0] == QSFP_DD_TYPE)
+			{
+				data->eeprom12[8] = (value & 0xff00) >> 8;
+				data->eeprom12[9] = (value & 0xff);
+			}
+
+			data->outp = value;
+			break;
+		case OOM_GRID:
+			if (data->eeproml[0] == QSFP_DD_TYPE)
+			{
+				data->eeprom12[0] = value;
+			}
+
+			data->grid = value;
+			break;
+	}
     mutex_unlock(&data->lock);
     return count;
 }
@@ -158,11 +229,21 @@ static ssize_t get_oom_info(struct device *dev, struct device_attribute *da, cha
             memcpy(buf, data->eeprom3, EEPROM_DATA_SIZE);
             break;
         }
+        case OOM_EEPROM_PG4:
+        {
+            memcpy(buf, data->eeprom4, EEPROM_DATA_SIZE);
+            break;
+        }
         case OOM_EEPROM_PG11:
         {
             memcpy(buf, data->eeprom11, EEPROM_DATA_SIZE);
             break;
         }
+        case OOM_EEPROM_PG12:
+        {
+            memcpy(buf, data->eeprom12, EEPROM_DATA_SIZE);
+            break;
+        }
         default:
             break;
     }
@@ -181,7 +262,7 @@ static ssize_t set_oom_info(struct device *dev, struct device_attribute *da, con
 
     k=0;
     mutex_lock(&data->lock);
-    memset(str, 0x0, 3);
+    memzero_explicit(str, sizeof(str));
     if (strlen(buf) >= EEPROM_DATA_SIZE)
     {
         for (i=0; i < strlen(buf) ; i++)
@@ -224,11 +305,21 @@ static ssize_t set_oom_info(struct device *dev, struct device_attribute *da, con
                     data->eeprom3[k]=(unsigned char)val;
                     break;
                 }
+                case OOM_EEPROM_PG4:
+                {
+                    data->eeprom4[k]=(unsigned char)val;
+                    break;
+                }
                 case OOM_EEPROM_PG11:
                 {
                     data->eeprom11[k]=(unsigned char)val;
                     break;
                 }
+                case OOM_EEPROM_PG12:
+                {
+                    data->eeprom12[k]=(unsigned char)val;
+                    break;
+                }
                 default:
                     break;
             }
@@ -242,27 +333,37 @@ static ssize_t set_oom_info(struct device *dev, struct device_attribute *da, con
         {
             case OOM_EEPROM_LOW:
             {
-                memset(&data->eeproml, 0x0, sizeof(data->eeproml));
+                memzero_explicit(&data->eeproml, sizeof(data->eeproml));
                 break;
             }
             case OOM_EEPROM_PG0:
             {
-                memset(&data->eeprom0, 0x0, sizeof(data->eeprom0));
+                memzero_explicit(&data->eeprom0, sizeof(data->eeprom0));
                 break;
             }
             case OOM_EEPROM_PG2:
             {
-                memset(&data->eeprom2, 0x0, sizeof(data->eeprom2));
+                memzero_explicit(&data->eeprom2, sizeof(data->eeprom2));
                 break;
             }
             case OOM_EEPROM_PG3:
             {
-                memset(&data->eeprom3, 0x0, sizeof(data->eeprom3));
+                memzero_explicit(&data->eeprom3, sizeof(data->eeprom3));
+                break;
+            }
+            case OOM_EEPROM_PG4:
+            {
+                memzero_explicit(&data->eeprom4, sizeof(data->eeprom4));
                 break;
             }
             case OOM_EEPROM_PG11:
             {
-                memset(&data->eeprom11, 0x0, sizeof(data->eeprom11));
+                memzero_explicit(&data->eeprom11, sizeof(data->eeprom11));
+                break;
+            }
+            case OOM_EEPROM_PG12:
+            {
+                memzero_explicit(&data->eeprom12, sizeof(data->eeprom12));
                 break;
             }
             default:
@@ -332,7 +433,7 @@ static int sw_to3200k_oom_probe(struct i2c_client *client, const struct i2c_devi
         goto exit_free;
     }
 
-    data->hwmon_dev = hwmon_device_register(&client->dev);
+	data->hwmon_dev = hwmon_device_register_with_info(&client->dev, "wistron_oom", NULL, NULL, NULL);
     if (IS_ERR(data->hwmon_dev))
     {
         status = PTR_ERR(data->hwmon_dev);
diff --git a/platform/innovium/sonic-platform-modules-wistron/sw-to3200k/modules/wistron_sw_to3200k_psu.c b/platform/innovium/sonic-platform-modules-wistron/sw-to3200k/modules/wistron_sw_to3200k_psu.c
index 849ec1315..418e22240 100644
--- a/platform/innovium/sonic-platform-modules-wistron/sw-to3200k/modules/wistron_sw_to3200k_psu.c
+++ b/platform/innovium/sonic-platform-modules-wistron/sw-to3200k/modules/wistron_sw_to3200k_psu.c
@@ -140,7 +140,7 @@ static ssize_t set_string(struct device *dev, struct device_attribute *da, const
     struct sw_to3200k_psu_data      *data = i2c_get_clientdata(client);
     char                            tmp_str[32];
 
-    memset(&tmp_str, 0x0, sizeof(tmp_str));
+    memzero_explicit(&tmp_str, sizeof(tmp_str));
     if (attr->index == PSU_MODEL_NAME)
     {
         if (sscanf(buf, "%16s", tmp_str) != 1)
@@ -205,7 +205,7 @@ static int sw_to3200k_psu_probe(struct i2c_client *client,
         goto exit_free;
     }
 
-    data->hwmon_dev = hwmon_device_register(&client->dev);
+	data->hwmon_dev = hwmon_device_register_with_info(&client->dev, "wistron_psu", NULL, NULL, NULL);
     if (IS_ERR(data->hwmon_dev))
     {
         status = PTR_ERR(data->hwmon_dev);
diff --git a/platform/innovium/sonic-platform-modules-wistron/sw-to3200k/modules/wistron_sw_to3200k_thermal.c b/platform/innovium/sonic-platform-modules-wistron/sw-to3200k/modules/wistron_sw_to3200k_thermal.c
index e96e9d723..a86d53a94 100644
--- a/platform/innovium/sonic-platform-modules-wistron/sw-to3200k/modules/wistron_sw_to3200k_thermal.c
+++ b/platform/innovium/sonic-platform-modules-wistron/sw-to3200k/modules/wistron_sw_to3200k_thermal.c
@@ -140,7 +140,7 @@ static int sw_to3200k_thermal_probe(struct i2c_client *client, const struct i2c_
         goto exit_free;
     }
 
-    data->hwmon_dev = hwmon_device_register(&client->dev);
+	data->hwmon_dev = hwmon_device_register_with_info(&client->dev, "wistron_thermal", NULL, NULL, NULL);
     if (IS_ERR(data->hwmon_dev))
     {
         status = PTR_ERR(data->hwmon_dev);
diff --git a/platform/innovium/sonic-platform-modules-wistron/sw-to3200k/sonic_platform/__init__.py b/platform/innovium/sonic-platform-modules-wistron/sw-to3200k/sonic_platform/__init__.py
index 0c73278ba..afc599aec 100644
--- a/platform/innovium/sonic-platform-modules-wistron/sw-to3200k/sonic_platform/__init__.py
+++ b/platform/innovium/sonic-platform-modules-wistron/sw-to3200k/sonic_platform/__init__.py
@@ -1,2 +1,2 @@
-__all__ = ["platform", "chassis", "sfp", "eeprom", "psu", "thermal", "fan", "watchdog"]
+__all__ = ["platform", "chassis", "sfp", "eeprom", "psu", "thermal", "fan", "watchdog", 'component']
 from . import platform
diff --git a/platform/innovium/sonic-platform-modules-wistron/sw-to3200k/sonic_platform/chassis.py b/platform/innovium/sonic-platform-modules-wistron/sw-to3200k/sonic_platform/chassis.py
index 4effac20b..655949d8f 100644
--- a/platform/innovium/sonic-platform-modules-wistron/sw-to3200k/sonic_platform/chassis.py
+++ b/platform/innovium/sonic-platform-modules-wistron/sw-to3200k/sonic_platform/chassis.py
@@ -8,7 +8,6 @@
 #############################################################################
 try:
     import sys
-    import os
     import time
     import subprocess
     from sonic_platform_base.chassis_base import ChassisBase
@@ -16,16 +15,19 @@ except ImportError as e:
     raise ImportError(str(e) + "- required module not found")
 
 NUM_FAN = 14
+NUM_FANTRAY = 7
 NUM_PSU = 2
 NUM_THERMAL = 7
 NUM_SFP = 32
+NUM_COMPONENT = 6
 HOST_REBOOT_CAUSE_PATH = "/host/reboot-cause/"
 PMON_REBOOT_CAUSE_PATH = "/usr/share/sonic/platform/api_files/reboot-cause/"
 REBOOT_CAUSE_FILE = "reboot-cause.txt"
 PREV_REBOOT_CAUSE_FILE = "previous-reboot-cause.txt"
-HOST_CHK_CMD = "docker > /dev/null 2>&1"
-GET_HWSKU_CMD = "sonic-cfggen -d -v DEVICE_METADATA.localhost.hwsku"
-GET_PLATFORM_CMD = "sonic-cfggen -d -v DEVICE_METADATA.localhost.platform"
+HOST_CHK_CMD = ["docker"]
+GET_HWSKU_CMD = ["sonic-cfggen", "-d", "-v", "DEVICE_METADATA.localhost.hwsku"]
+GET_PLATFORM_CMD = ["sonic-cfggen", "-d", "-v", "DEVICE_METADATA.localhost.platform"]
+
 
 class Chassis(ChassisBase):
     """Platform-specific Chassis class"""
@@ -45,6 +47,7 @@ class Chassis(ChassisBase):
         self.__initialize_thermals()
         self.__initialize_sfp()
         self.__initialize_eeprom()
+        self.__initialize_components()
 
     def __initialize_sfp(self):
         from sonic_platform.sfp import Sfp
@@ -52,12 +55,12 @@ class Chassis(ChassisBase):
             sfp_module = Sfp(index, 'QSFP_DD')
             self._sfp_list.append(sfp_module)
 
-
     def __initialize_fan(self):
-        from sonic_platform.fan import Fan
-        for fan_index in range(0, NUM_FAN):
-            fan = Fan(fan_index)
-            self._fan_list.append(fan)
+        from sonic_platform.fan_drawer import FanDrawer
+        for fan_index in range(0, NUM_FANTRAY):
+            fandrawer = FanDrawer(fan_index)
+            self._fan_drawer_list.append(fandrawer)
+            self._fan_list.extend(fandrawer._fan_list)
 
     def __initialize_psu(self):
         from sonic_platform.psu import Psu
@@ -75,8 +78,14 @@ class Chassis(ChassisBase):
         from sonic_platform.eeprom import Tlv
         self._eeprom = Tlv()
 
+    def __initialize_components(self):
+        from sonic_platform.component import Component
+        for index in range(0, NUM_COMPONENT):
+            component = Component(index)
+            self._component_list.append(component)
+
     def __is_host(self):
-        return os.system(HOST_CHK_CMD) == 0
+        return subprocess.call(HOST_CHK_CMD) == 0
 
     def __read_txt_file(self, file_path):
         try:
@@ -88,12 +97,12 @@ class Chassis(ChassisBase):
         return None
 
     def _get_sku_name(self):
-        p = subprocess.Popen(GET_HWSKU_CMD, shell=True, stdout=subprocess.PIPE)
+        p = subprocess.Popen(GET_HWSKU_CMD, stdout=subprocess.PIPE)
         out, err = p.communicate()
         return out.decode().rstrip('\n')
 
     def _get_platform_name(self):
-        p = subprocess.Popen(GET_PLATFORM_CMD, shell=True, stdout=subprocess.PIPE)
+        p = subprocess.Popen(GET_PLATFORM_CMD, stdout=subprocess.PIPE)
         out, err = p.communicate()
         return out.decode().rstrip('\n')
 
@@ -114,7 +123,7 @@ class Chassis(ChassisBase):
         """
         return self._eeprom.get_mac()
 
-    def get_serial_number(self):
+    def get_serial(self):
         """
         Retrieves the hardware serial number for the chassis
         Returns:
@@ -181,7 +190,7 @@ class Chassis(ChassisBase):
         port_pres = {}
         for port in range(0, NUM_SFP):
             sfp = self._sfp_list[port]
-            port_pres[port] = sfp.get_presence()
+            port_pres[port] = 1 if sfp.get_presence() else 0
 
         return port_pres
 
@@ -217,7 +226,7 @@ class Chassis(ChassisBase):
                         port_dict[port] = '0'
 
             self._transceiver_presence = cur_presence
-            if change_event == True:
+            if change_event is True:
                 break
 
             if not forever:
@@ -231,3 +240,86 @@ class Chassis(ChassisBase):
             sfp.reinit()
 
         return True, ret_dict
+
+    def initizalize_system_led(self):
+        self.system_led = ""
+        return True
+
+    def set_status_led(self, color):
+        """
+        Sets the state of the system LED
+
+        Args:
+            color: A string representing the color with which to set the
+                   system LED
+
+        Returns:
+            bool: True if system LED state is set successfully, False if not
+        """
+        self.system_led = color
+        return True
+
+    def get_status_led(self):
+        """
+        Gets the state of the system LED
+
+        Returns:
+            A string, one of the valid LED color strings which could be vendor
+            specified.
+        """
+        return self.system_led
+
+
+    def get_presence(self):
+        """
+        Retrieves the presence of the Chassis
+        Returns:
+            bool: True if Chassis is present, False if not
+        """
+        return True
+
+    def get_model(self):
+        """
+        Retrieves the model number (or part number) of the device
+        Returns:
+            string: Model/part number of device
+        """
+        return self._eeprom.get_model()
+
+    def get_status(self):
+        """
+        Retrieves the operational status of the device
+        Returns:
+            A boolean value, True if device is operating properly, False if not
+        """
+        return True
+
+    def get_position_in_parent(self):
+        """
+        Retrieves 1-based relative physical position in parent device. If the agent cannot determine the parent-relative position
+        for some reason, or if the associated value of entPhysicalContainedIn is '0', then the value '-1' is returned
+        Returns:
+            integer: The 1-based relative physical position in parent device or -1 if cannot determine the position
+        """
+        return -1
+
+    def is_replaceable(self):
+        """
+        Indicate whether this device is replaceable.
+        Returns:
+            bool: True if it is replaceable.
+        """
+        return False
+
+    def get_revision(self):
+        """
+        Retrieves the hardware revision of the device
+
+        Returns:
+            string: Revision value of device
+        """
+
+        return '0'
+
+    def get_thermal_manager(self):
+        raise NotImplementedError
diff --git a/platform/innovium/sonic-platform-modules-wistron/sw-to3200k/sonic_platform/eeprom.py b/platform/innovium/sonic-platform-modules-wistron/sw-to3200k/sonic_platform/eeprom.py
index 448e08371..e495b2975 100644
--- a/platform/innovium/sonic-platform-modules-wistron/sw-to3200k/sonic_platform/eeprom.py
+++ b/platform/innovium/sonic-platform-modules-wistron/sw-to3200k/sonic_platform/eeprom.py
@@ -41,12 +41,19 @@ class Tlv(eeprom_tlvinfo.TlvInfoDecoder):
         for line in lines:
             try:
                 match = re.search(
-                    '(0x[0-9a-fA-F]{2})([\s]+[\S]+[\s]+)([\S]+)', line)
-                if match is not None:
+                    '(0x[0-9a-fA-F]{2})([\s]+[\S]+[\s]+)([\S]+[\s]+[\S]+)', line)
+                if match is not None and match.group(1) == '0x25':
                     idx = match.group(1)
                     value = match.group(3).rstrip('\0')
+                    _eeprom_info_dict[idx] = value
+                else:
+                    match = re.search(
+                        '(0x[0-9a-fA-F]{2})([\s]+[\S]+[\s]+)([\S]+)', line)
+                    if match is not None:
+                        idx = match.group(1)
+                        value = match.group(3).rstrip('\0')
+                        _eeprom_info_dict[idx] = value
 
-                _eeprom_info_dict[idx] = value
             except BaseException:
                 pass
         return _eeprom_info_dict
@@ -108,3 +115,7 @@ class Tlv(eeprom_tlvinfo.TlvInfoDecoder):
 
     def get_mac(self):
         return self._eeprom.get('0x24', "Undefined.")
+
+    def get_model(self):
+        return self._eeprom.get('0x21', "Undefined.")
+
diff --git a/platform/innovium/sonic-platform-modules-wistron/sw-to3200k/sonic_platform/fan.py b/platform/innovium/sonic-platform-modules-wistron/sw-to3200k/sonic_platform/fan.py
index f5b7f9e80..9849cd472 100644
--- a/platform/innovium/sonic-platform-modules-wistron/sw-to3200k/sonic_platform/fan.py
+++ b/platform/innovium/sonic-platform-modules-wistron/sw-to3200k/sonic_platform/fan.py
@@ -14,23 +14,66 @@ try:
 except ImportError as e:
     raise ImportError(str(e) + "- required module not found")
 
+SPEED_TOLERANCE = 15
 FAN_PATH = "/sys/bus/i2c/devices/0-0066/"
-FANTRAY_NAME_LIST = ["FANTRAY-1", "FANTRAY-2",
-                     "FANTRAY-3", "FANTRAY-4",
-                     "FANTRAY-5", "FANTRAY-6", "FANTRAY-7"]
-FAN_NAME_LIST = ["fan1_front","fan2_front","fan3_front","fan4_front","fan5_front","fan6_front", "fan7_front",\
-"fan1_rear","fan2_rear","fan3_rear","fan4_rear", "fan5_rear", "fan6_rear", "fan7_rear",]
+SYSFS_PATH = "/sys/bus/i2c/devices/{0}-00{1}"
+PSU_STS_I2C_MAPPING = {
+    0: {
+        "num": 0,
+        "addr": "51"
+    },
+    1: {
+        "num": 0,
+        "addr": "52"
+    },
+}
+
+PSU_HWMON_I2C_MAPPING = {
+    0: {
+        "num": 0,
+        "addr": "59"
+    },
+    1: {
+        "num": 0,
+        "addr": "5a"
+    },
+}
+
+FAN_NAME_LIST = ["FAN-1F", "FAN-1R", "FAN-2F", "FAN-2R",
+                 "FAN-3F", "FAN-3R", "FAN-4F", "FAN-4R",
+                 "FAN-5F", "FAN-5R", "FAN-6F", "FAN-6R",
+                 "FAN-7F", "FAN-7R"]
 
 class Fan(FanBase):
     """Platform-specific Fan class"""
 
-    def __init__(self, fan_index):
-        self.fan_tray_index = fan_index
-        self.fan_presence = "fan{}_presence"
-        self.fan_direction = "fan{}_direction"
-        self.fan_speed_rpm = "fan{}_{}_speed_rpm"
+    def __init__(self, fan_tray_index, fan_index=0, is_psu_fan=False, psu_index=0):
+        self.fan_index = fan_index
+        self.fan_tray_index = fan_tray_index
+        self.is_psu_fan = is_psu_fan
+
+        if self.is_psu_fan:
+            self.psu_index = psu_index
+            self.psu_status_i2c_num = PSU_STS_I2C_MAPPING[self.psu_index]['num']
+            self.psu_status_i2c_addr = PSU_STS_I2C_MAPPING[self.psu_index]['addr']
+            self.psu_status_path = SYSFS_PATH.format(self.psu_status_i2c_num, self.psu_status_i2c_addr)
+            self.psu_hwmon_i2c_num = PSU_HWMON_I2C_MAPPING[self.psu_index]['num']
+            self.psu_hwmon_i2c_addr = PSU_HWMON_I2C_MAPPING[self.psu_index]['addr']
+            self.psu_hwmon_path = SYSFS_PATH.format(self.psu_hwmon_i2c_num, self.psu_hwmon_i2c_addr)
+
+
         FanBase.__init__(self)
 
+    def __search_hwmon_dir_name(self, directory):
+        try:
+            dirs = os.listdir(directory)
+            for file in dirs:
+                if file.startswith("hwmon"):
+                    return file
+        except IOError:
+            pass
+        return ''
+
     def __read_txt_file(self, file_path):
         try:
             with open(file_path, 'r') as fd:
@@ -38,22 +81,14 @@ class Fan(FanBase):
                 return data.strip()
         except IOError:
             pass
-        return ""
+        return None
 
-    def __write_txt_file(self, file_path, value):
+    def __write_txt_file(self, file_path, data):
         try:
             with open(file_path, 'w') as fd:
-                fd.write(str(value))
-        except BaseException:
-            return False
-        return True
-
-    def __search_file_by_name(self, directory, file_name):
-        for dirpath, dirnames, files in os.walk(directory):
-            for name in files:
-                file_path = os.path.join(dirpath, name)
-                if name in file_name:
-                    return file_path
+                fd.write(data)
+        except IOError:
+            pass
         return None
 
     def get_direction(self):
@@ -63,38 +98,46 @@ class Fan(FanBase):
             A string, either FAN_DIRECTION_INTAKE or FAN_DIRECTION_EXHAUST
             depending on fan direction
         """
-        index1=self.fan_tray_index
-        if self.fan_tray_index>6:
-            index1=self.fan_tray_index%7
-        fan_direction_file = (FAN_PATH +
-            self.fan_direction.format(index1+1))
-        raw = self.__read_txt_file(fan_direction_file).strip('\r\n')
-        direction = self.FAN_DIRECTION_INTAKE if str(
-            raw).upper() == "1" else self.FAN_DIRECTION_EXHAUST
+        direction = 0
+        if self.is_psu_fan:
+            path= "{}/psu_fan_dir".format(self.psu_status_path)
+            direction=self.__read_txt_file(path)
+            if direction is None:
+                return self.FAN_DIRECTION_EXHAUST
+        elif self.get_presence():
+            path= "{}/fan{}_direction".format(FAN_PATH, self.fan_tray_index + 1)
+            direction=self.__read_txt_file(path)
+            if direction is None:
+                return self.FAN_DIRECTION_EXHAUST
+
+        return self.FAN_DIRECTION_EXHAUST if int(direction) == 0 else self.FAN_DIRECTION_INTAKE
 
-        return direction
 
     def get_speed(self):
         """
         Retrieves the speed of fan as a percentage of full speed
         Returns:
             An integer, the percentage of full fan speed, in the range 0 (off)
-                 to 12000 (full speed)
-        """
-        if self.fan_tray_index<=6:
-            index1=self.fan_tray_index
-            speed = 0
-            if self.get_presence():
-                fan_speed_file = (FAN_PATH +
-                self.fan_speed_rpm.format(index1+1,"front"))
-                speed = self.__read_txt_file(fan_speed_file).strip('\r\n')
-        else:
-            index1=self.fan_tray_index%7
-            if self.get_presence():
-                fan_speed_file = (FAN_PATH +
-                self.fan_speed_rpm.format(index1+1,"rear"))
-                speed = self.__read_txt_file(fan_speed_file).strip('\r\n')
-            
+                 to 100 (full speed)
+
+        """
+        speed = 0
+        if self.is_psu_fan:
+            psu_fan_path= "{}/{}".format(self.psu_hwmon_path, 'fan1_input')
+            fan_speed_rpm = self.__read_txt_file(psu_fan_path)
+            if fan_speed_rpm is not None:
+                speed = (int(fan_speed_rpm,10))*100/33000
+                if speed > 100:
+                    speed=100
+            else:
+                return 0
+        elif self.get_presence():
+            path= "{}/fan_duty_cycle_percentage".format(FAN_PATH)
+            speed=self.__read_txt_file(path)
+            if speed is None:
+                return 0
+            return int(int(speed)*100/255)
+
         return int(speed)
 
     def get_target_speed(self):
@@ -103,22 +146,14 @@ class Fan(FanBase):
         Returns:
             An integer, the percentage of full fan speed, in the range 0 (off)
                  to 100 (full speed)
-        """
-        if self.fan_tray_index<=6:
-            index1=self.fan_tray_index
-            speed = 0
-            if self.get_presence():
-                fan_speed_file = (FAN_PATH +
-                self.fan_speed_rpm.format(index1+1,"front"))
-                speed = self.__read_txt_file(fan_speed_file).strip('\r\n')
-        else:
-            index1=self.fan_tray_index%7
-            if self.get_presence():
-                fan_speed_file = (FAN_PATH +
-                self.fan_speed_rpm.format(index1+1,"rear"))
-                speed = self.__read_txt_file(fan_speed_file).strip('\r\n')
 
-        return int(speed)
+        Note:
+            speed_pc = pwm_target/255*100
+
+            0   : when PWM mode is use
+            pwm : when pwm mode is not use
+        """
+        return self.get_speed()
 
     def get_speed_tolerance(self):
         """
@@ -127,7 +162,7 @@ class Fan(FanBase):
             An integer, the percentage of variance from target speed which is
                  considered tolerable
         """
-        return 10
+        return SPEED_TOLERANCE
 
     def set_speed(self, speed):
         """
@@ -138,13 +173,8 @@ class Fan(FanBase):
         Returns:
             A boolean, True if speed is set successfully, False if not
 
-        Note:
-            Depends on pwm or target mode is selected:
-            1) pwm = speed_pc * 255             <-- Currently use this mode.
-            2) target_pwm = speed_pc * 100 / 255
-             2.1) set pwm{}_enable to 3
-
         """
+
         return False
 
     def set_status_led(self, color):
@@ -156,7 +186,22 @@ class Fan(FanBase):
         Returns:
             bool: True if status LED state is set successfully, False if not
         """
-        return False
+        return False #Not supported
+
+    def get_status_led(self):
+        """
+        Gets the state of the fan status LED
+        Returns:
+            A string, one of the predefined STATUS_LED_COLOR_* strings above
+        """
+        status=self.get_presence()
+        if status is None:
+            return  self.STATUS_LED_COLOR_OFF
+
+        return {
+            1: self.STATUS_LED_COLOR_GREEN,
+            0: self.STATUS_LED_COLOR_RED
+        }.get(status, self.STATUS_LED_COLOR_OFF)
 
     def get_name(self):
         """
@@ -164,24 +209,30 @@ class Fan(FanBase):
             Returns:
             string: The name of the device
         """
-        fan_name = FAN_NAME_LIST[self.fan_tray_index]
+
+        fan_name = FAN_NAME_LIST[self.fan_tray_index*2 + self.fan_index] \
+            if not self.is_psu_fan \
+            else "PSU-{} FAN-{}".format(self.psu_index+1, self.fan_index+1)
 
         return fan_name
 
     def get_presence(self):
         """
-        Retrieves the presence of the PSU
+        Retrieves the presence of the FAN
         Returns:
-            bool: True if PSU is present, False if not
+            bool: True if FAN is present, False if not
         """
-        index1=self.fan_tray_index
-        if self.fan_tray_index>6:
-            index1=self.fan_tray_index%7
-        fan_direction_file = (FAN_PATH +
-                              self.fan_presence.format(index1+1))
-        present_str = self.__read_txt_file(fan_direction_file) or '1'
 
-        return int(present_str) == 1
+        if self.is_psu_fan:
+            present_path="{}/psu_present".format(self.psu_status_path)
+        else:
+            present_path="{}/fan{}_presence".format(FAN_PATH, self.fan_tray_index + 1)
+
+        val=self.__read_txt_file(present_path)
+        if val is not None:
+            return int(val, 10)==1
+        else:
+            return False
 
     def get_status(self):
         """
@@ -189,4 +240,55 @@ class Fan(FanBase):
         Returns:
             A boolean value, True if device is operating properly, False if not
         """
-        return self.get_presence() and self.get_speed() > 0
+        if self.is_psu_fan:
+            psu_fan_path= "{}/{}".format(self.psu_status_path, 'psu_power_good')
+            val=self.__read_txt_file(psu_fan_path)
+            if val is not None:
+                return int(val, 10)==1
+            else:
+                return False
+        else:
+            status=self.get_presence()
+            if status is None:
+                return  False
+            return status
+
+
+    def get_model(self):
+        """
+        Retrieves the model number (or part number) of the device
+        Returns:
+            string: Model/part number of device
+        """
+
+        return "N/A"
+
+    def get_serial(self):
+        """
+        Retrieves the serial number of the device
+        Returns:
+            string: Serial number of device
+        """
+        return "N/A"
+
+    def get_position_in_parent(self):
+        """
+        Retrieves 1-based relative physical position in parent device.
+        If the agent cannot determine the parent-relative position
+        for some reason, or if the associated value of
+        entPhysicalContainedIn is'0', then the value '-1' is returned
+        Returns:
+            integer: The 1-based relative physical position in parent device
+            or -1 if cannot determine the position
+        """
+        return (self.fan_tray_index * 2 + self.fan_index + 1) \
+            if not self.is_psu_fan else (self.psu_index + 1)
+
+    def is_replaceable(self):
+        """
+        Indicate whether this device is replaceable.
+        Returns:
+            bool: True if it is replaceable.
+        """
+        return True if not self.is_psu_fan else False
+
diff --git a/platform/innovium/sonic-platform-modules-wistron/sw-to3200k/sonic_platform/psu.py b/platform/innovium/sonic-platform-modules-wistron/sw-to3200k/sonic_platform/psu.py
index c26b82ee4..78089ca3c 100644
--- a/platform/innovium/sonic-platform-modules-wistron/sw-to3200k/sonic_platform/psu.py
+++ b/platform/innovium/sonic-platform-modules-wistron/sw-to3200k/sonic_platform/psu.py
@@ -22,12 +22,20 @@ class Psu(PsuBase):
                       "/sys/bus/i2c/devices/0-005a"]
 
     def __init__(self, psu_index):
+        self._fan_list = []
         self.PSU_TEMP_MAX = 85 * 1000
         self.PSU_OUTPUT_POWER_MAX = 1300 * 1000
         self.PSU_OUTPUT_VOLTAGE_MIN = 11400
         self.PSU_OUTPUT_VOLTAGE_MAX = 12600
         self.index = psu_index
         PsuBase.__init__(self)
+        self.__initialize_fan()
+
+    def __initialize_fan(self):
+        from sonic_platform.fan import Fan
+        for fan_index in range(0, 1):
+                fan = Fan(fan_index, 0, is_psu_fan=True, psu_index=self.index)
+                self._fan_list.append(fan)
 
     def __read_txt_file(self, file_path):
         try:
@@ -38,15 +46,14 @@ class Psu(PsuBase):
             pass
         return ""
 
-    def get_fan(self):
+    def get_fan(self, index):
         """
         Retrieves object representing the fan module contained in this PSU
         Returns:
             An object dervied from FanBase representing the fan module
             contained in this PSU
         """
-        # Hardware not supported
-        return False
+        return self._fan_list[index]
 
     def get_powergood_status(self):
         """
@@ -84,7 +91,7 @@ class Psu(PsuBase):
             bool: True if PSU is present, False if not
         """
         attr_file ='psu_present'
-        attr_path = self.SYSFS_PSU_DIR[self.index-1] +'/' + attr_file
+        attr_path = self.SYSFS_PSU_DIR[self.index] +'/' + attr_file
         status = 0
         try:
             with open(attr_path, 'r') as psu_prs:
@@ -101,7 +108,7 @@ class Psu(PsuBase):
             A boolean value, True if device is operating properly, False if not
         """
         attr_file = 'psu_power_good'
-        attr_path = self.SYSFS_PSU_DIR[self.index-1] +'/' + attr_file
+        attr_path = self.SYSFS_PSU_DIR[self.index] +'/' + attr_file
         status = 0
         try:
             with open(attr_path, 'r') as power_status:
@@ -120,13 +127,11 @@ class Psu(PsuBase):
         try:
             if self.get_presence():
                 attr_file = 'psu_model_name'
-                attr_path = self.SYSFS_PSU_DIR[self.index-1] +'/' + attr_file
+                attr_path = self.SYSFS_PSU_DIR[self.index] +'/' + attr_file
                 val = self.__read_txt_file(attr_path)
                 return str(val)
         except Exception as e:
-            logger.error(str(e))
-
-        return None
+            return None
 
     def get_serial(self):
         """
@@ -137,13 +142,11 @@ class Psu(PsuBase):
         try:
             if self.get_presence():
                 attr_file = 'psu_serial_number'
-                attr_path = self.SYSFS_PSU_DIR[self.index-1] +'/' + attr_file
+                attr_path = self.SYSFS_PSU_DIR[self.index] +'/' + attr_file
                 val = self.__read_txt_file(attr_path)
                 return str(val)
         except Exception as e:
-            logger.error(str(e))
-
-        return None
+            return None
 
     def get_voltage(self):
         """
@@ -154,13 +157,11 @@ class Psu(PsuBase):
         try:
             if self.get_presence():
                 attr_file = 'psu_v_out'
-                attr_path = self.STATUS_PSU_DIR[self.index-1] +'/' + attr_file
+                attr_path = self.STATUS_PSU_DIR[self.index] +'/' + attr_file
                 val = self.__read_txt_file(attr_path)
-                return int(val)
+                return float(val) / 1000.0
         except Exception as e:
-            logger.error(str(e))
-
-        return None
+            return None
 
     def get_current(self):
         """
@@ -171,13 +172,11 @@ class Psu(PsuBase):
         try:
             if self.get_presence():
                 attr_file = 'psu_i_out'
-                attr_path = self.STATUS_PSU_DIR[self.index-1] +'/' + attr_file
+                attr_path = self.STATUS_PSU_DIR[self.index] +'/' + attr_file
                 val = self.__read_txt_file(attr_path)
-                return int(val)
+                return float(val) / 1000.0
         except Exception as e:
-            logger.error(str(e))
-
-        return None
+            return None
 
     def get_power(self):
         """
@@ -188,13 +187,11 @@ class Psu(PsuBase):
         try:
             if self.get_presence():
                 attr_file = 'psu_p_out'
-                attr_path = self.STATUS_PSU_DIR[self.index-1] +'/' + attr_file
+                attr_path = self.STATUS_PSU_DIR[self.index] +'/' + attr_file
                 val = self.__read_txt_file(attr_path)
-                return int(val)
+                return float(val) / 1000000.0
         except Exception as e:
-            logger.error(str(e))
-
-        return None
+            return None
 
     def get_status_led(self):
         """
@@ -221,13 +218,11 @@ class Psu(PsuBase):
         try:
             if self.get_presence():
                 attr_file = 'psu_temp1_input'
-                attr_path = self.STATUS_PSU_DIR[self.index-1] +'/' + attr_file
+                attr_path = self.STATUS_PSU_DIR[self.index] +'/' + attr_file
                 val = self.__read_txt_file(attr_path)
-                return int(val)
+                return float(val) / 1000.0
         except Exception as e:
-            logger.error(str(e))
-
-        return None
+            return None
 
     def get_temperature_high_threshold(self):
         """
@@ -272,7 +267,42 @@ class Psu(PsuBase):
         Returns:
             integer: The 1-based relative physical position in parent device or -1 if cannot determine the position
         """
-        return -1
+        return self.index + 1
 
     def is_replaceable(self):
         return True
+
+    def get_revision(self):
+        """
+        Retrieves the hardware revision of the device
+        Returns:
+            string: Revision value of device
+        """
+        try:
+            if self.get_presence():
+                attr_file = 'psu_mfr_revision'
+                attr_path = self.STATUS_PSU_DIR[self.index] +'/' + attr_file
+                with open(attr_path, 'r') as revision:
+                    val = revision.read()
+                return val.strip()
+        except IOError:
+            return None
+
+    def get_num_fans(self):
+        """
+        Retrieves the number of fan modules available on this PSU
+
+        Returns:
+            An integer, the number of fan modules available on this PSU
+        """
+        return len(self._fan_list)
+
+    def get_all_fans(self):
+        """
+        Retrieves all fan modules available on this PSU
+
+        Returns:
+            A list of objects derived from FanBase representing all fan
+            modules available on this PSU
+        """
+        return self._fan_list
diff --git a/platform/innovium/sonic-platform-modules-wistron/sw-to3200k/sonic_platform/sfp.py b/platform/innovium/sonic-platform-modules-wistron/sw-to3200k/sonic_platform/sfp.py
index 004bda2ad..13d6ece44 100644
--- a/platform/innovium/sonic-platform-modules-wistron/sw-to3200k/sonic_platform/sfp.py
+++ b/platform/innovium/sonic-platform-modules-wistron/sw-to3200k/sonic_platform/sfp.py
@@ -5,227 +5,32 @@
 # provides the sfp device status which are available in the platform
 #############################################################################
 try:
-    from sonic_platform_base.sfp_base import SfpBase
-    from sonic_platform_base.sonic_sfp.sff8436 import sff8436InterfaceId
-    from sonic_platform_base.sonic_sfp.sff8436 import sff8436Dom
-    from sonic_platform_base.sonic_sfp.qsfp_dd import qsfp_dd_InterfaceId
-    from sonic_platform_base.sonic_sfp.qsfp_dd import qsfp_dd_Dom
-    from sonic_platform_base.sonic_sfp.sffbase import sffbase
+    from sonic_platform_base.sonic_xcvr.sfp_optoe_base import SfpOptoeBase
     from sonic_py_common.logger import Logger
     import sys
-except ImportError as e:
-    raise ImportError(str(e) + "- required module not found")
+    import time
+except ImportError as err:
+    raise ImportError(str(err) + "- required module not found")
 
-# definitions of the offset and width for values in XCVR info eeprom
-XCVR_INTFACE_BULK_OFFSET = 0
-XCVR_INTFACE_BULK_WIDTH_QSFP = 20
-XCVR_INTFACE_BULK_WIDTH_SFP = 21
-XCVR_TYPE_OFFSET = 0
-XCVR_TYPE_WIDTH = 1
-XCVR_EXT_TYPE_OFFSET = 1
-XCVR_EXT_TYPE_WIDTH = 1
-XCVR_CONNECTOR_OFFSET = 2
-XCVR_CONNECTOR_WIDTH = 1
-XCVR_COMPLIANCE_CODE_OFFSET = 3
-XCVR_COMPLIANCE_CODE_WIDTH = 8
-XCVR_ENCODING_OFFSET = 11
-XCVR_ENCODING_WIDTH = 1
-XCVR_NBR_OFFSET = 12
-XCVR_NBR_WIDTH = 1
-XCVR_EXT_RATE_SEL_OFFSET = 13
-XCVR_EXT_RATE_SEL_WIDTH = 1
-XCVR_CABLE_LENGTH_OFFSET = 14
-XCVR_CABLE_LENGTH_WIDTH_QSFP = 5
-XCVR_CABLE_LENGTH_WIDTH_SFP = 6
-XCVR_VENDOR_NAME_OFFSET = 20
-XCVR_VENDOR_NAME_WIDTH = 16
-XCVR_VENDOR_OUI_OFFSET = 37
-XCVR_VENDOR_OUI_WIDTH = 3
-XCVR_VENDOR_PN_OFFSET = 40
-XCVR_VENDOR_PN_WIDTH = 16
-XCVR_HW_REV_OFFSET = 56
-XCVR_HW_REV_WIDTH_OSFP = 2
-XCVR_HW_REV_WIDTH_QSFP = 2
-XCVR_HW_REV_WIDTH_SFP = 4
-XCVR_EXT_SPECIFICATION_COMPLIANCE_OFFSET = 64
-XCVR_EXT_SPECIFICATION_COMPLIANCE_WIDTH = 1
-XCVR_VENDOR_SN_OFFSET = 68
-XCVR_VENDOR_SN_WIDTH = 16
-XCVR_VENDOR_DATE_OFFSET = 84
-XCVR_VENDOR_DATE_WIDTH = 8
-XCVR_DOM_CAPABILITY_OFFSET = 92
-XCVR_DOM_CAPABILITY_WIDTH = 2
-
-# definitions of the offset and width for values in XCVR_QSFP_DD info eeprom
-XCVR_EXT_TYPE_OFFSET_QSFP_DD = 72
-XCVR_EXT_TYPE_WIDTH_QSFP_DD = 2
-XCVR_CONNECTOR_OFFSET_QSFP_DD = 75
-XCVR_CONNECTOR_WIDTH_QSFP_DD = 1
-XCVR_CABLE_LENGTH_OFFSET_QSFP_DD = 74
-XCVR_CABLE_LENGTH_WIDTH_QSFP_DD = 1
-XCVR_HW_REV_OFFSET_QSFP_DD = 36
-XCVR_HW_REV_WIDTH_QSFP_DD = 2
-XCVR_VENDOR_DATE_OFFSET_QSFP_DD = 54
-XCVR_VENDOR_DATE_WIDTH_QSFP_DD = 8
-XCVR_DOM_CAPABILITY_OFFSET_QSFP_DD = 2
-XCVR_DOM_CAPABILITY_WIDTH_QSFP_DD = 1
-XCVR_MEDIA_TYPE_OFFSET_QSFP_DD = 85
-XCVR_MEDIA_TYPE_WIDTH_QSFP_DD = 1
-XCVR_FIRST_APPLICATION_LIST_OFFSET_QSFP_DD = 86
-XCVR_FIRST_APPLICATION_LIST_WIDTH_QSFP_DD = 32
-XCVR_SECOND_APPLICATION_LIST_OFFSET_QSFP_DD = 351
-XCVR_SECOND_APPLICATION_LIST_WIDTH_QSFP_DD = 28
-
-XCVR_INTERFACE_DATA_START = 0
-XCVR_INTERFACE_DATA_SIZE = 92
-SFP_MODULE_ADDRA2_OFFSET = 256
-SFP_MODULE_THRESHOLD_OFFSET = 0
-SFP_MODULE_THRESHOLD_WIDTH = 56
-
-QSFP_DOM_BULK_DATA_START = 22
-QSFP_DOM_BULK_DATA_SIZE = 36
-SFP_DOM_BULK_DATA_START = 96
-SFP_DOM_BULK_DATA_SIZE = 10
-
-QSFP_DD_DOM_BULK_DATA_START = 14
-QSFP_DD_DOM_BULK_DATA_SIZE = 4
-
-# definitions of the offset for values in OSFP info eeprom
-OSFP_TYPE_OFFSET = 0
-OSFP_VENDOR_NAME_OFFSET = 129
-OSFP_VENDOR_PN_OFFSET = 148
-OSFP_HW_REV_OFFSET = 164
-OSFP_VENDOR_SN_OFFSET = 166
-
-# definitions of the offset for values in QSFP_DD info eeprom
-QSFP_DD_TYPE_OFFSET = 0
-QSFP_DD_VENDOR_NAME_OFFSET = 1
-QSFP_DD_VENDOR_PN_OFFSET = 20
-QSFP_DD_VENDOR_SN_OFFSET = 38
-QSFP_DD_VENDOR_OUI_OFFSET = 17
-
-#definitions of the offset and width for values in DOM info eeprom
-QSFP_DOM_REV_OFFSET = 1
-QSFP_DOM_REV_WIDTH = 1
-QSFP_TEMPE_OFFSET = 22
-QSFP_TEMPE_WIDTH = 2
-QSFP_VOLT_OFFSET = 26
-QSFP_VOLT_WIDTH = 2
-QSFP_VERSION_COMPLIANCE_OFFSET = 1
-QSFP_VERSION_COMPLIANCE_WIDTH = 2
-QSFP_CHANNL_MON_OFFSET = 34
-QSFP_CHANNL_MON_WIDTH = 16
-QSFP_CHANNL_MON_WITH_TX_POWER_WIDTH = 24
-QSFP_CHANNL_DISABLE_STATUS_OFFSET = 86
-QSFP_CHANNL_DISABLE_STATUS_WIDTH = 1
-QSFP_CHANNL_RX_LOS_STATUS_OFFSET = 3
-QSFP_CHANNL_RX_LOS_STATUS_WIDTH = 1
-QSFP_CHANNL_TX_FAULT_STATUS_OFFSET = 4
-QSFP_CHANNL_TX_FAULT_STATUS_WIDTH = 1
-QSFP_CONTROL_OFFSET = 86
-QSFP_CONTROL_WIDTH = 8
-QSFP_MODULE_MONITOR_OFFSET = 0
-QSFP_MODULE_MONITOR_WIDTH = 9
-QSFP_POWEROVERRIDE_OFFSET = 93
-QSFP_POWEROVERRIDE_WIDTH = 1
-QSFP_POWEROVERRIDE_BIT = 0
-QSFP_POWERSET_BIT = 1
-QSFP_OPTION_VALUE_OFFSET = 192
-QSFP_OPTION_VALUE_WIDTH = 4
-
-QSFP_MODULE_UPPER_PAGE3_START = 384
-QSFP_MODULE_THRESHOLD_OFFSET = 128
-QSFP_MODULE_THRESHOLD_WIDTH = 24
-QSFP_CHANNL_THRESHOLD_OFFSET = 176
-QSFP_CHANNL_THRESHOLD_WIDTH = 24
-
-#definitions of the offset and width for values in DOM info eeprom
-QSFP_DD_CHANNL_STATUS_OFFSET = 26
-QSFP_DD_CHANNL_STATUS_WIDTH = 1
-
-QSFP_DD_FLAT_MEM =   {'offset': 2, 'width': 1, 'page': 'low'}
-
-QSFP_DD_MODULE_MON = {'offset': 14, 'width': 4, 'page': 'low'}
-QSFP_DD_TEMPE_MON =  {'offset': 14, 'width': 2, 'page': 'low'}
-QSFP_DD_VOLT_MON =   {'offset': 16, 'width': 2, 'page': 'low'}
-
-QSFP_DD_MON_SUPPORT = {'offset': 159, 'width': 2, 'page': 1 }
-
-QSFP_DD_CHANNL_MON = {'offset': 154, 'width': 48, 'page': 11 }
-QSFP_DD_TX_POWER =   {'offset': 154, 'width': 16, 'page': 11 }
-QSFP_DD_TX_BIAS =    {'offset': 170, 'width': 16, 'page': 11 }
-QSFP_DD_RX_POWER =   {'offset': 186, 'width': 16, 'page': 11 }
-
-QSFP_DD_MODULE_THRESHOLD = {'offset': 128, 'width': 72, 'page': 2 }
-
-QSFP_DD_CHANNL_DISABLE_STATUS = {'offset': 130, 'width': 1, 'page': 10 }
-QSFP_DD_CHANNL_RX_LOS_STATUS =   {'offset': 147, 'width': 1, 'page': 11 }
-QSFP_DD_CHANNL_TX_FAULT_STATUS = {'offset': 135, 'width': 1, 'page': 11 }
 
 QSFP_TYPE_CODE_LIST = [
-    '0d', # QSFP+ or later
-    '11' # QSFP28 or later
+    '0x0d', # QSFP+ or later
+    '0x11'  # QSFP28 or later
 ]
 
 QSFP_DD_TYPE_CODE_LIST = [
-    '18' # QSFP-DD Double Density 8X Pluggable Transceiver
+    '0x18' # QSFP-DD Double Density 8X Pluggable Transceiver
 ]
 
-qsfp_cable_length_tup = ('Length(km)', 'Length OM3(2m)',
-                         'Length OM2(m)', 'Length OM1(m)',
-                         'Length Cable Assembly(m)')
-
-sfp_cable_length_tup = ('LengthSMFkm-UnitsOfKm', 'LengthSMF(UnitsOf100m)',
-                        'Length50um(UnitsOf10m)', 'Length62.5um(UnitsOfm)',
-                        'LengthCable(UnitsOfm)', 'LengthOM3(UnitsOf10m)')
-
-sfp_compliance_code_tup = ('10GEthernetComplianceCode', 'InfinibandComplianceCode',
-                            'ESCONComplianceCodes', 'SONETComplianceCodes',
-                            'EthernetComplianceCodes','FibreChannelLinkLength',
-                            'FibreChannelTechnology', 'SFP+CableTechnology',
-                            'FibreChannelTransmissionMedia','FibreChannelSpeed')
-
-qsfp_compliance_code_tup = ('10/40G Ethernet Compliance Code', 'SONET Compliance codes',
-                            'SAS/SATA compliance codes', 'Gigabit Ethernet Compliant codes',
-                            'Fibre Channel link length/Transmitter Technology',
-                            'Fibre Channel transmission media', 'Fibre Channel Speed')
 
 QSFP_TYPE = "QSFP"
 QSFP_DD_TYPE = "QSFP_DD"
 
 # Global logger class instance
 logger = Logger()
-class ext_qsfp_dd(sffbase):
-    version = '1.0'
-
-    qsfp_dd_mon_capability = {
-        'Tx_bias_support':
-            {'offset': 1,
-             'bit': 0,
-             'type': 'bitvalue'},
-        'Tx_power_support':
-            {'offset': 1,
-             'bit': 1,
-             'type': 'bitvalue'},
-        'Rx_power_support':
-            {'offset': 1,
-             'bit': 2,
-             'type': 'bitvalue'},
-        'Voltage_support':
-            {'offset': 0,
-             'bit': 1,
-             'type': 'bitvalue'},
-        'Temp_support':
-            {'offset': 0,
-             'bit': 0,
-             'type': 'bitvalue'}
-    }
 
-    def parse_mon_capability(self, sn_raw_data, start_pos):
-        return sffbase.parse(self, self.qsfp_dd_mon_capability, sn_raw_data, start_pos)
 
-
-class Sfp(SfpBase):
+class Sfp(SfpOptoeBase):
     """Platform-specific Sfp class"""
 
     # Port number
@@ -275,7 +80,9 @@ class Sfp(SfpBase):
 
     def __init__(self, sfp_index, sfp_type):
         # Init index
+        SfpOptoeBase.__init__(self)
         self.index = sfp_index
+        self.sfp_type = sfp_type
         self.port_num = self.index + 1
 
         # Init eeprom path
@@ -284,15 +91,25 @@ class Sfp(SfpBase):
         eeprom_1_path = '/sys/bus/i2c/devices/0-00{}/eeprom_pg1'
         eeprom_2_path = '/sys/bus/i2c/devices/0-00{}/eeprom_pg2'
         eeprom_3_path = '/sys/bus/i2c/devices/0-00{}/eeprom_pg3'
+        eeprom_4_path = '/sys/bus/i2c/devices/0-00{}/eeprom_pg4'
         eeprom_11_path = '/sys/bus/i2c/devices/0-00{}/eeprom_pg11'
         name_path = '/sys/bus/i2c/devices/0-00{}/port_name'
+        power_mode_path = '/sys/bus/i2c/devices/0-00{}/power_mode'
+        grid_path = '/sys/bus/i2c/devices/0-00{}/grid'
+        freq_path = '/sys/bus/i2c/devices/0-00{}/freq'
+        outp_path = '/sys/bus/i2c/devices/0-00{}/output_power'
         self.port_to_eeprom_low_mapping = {}
         self.port_to_eeprom_0_mapping = {}
         self.port_to_eeprom_1_mapping = {}
         self.port_to_eeprom_2_mapping = {}
         self.port_to_eeprom_3_mapping = {}
+        self.port_to_eeprom_4_mapping = {}
         self.port_to_eeprom_11_mapping = {}
         self.port_to_name_mapping = {}
+        self.port_to_power_mode_mapping = {}
+        self.port_to_grid_mapping = {}
+        self.port_to_freq_mapping = {}
+        self.port_to_outp_mapping = {}
         for x in range(self.PORT_START, self.PORT_END + 1):
             p_num = x - 1 if self.PORT_START == 1 else x
             self.port_to_eeprom_low_mapping[p_num] = eeprom_low_path.format(self.port_to_i2c_mapping[p_num])
@@ -300,719 +117,54 @@ class Sfp(SfpBase):
             self.port_to_eeprom_1_mapping[p_num] = eeprom_1_path.format(self.port_to_i2c_mapping[p_num])
             self.port_to_eeprom_2_mapping[p_num] = eeprom_2_path.format(self.port_to_i2c_mapping[p_num])
             self.port_to_eeprom_3_mapping[p_num] = eeprom_3_path.format(self.port_to_i2c_mapping[p_num])
+            self.port_to_eeprom_4_mapping[p_num] = eeprom_4_path.format(self.port_to_i2c_mapping[p_num])
             self.port_to_eeprom_11_mapping[p_num] = eeprom_11_path.format(self.port_to_i2c_mapping[p_num])
             self.port_to_name_mapping[p_num] = name_path.format(self.port_to_i2c_mapping[p_num])
+            self.port_to_power_mode_mapping[p_num] = power_mode_path.format(self.port_to_i2c_mapping[p_num])
+            self.port_to_grid_mapping[p_num] = grid_path.format(self.port_to_i2c_mapping[p_num])
+            self.port_to_freq_mapping[p_num] = freq_path.format(self.port_to_i2c_mapping[p_num])
+            self.port_to_outp_mapping[p_num] = outp_path.format(self.port_to_i2c_mapping[p_num])
 
-        self._detect_sfp_type(sfp_type)
-        self._dom_capability_detect()
-        SfpBase.__init__(self)
+        self.reinit()
 
     def reinit(self):
         self._detect_sfp_type(self.sfp_type)
-        self._dom_capability_detect()
-
-    def get_presence(self):
-        """
-        Retrieves the presence of the SFP
-        Returns:
-            bool: True if SFP is present, False if not
-        """
-        presence = False
-        try:
-            if self.index < 16:
-                pres_path=self.PRS_1_16_PATH.format(self.port_num)
-            else:
-                pres_path=self.PRS_17_32_PATH.format(self.port_num)
-            with open(pres_path, 'r') as sfp_presence:
-                presence = int(sfp_presence.read(), 16)
-        except IOError:
-            return False
-        logger.log_info("debug:port_ %s sfp presence is %s" % (str(self.index), str(presence)))
-        return presence
-
-    def _read_eeprom_specific_bytes(self, offset, num_bytes, page = 0):
-        sysfsfile_eeprom = None
-        eeprom_raw = []
-        for i in range(0, num_bytes):
-            eeprom_raw.append("0x00")
-
-        if offset < 128:
-            sysfs_sfp_i2c_client_eeprom_path = self.port_to_eeprom_low_mapping[self.index]
-        elif page == 0 :
-            sysfs_sfp_i2c_client_eeprom_path = self.port_to_eeprom_0_mapping[self.index]
-            offset = offset - 128
-        elif page == 1 :
-            sysfs_sfp_i2c_client_eeprom_path = self.port_to_eeprom_1_mapping[self.index]
-            offset = offset - 128
-        elif page == 2 :
-            sysfs_sfp_i2c_client_eeprom_path = self.port_to_eeprom_2_mapping[self.index]
-            offset = offset - 128
-        elif page == 3 :
-            sysfs_sfp_i2c_client_eeprom_path = self.port_to_eeprom_3_mapping[self.index]
-            offset = offset - 128
-
-        elif page == 11 :
-            sysfs_sfp_i2c_client_eeprom_path = self.port_to_eeprom_11_mapping[self.index]
-            offset = offset - 128
-        else:
-            sysfs_sfp_i2c_client_eeprom_path = self.port_to_eeprom_low_mapping[self.index]
-            offset = offset - 128
-
-        try:
-            sysfsfile_eeprom = open(sysfs_sfp_i2c_client_eeprom_path, mode="rb", buffering=0)
-            sysfsfile_eeprom.seek(offset)
-            raw = sysfsfile_eeprom.read(num_bytes)
-            if sys.version_info[0] >= 3:
-                for n in range(0, num_bytes):
-                    eeprom_raw[n] = hex(raw[n])[2:].zfill(2)
-            else:
-                for n in range(0, num_bytes):
-                    eeprom_raw[n] = hex(ord(raw[n]))[2:].zfill(2)
-
-        except BaseException:
-            pass
-        finally:
-            if sysfsfile_eeprom:
-                sysfsfile_eeprom.close()
-
-        return eeprom_raw
 
     def _detect_sfp_type(self, sfp_type):
         eeprom_raw = []
-        eeprom_raw = self._read_eeprom_specific_bytes(XCVR_TYPE_OFFSET, XCVR_TYPE_WIDTH)
-        if eeprom_raw:
-            if eeprom_raw[0] in QSFP_TYPE_CODE_LIST:
+        eeprom_raw = self._xcvr_api_factory._get_id()
+        if eeprom_raw is not None:
+            eeprom_raw = hex(eeprom_raw)
+            if eeprom_raw in QSFP_TYPE_CODE_LIST:
                 self.sfp_type = QSFP_TYPE
-            elif eeprom_raw[0] in QSFP_DD_TYPE_CODE_LIST:
+            elif eeprom_raw in QSFP_DD_TYPE_CODE_LIST:
                 self.sfp_type = QSFP_DD_TYPE
             else:
                 # we don't regonize this identifier value, treat the xSFP module as the default type
                 self.sfp_type = sfp_type
-                logger.log_info("Identifier value of {} module {} is {} which isn't regonized and will be treated as default type ({})".format(
-                    sfp_type, self.index, eeprom_raw[0], sfp_type
-                ))
         else:
             # eeprom_raw being None indicates the module is not present.
             # in this case we treat it as the default type according to the SKU
             self.sfp_type = sfp_type
 
-    def _dom_capability_detect(self):
-
-        self.dom_channel_monitor_supported = True
-        self.dom_module_monitor_supported = True
-        self.dom_channel_treshold_supported = True
-        self.dom_module_treshold_supported = True
-
-        self.dom_supported = False
-        self.dom_temp_supported = False
-        self.dom_volt_supported = False
-        self.dom_rx_power_supported = False
-        self.dom_tx_bias_supported = False
-        self.dom_tx_power_supported = False
-        self.dom_thresholds_supported =False
-
-
-        if self.sfp_type == QSFP_TYPE:
-            sfpi_obj = sff8436InterfaceId()
-            if sfpi_obj is None:
-                self.dom_supported = False
-            offset = 128
-
-            # QSFP capability byte parse, through this byte can know whether it support tx_power or not.
-            # TODO: in the future when decided to migrate to support SFF-8636 instead of SFF-8436,
-            # need to add more code for determining the capability and version compliance
-            # in SFF-8636 dom capability definitions evolving with the versions.
-            qsfp_dom_capability_raw = self._read_eeprom_specific_bytes((offset + XCVR_DOM_CAPABILITY_OFFSET), XCVR_DOM_CAPABILITY_WIDTH)
-            if qsfp_dom_capability_raw is not None:
-                qsfp_version_compliance_raw = self._read_eeprom_specific_bytes(QSFP_VERSION_COMPLIANCE_OFFSET, QSFP_VERSION_COMPLIANCE_WIDTH)
-                qsfp_version_compliance = int(qsfp_version_compliance_raw[0], 16)
-                dom_capability = sfpi_obj.parse_qsfp_dom_capability(qsfp_dom_capability_raw, 0)
-                if qsfp_version_compliance >= 0x08:
-                    self.dom_temp_supported = dom_capability['data']['Temp_support']['value'] == 'On'
-                    self.dom_volt_supported = dom_capability['data']['Voltage_support']['value'] == 'On'
-                    self.dom_rx_power_supported = dom_capability['data']['Rx_power_support']['value'] == 'On'
-                    self.dom_tx_power_supported = dom_capability['data']['Tx_power_support']['value'] == 'On'
-                else:
-                    self.dom_temp_supported = True
-                    self.dom_volt_supported = True
-                    self.dom_rx_power_supported = dom_capability['data']['Rx_power_support']['value'] == 'On'
-                    self.dom_tx_power_supported = True
-                self.dom_supported = True
-                sfpd_obj = sff8436Dom()
-                if sfpd_obj is None:
-                    return None
-                qsfp_option_value_raw = self._read_eeprom_specific_bytes(QSFP_OPTION_VALUE_OFFSET, QSFP_OPTION_VALUE_WIDTH)
-                if qsfp_option_value_raw is not None:
-                    optional_capability = sfpd_obj.parse_option_params(qsfp_option_value_raw, 0)
-                    self.dom_tx_disable_supported = optional_capability['data']['TxDisable']['value'] == 'On'
-                dom_status_indicator = sfpd_obj.parse_dom_status_indicator(qsfp_version_compliance_raw, 1)
-                self.qsfp_page3_available = dom_status_indicator['data']['FlatMem']['value'] == 'Off'
-            else:
-                self.dom_supported = False
-                self.dom_temp_supported = False
-                self.dom_volt_supported = False
-                self.dom_rx_power_supported = False
-                self.dom_tx_power_supported = False
-                self.qsfp_page3_available = False
-
-        elif self.sfp_type == QSFP_DD_TYPE:
-            sfpi_obj = qsfp_dd_InterfaceId()
-            if sfpi_obj is None:
-                self.dom_supported = False
-
-            self.dom_temp_supported = True
-            self.dom_volt_supported = True
-
-            # two types of QSFP-DD cable types supported: Copper and Optical.
-            qsfp_dom_capability_raw = self._read_eeprom_specific_bytes(QSFP_DD_FLAT_MEM['offset'], QSFP_DD_FLAT_MEM['width'], QSFP_DD_FLAT_MEM['page'])
-            if qsfp_dom_capability_raw is not None:
-                dom_capability = sfpi_obj.parse_qsfp_dom_capability(qsfp_dom_capability_raw, 0)
-                if dom_capability['data']['Flat_MEM']['value'] == 'Off':
-
-                    ext_dd = ext_qsfp_dd()
-                    mon_sup_raw = self._read_eeprom_specific_bytes(QSFP_DD_MON_SUPPORT['offset'], QSFP_DD_MON_SUPPORT['width'], QSFP_DD_MON_SUPPORT['page'])
-                    mon_sup_data = ext_dd.parse_mon_capability(mon_sup_raw, 0)
-
-                    self.dom_thresholds_supported = mon_sup_data['data']['Tx_power_support']['value'] == 'On'
-                    self.dom_rx_power_supported = mon_sup_data['data']['Tx_power_support']['value'] == 'On'
-                    self.dom_tx_power_supported = mon_sup_data['data']['Rx_power_support']['value'] == 'On'
-                    self.dom_tx_bias_supported = mon_sup_data['data']['Tx_bias_support']['value'] == 'On'
-                    #self.dom_temp_supported = mon_sup_data['data']['Temp_support']['value'] == 'On'
-                    #self.dom_volt_supported = mon_sup_data['data']['Voltage_support']['value'] == 'On'
-                    self.dom_supported = True
-
-        else:
-            self.dom_supported = False
-            self.dom_temp_supported = False
-            self.dom_volt_supported = False
-            self.dom_rx_power_supported = False
-            self.dom_tx_power_supported = False
-
-    def _convert_string_to_num(self, value_str):
-        if "-inf" in value_str:
-            return 'N/A'
-        elif "Unknown" in value_str:
-            return 'N/A'
-        elif 'dBm' in value_str:
-            t_str = value_str.rstrip('dBm')
-            return float(t_str)
-        elif 'mA' in value_str:
-            t_str = value_str.rstrip('mA')
-            return float(t_str)
-        elif 'C' in value_str:
-            t_str = value_str.rstrip('C')
-            return float(t_str)
-        elif 'Volts' in value_str:
-            t_str = value_str.rstrip('Volts')
-            return float(t_str)
-        else:
-            return 'N/A'
-
-    def get_transceiver_info(self):
+    def get_presence(self):
         """
-        Retrieves transceiver info of this SFP
-
+        Retrieves the presence of the SFP
         Returns:
-            A dict which contains following keys/values :
-        ================================================================================
-        keys                       |Value Format   |Information
-        ---------------------------|---------------|----------------------------
-        type                       |1*255VCHAR     |type of SFP
-        hardware_rev               |1*255VCHAR     |hardware version of SFP
-        serial                     |1*255VCHAR     |serial number of the SFP
-        manufacturer               |1*255VCHAR     |SFP vendor name
-        model                      |1*255VCHAR     |SFP model name
-        connector                  |1*255VCHAR     |connector information
-        encoding                   |1*255VCHAR     |encoding information
-        ext_identifier             |1*255VCHAR     |extend identifier
-        ext_rateselect_compliance  |1*255VCHAR     |extended rateSelect compliance
-        cable_length               |INT            |cable length in m
-        mominal_bit_rate           |INT            |nominal bit rate by 100Mbs
-        specification_compliance   |1*255VCHAR     |specification compliance
-        vendor_date                |1*255VCHAR     |vendor date
-        vendor_oui                 |1*255VCHAR     |vendor OUI
-        application_advertisement  |1*255VCHAR     |supported applications advertisement
-        ================================================================================
+            bool: True if SFP is present, False if not
         """
-        transceiver_info_dict = {}
-        compliance_code_dict = {}
-
-        #QSFP
-        if self.sfp_type == QSFP_TYPE:
-            offset = 128
-            vendor_rev_width = XCVR_HW_REV_WIDTH_QSFP
-            interface_info_bulk_width = XCVR_INTFACE_BULK_WIDTH_QSFP
-
-            sfpi_obj = sff8436InterfaceId()
-            if sfpi_obj is None:
-                print("Error: sfp_object open failed")
-                return None
-
-            sfp_interface_bulk_raw = self._read_eeprom_specific_bytes(offset + XCVR_INTERFACE_DATA_START, XCVR_INTERFACE_DATA_SIZE)
-            if sfp_interface_bulk_raw is None:
-                return None
-
-            start = XCVR_INTFACE_BULK_OFFSET - XCVR_INTERFACE_DATA_START
-            end = start + interface_info_bulk_width
-            sfp_interface_bulk_data = sfpi_obj.parse_sfp_info_bulk(sfp_interface_bulk_raw[start : end], 0)
-
-            start = XCVR_VENDOR_NAME_OFFSET - XCVR_INTERFACE_DATA_START
-            end = start + XCVR_VENDOR_NAME_WIDTH
-            sfp_vendor_name_data = sfpi_obj.parse_vendor_name(sfp_interface_bulk_raw[start : end], 0)
-
-            start = XCVR_VENDOR_PN_OFFSET - XCVR_INTERFACE_DATA_START
-            end = start + XCVR_VENDOR_PN_WIDTH
-            sfp_vendor_pn_data = sfpi_obj.parse_vendor_pn(sfp_interface_bulk_raw[start : end], 0)
-
-            start = XCVR_HW_REV_OFFSET - XCVR_INTERFACE_DATA_START
-            end = start + vendor_rev_width
-            sfp_vendor_rev_data = sfpi_obj.parse_vendor_rev(sfp_interface_bulk_raw[start : end], 0)
-
-            start = XCVR_VENDOR_SN_OFFSET - XCVR_INTERFACE_DATA_START
-            end = start + XCVR_VENDOR_SN_WIDTH
-            sfp_vendor_sn_data = sfpi_obj.parse_vendor_sn(sfp_interface_bulk_raw[start : end], 0)
-
-            start = XCVR_VENDOR_OUI_OFFSET - XCVR_INTERFACE_DATA_START
-            end = start + XCVR_VENDOR_OUI_WIDTH
-            sfp_vendor_oui_data = sfpi_obj.parse_vendor_oui(sfp_interface_bulk_raw[start : end], 0)
-
-            start = XCVR_VENDOR_DATE_OFFSET - XCVR_INTERFACE_DATA_START
-            end = start + XCVR_VENDOR_DATE_WIDTH
-            sfp_vendor_date_data = sfpi_obj.parse_vendor_date(sfp_interface_bulk_raw[start : end], 0)
-
-            transceiver_info_dict['type'] = sfp_interface_bulk_data['data']['type']['value']
-            transceiver_info_dict['manufacturer'] = sfp_vendor_name_data['data']['Vendor Name']['value']
-            transceiver_info_dict['model'] = sfp_vendor_pn_data['data']['Vendor PN']['value']
-            transceiver_info_dict['hardware_rev'] = sfp_vendor_rev_data['data']['Vendor Rev']['value']
-            transceiver_info_dict['serial'] = sfp_vendor_sn_data['data']['Vendor SN']['value']
-            transceiver_info_dict['vendor_oui'] = sfp_vendor_oui_data['data']['Vendor OUI']['value']
-            transceiver_info_dict['vendor_date'] = sfp_vendor_date_data['data']['VendorDataCode(YYYY-MM-DD Lot)']['value']
-            transceiver_info_dict['connector'] = sfp_interface_bulk_data['data']['Connector']['value']
-            transceiver_info_dict['encoding'] = sfp_interface_bulk_data['data']['EncodingCodes']['value']
-            transceiver_info_dict['ext_identifier'] = sfp_interface_bulk_data['data']['Extended Identifier']['value']
-            transceiver_info_dict['ext_rateselect_compliance'] = sfp_interface_bulk_data['data']['RateIdentifier']['value']
-            transceiver_info_dict['application_advertisement'] = 'N/A'
-
-            for key in qsfp_cable_length_tup:
-                if key in sfp_interface_bulk_data['data']:
-                    transceiver_info_dict['cable_type'] = key
-                    transceiver_info_dict['cable_length'] = str(sfp_interface_bulk_data['data'][key]['value'])
-
-            for key in qsfp_compliance_code_tup:
-                if key in sfp_interface_bulk_data['data']['Specification compliance']['value']:
-                    compliance_code_dict[key] = sfp_interface_bulk_data['data']['Specification compliance']['value'][key]['value']
-            sfp_ext_specification_compliance_raw = self._read_eeprom_specific_bytes(offset + XCVR_EXT_SPECIFICATION_COMPLIANCE_OFFSET, XCVR_EXT_SPECIFICATION_COMPLIANCE_WIDTH)
-            if sfp_ext_specification_compliance_raw is not None:
-                sfp_ext_specification_compliance_data = sfpi_obj.parse_ext_specification_compliance(sfp_ext_specification_compliance_raw[0 : 1], 0)
-                if sfp_ext_specification_compliance_data['data']['Extended Specification compliance']['value'] != "Unspecified":
-                    compliance_code_dict['Extended Specification compliance'] = sfp_ext_specification_compliance_data['data']['Extended Specification compliance']['value']
-            transceiver_info_dict['specification_compliance'] = str(compliance_code_dict)
-            transceiver_info_dict['nominal_bit_rate'] = str(sfp_interface_bulk_data['data']['Nominal Bit Rate(100Mbs)']['value'])
-
-        #QSFP-DD
-        else:
-            offset = 128
-
-            sfpi_obj = qsfp_dd_InterfaceId()
-            if sfpi_obj is None:
-                print("Error: sfp_object open failed")
-                return None
-
-            sfp_type_raw = self._read_eeprom_specific_bytes((offset + QSFP_DD_TYPE_OFFSET), XCVR_TYPE_WIDTH)
-            if sfp_type_raw is not None:
-                sfp_type_data = sfpi_obj.parse_sfp_type(sfp_type_raw, 0)
-            else:
-                return None
-
-            sfp_vendor_name_raw = self._read_eeprom_specific_bytes((offset + QSFP_DD_VENDOR_NAME_OFFSET), XCVR_VENDOR_NAME_WIDTH)
-            if sfp_vendor_name_raw is not None:
-                sfp_vendor_name_data = sfpi_obj.parse_vendor_name(sfp_vendor_name_raw, 0)
-            else:
-                return None
-
-            sfp_vendor_pn_raw = self._read_eeprom_specific_bytes((offset + QSFP_DD_VENDOR_PN_OFFSET), XCVR_VENDOR_PN_WIDTH)
-            if sfp_vendor_pn_raw is not None:
-                sfp_vendor_pn_data = sfpi_obj.parse_vendor_pn(sfp_vendor_pn_raw, 0)
-            else:
-                return None
-
-            sfp_vendor_rev_raw = self._read_eeprom_specific_bytes((offset + XCVR_HW_REV_OFFSET_QSFP_DD), XCVR_HW_REV_WIDTH_QSFP_DD)
-            if sfp_vendor_rev_raw is not None:
-                sfp_vendor_rev_data = sfpi_obj.parse_vendor_rev(sfp_vendor_rev_raw, 0)
-            else:
-                return None
-
-            sfp_vendor_sn_raw = self._read_eeprom_specific_bytes((offset + QSFP_DD_VENDOR_SN_OFFSET), XCVR_VENDOR_SN_WIDTH)
-            if sfp_vendor_sn_raw is not None:
-                sfp_vendor_sn_data = sfpi_obj.parse_vendor_sn(sfp_vendor_sn_raw, 0)
-            else:
-                return None
-
-            sfp_vendor_oui_raw = self._read_eeprom_specific_bytes((offset + QSFP_DD_VENDOR_OUI_OFFSET), XCVR_VENDOR_OUI_WIDTH)
-            if sfp_vendor_oui_raw is not None:
-                sfp_vendor_oui_data = sfpi_obj.parse_vendor_oui(sfp_vendor_oui_raw, 0)
-            else:
-                return None
-
-            sfp_vendor_date_raw = self._read_eeprom_specific_bytes((offset + XCVR_VENDOR_DATE_OFFSET_QSFP_DD), XCVR_VENDOR_DATE_WIDTH_QSFP_DD)
-            if sfp_vendor_date_raw is not None:
-                sfp_vendor_date_data = sfpi_obj.parse_vendor_date(sfp_vendor_date_raw, 0)
-            else:
-                return None
-
-            sfp_connector_raw = self._read_eeprom_specific_bytes((offset + XCVR_CONNECTOR_OFFSET_QSFP_DD), XCVR_CONNECTOR_WIDTH_QSFP_DD)
-            if sfp_connector_raw is not None:
-                sfp_connector_data = sfpi_obj.parse_connector(sfp_connector_raw, 0)
-            else:
-                return None
-
-            sfp_ext_identifier_raw = self._read_eeprom_specific_bytes((offset + XCVR_EXT_TYPE_OFFSET_QSFP_DD), XCVR_EXT_TYPE_WIDTH_QSFP_DD)
-            if sfp_ext_identifier_raw is not None:
-                sfp_ext_identifier_data = sfpi_obj.parse_ext_iden(sfp_ext_identifier_raw, 0)
-            else:
-                return None
-
-            sfp_cable_len_raw = self._read_eeprom_specific_bytes((offset + XCVR_CABLE_LENGTH_OFFSET_QSFP_DD), XCVR_CABLE_LENGTH_WIDTH_QSFP_DD)
-            if sfp_cable_len_raw is not None:
-                sfp_cable_len_data = sfpi_obj.parse_cable_len(sfp_cable_len_raw, 0)
-            else:
-                return None
-
-            sfp_media_type_raw = self._read_eeprom_specific_bytes(XCVR_MEDIA_TYPE_OFFSET_QSFP_DD, XCVR_MEDIA_TYPE_WIDTH_QSFP_DD)
-            if sfp_media_type_raw is not None:
-                sfp_media_type_dict = sfpi_obj.parse_media_type(sfp_media_type_raw, 0)
-                if sfp_media_type_dict is None:
-                    return None
-
-                host_media_list = ""
-                sfp_application_type_first_list = self._read_eeprom_specific_bytes((XCVR_FIRST_APPLICATION_LIST_OFFSET_QSFP_DD), XCVR_FIRST_APPLICATION_LIST_WIDTH_QSFP_DD)
-                possible_application_count = 8
-                if sfp_application_type_first_list is not None:
-                    sfp_application_type_list = sfp_application_type_first_list
-                else:
-                    return None
-
-                for i in range(0, possible_application_count):
-                    if sfp_application_type_list[i * 4] == 'ff':
-                        break
-                    host_electrical, media_interface = sfpi_obj.parse_application(sfp_media_type_dict, sfp_application_type_list[i * 4], sfp_application_type_list[i * 4 + 1])
-                    host_media_list = host_media_list + host_electrical + ' - ' + media_interface + '\n\t\t\t\t   '
+        presence = False
+        try:
+            if self.index < 16:
+                pres_path = self.PRS_1_16_PATH.format(self.port_num)
             else:
-                return None
-
-            transceiver_info_dict['type'] = str(sfp_type_data['data']['type']['value'])
-            transceiver_info_dict['manufacturer'] = str(sfp_vendor_name_data['data']['Vendor Name']['value'])
-            transceiver_info_dict['model'] = str(sfp_vendor_pn_data['data']['Vendor PN']['value'])
-            transceiver_info_dict['hardware_rev'] = str(sfp_vendor_rev_data['data']['Vendor Rev']['value'])
-            transceiver_info_dict['serial'] = str(sfp_vendor_sn_data['data']['Vendor SN']['value'])
-            transceiver_info_dict['vendor_oui'] = str(sfp_vendor_oui_data['data']['Vendor OUI']['value'])
-            transceiver_info_dict['vendor_date'] = str(sfp_vendor_date_data['data']['VendorDataCode(YYYY-MM-DD Lot)']['value'])
-            transceiver_info_dict['connector'] = str(sfp_connector_data['data']['Connector']['value'])
-            transceiver_info_dict['encoding'] = "Not supported for CMIS cables"
-            transceiver_info_dict['ext_identifier'] = str(sfp_ext_identifier_data['data']['Extended Identifier']['value'])
-            transceiver_info_dict['ext_rateselect_compliance'] = "Not supported for CMIS cables"
-            transceiver_info_dict['specification_compliance'] = "Not supported for CMIS cables"
-            transceiver_info_dict['cable_type'] = "Length Cable Assembly(m)"
-            transceiver_info_dict['cable_length'] = str(sfp_cable_len_data['data']['Length Cable Assembly(m)']['value'])
-            transceiver_info_dict['nominal_bit_rate'] = "Not supported for CMIS cables"
-            transceiver_info_dict['application_advertisement'] = host_media_list
-
-        return transceiver_info_dict
-
-    def get_transceiver_bulk_status(self):
-        """
-        Retrieves transceiver bulk status of this SFP
-
-        Returns:
-            A dict which contains following keys/values :
-        ========================================================================
-        keys                       |Value Format   |Information
-        ---------------------------|---------------|----------------------------
-        RX LOS                     |BOOLEAN        |RX lost-of-signal status,
-                                   |               |True if has RX los, False if not.
-        TX FAULT                   |BOOLEAN        |TX fault status,
-                                   |               |True if has TX fault, False if not.
-        Reset status               |BOOLEAN        |reset status,
-                                   |               |True if SFP in reset, False if not.
-        LP mode                    |BOOLEAN        |low power mode status,
-                                   |               |True in lp mode, False if not.
-        TX disable                 |BOOLEAN        |TX disable status,
-                                   |               |True TX disabled, False if not.
-        TX disabled channel        |HEX            |disabled TX channles in hex,
-                                   |               |bits 0 to 3 represent channel 0
-                                   |               |to channel 3.
-        Temperature                |INT            |module temperature in Celsius
-        Voltage                    |INT            |supply voltage in mV
-        TX bias                    |INT            |TX Bias Current in mA
-        RX power                   |INT            |received optical power in mW
-        TX power                   |INT            |TX output power in mW
-        ========================================================================
-        """
-        transceiver_dom_info_dict = {}
-
-        dom_info_dict_keys = ['temperature',    'voltage',
-                              'rx1power',       'rx2power',
-                              'rx3power',       'rx4power',
-                              'rx5power',       'rx6power',
-                              'rx7power',       'rx8power',
-                              'tx1bias',        'tx2bias',
-                              'tx3bias',        'tx4bias',
-                              'tx5bias',        'tx6bias',
-                              'tx7bias',        'tx8bias',
-                              'tx1power',       'tx2power',
-                              'tx3power',       'tx4power',
-                              'tx5power',       'tx6power',
-                              'tx7power',       'tx8power'
-                             ]
-        transceiver_dom_info_dict = dict.fromkeys(dom_info_dict_keys, 'N/A')
-
-        #QSFP
-        if self.sfp_type == QSFP_TYPE:
-            if not self.dom_supported:
-                return transceiver_dom_info_dict
-
-            offset = 0
-            sfpd_obj = sff8436Dom()
-            if sfpd_obj is None:
-                return transceiver_dom_info_dict
-
-            dom_data_raw = self._read_eeprom_specific_bytes((offset + QSFP_DOM_BULK_DATA_START), QSFP_DOM_BULK_DATA_SIZE)
-            if dom_data_raw is None:
-                return transceiver_dom_info_dict
-
-            if self.dom_module_monitor_supported:
-                if self.dom_temp_supported:
-                    start = QSFP_TEMPE_OFFSET - QSFP_DOM_BULK_DATA_START
-                    end = start + QSFP_TEMPE_WIDTH
-                    dom_temperature_data = sfpd_obj.parse_temperature(dom_data_raw[start : end], 0)
-                    temp = self._convert_string_to_num(dom_temperature_data['data']['Temperature']['value'])
-                    if temp is not None:
-                        transceiver_dom_info_dict['temperature'] = temp
-
-                if self.dom_volt_supported:
-                    start = QSFP_VOLT_OFFSET - QSFP_DOM_BULK_DATA_START
-                    end = start + QSFP_VOLT_WIDTH
-                    dom_voltage_data = sfpd_obj.parse_voltage(dom_data_raw[start : end], 0)
-                    volt = self._convert_string_to_num(dom_voltage_data['data']['Vcc']['value'])
-                    if volt is not None:
-                        transceiver_dom_info_dict['voltage'] = volt
-            if self.dom_channel_monitor_supported:
-                start = QSFP_CHANNL_MON_OFFSET - QSFP_DOM_BULK_DATA_START
-                end = start + QSFP_CHANNL_MON_WITH_TX_POWER_WIDTH
-                dom_channel_monitor_data = sfpd_obj.parse_channel_monitor_params_with_tx_power(dom_data_raw[start : end], 0)
-
-                if self.dom_tx_power_supported:
-                    transceiver_dom_info_dict['tx1bias'] = dom_channel_monitor_data['data']['TX1Bias']['value']
-                    transceiver_dom_info_dict['tx2bias'] = dom_channel_monitor_data['data']['TX2Bias']['value']
-                    transceiver_dom_info_dict['tx3bias'] = dom_channel_monitor_data['data']['TX3Bias']['value']
-                    transceiver_dom_info_dict['tx4bias'] = dom_channel_monitor_data['data']['TX4Bias']['value']
-                    transceiver_dom_info_dict['tx1power'] = self._convert_string_to_num(dom_channel_monitor_data['data']['TX1Power']['value'])
-                    transceiver_dom_info_dict['tx2power'] = self._convert_string_to_num(dom_channel_monitor_data['data']['TX2Power']['value'])
-                    transceiver_dom_info_dict['tx3power'] = self._convert_string_to_num(dom_channel_monitor_data['data']['TX3Power']['value'])
-                    transceiver_dom_info_dict['tx4power'] = self._convert_string_to_num(dom_channel_monitor_data['data']['TX4Power']['value'])
-
-                if self.dom_rx_power_supported:
-                    transceiver_dom_info_dict['rx1power'] = self._convert_string_to_num(dom_channel_monitor_data['data']['RX1Power']['value'])
-                    transceiver_dom_info_dict['rx2power'] = self._convert_string_to_num(dom_channel_monitor_data['data']['RX2Power']['value'])
-                    transceiver_dom_info_dict['rx3power'] = self._convert_string_to_num(dom_channel_monitor_data['data']['RX3Power']['value'])
-                    transceiver_dom_info_dict['rx4power'] = self._convert_string_to_num(dom_channel_monitor_data['data']['RX4Power']['value'])
-
-
-        #QSFP-DD
-        else:
-
-            sfpd_obj = qsfp_dd_Dom()
-            if sfpd_obj is None:
-                return transceiver_dom_info_dict
-
-            if self.dom_module_monitor_supported:
-
-                if self.dom_temp_supported:
-                    dom_data_raw = self._read_eeprom_specific_bytes(QSFP_DD_TEMPE_MON['offset'], QSFP_DD_TEMPE_MON['width'], QSFP_DD_TEMPE_MON['page'])
-                    dom_temperature_data = sfpd_obj.parse_temperature(dom_data_raw, 0)
-                    temp = self._convert_string_to_num(dom_temperature_data['data']['Temperature']['value'])
-                    if temp is not None:
-                        transceiver_dom_info_dict['temperature'] = temp
-
-                if self.dom_volt_supported:
-                    dom_data_raw = self._read_eeprom_specific_bytes(QSFP_DD_VOLT_MON['offset'], QSFP_DD_VOLT_MON['width'], QSFP_DD_VOLT_MON['page'])
-                    dom_voltage_data = sfpd_obj.parse_voltage(dom_data_raw, 0)
-                    volt = self._convert_string_to_num(dom_voltage_data['data']['Vcc']['value'])
-                    if volt is not None:
-                        transceiver_dom_info_dict['voltage'] = volt
-            if self.dom_channel_monitor_supported:
-
-                dom_data_raw = self._read_eeprom_specific_bytes(QSFP_DD_CHANNL_MON['offset'], QSFP_DD_CHANNL_MON['width'], QSFP_DD_CHANNL_MON['page'])
-                dom_channel_monitor_data =  sfpd_obj.parse_channel_monitor_params(dom_data_raw, 0)
-                if self.dom_rx_power_supported:
-                    transceiver_dom_info_dict['tx1power'] = dom_channel_monitor_data['data']['TX1Power']['value']
-                    transceiver_dom_info_dict['tx2power'] = dom_channel_monitor_data['data']['TX2Power']['value']
-                    transceiver_dom_info_dict['tx3power'] = dom_channel_monitor_data['data']['TX3Power']['value']
-                    transceiver_dom_info_dict['tx4power'] = dom_channel_monitor_data['data']['TX4Power']['value']
-                    transceiver_dom_info_dict['tx5power'] = dom_channel_monitor_data['data']['TX5Power']['value']
-                    transceiver_dom_info_dict['tx6power'] = dom_channel_monitor_data['data']['TX6Power']['value']
-                    transceiver_dom_info_dict['tx7power'] = dom_channel_monitor_data['data']['TX7Power']['value']
-                    transceiver_dom_info_dict['tx8power'] = dom_channel_monitor_data['data']['TX8Power']['value']
-
-                if self.dom_rx_power_supported:
-                    transceiver_dom_info_dict['rx1power'] = dom_channel_monitor_data['data']['RX1Power']['value']
-                    transceiver_dom_info_dict['rx2power'] = dom_channel_monitor_data['data']['RX2Power']['value']
-                    transceiver_dom_info_dict['rx3power'] = dom_channel_monitor_data['data']['RX3Power']['value']
-                    transceiver_dom_info_dict['rx4power'] = dom_channel_monitor_data['data']['RX4Power']['value']
-                    transceiver_dom_info_dict['rx5power'] = dom_channel_monitor_data['data']['RX5Power']['value']
-                    transceiver_dom_info_dict['rx6power'] = dom_channel_monitor_data['data']['RX6Power']['value']
-                    transceiver_dom_info_dict['rx7power'] = dom_channel_monitor_data['data']['RX7Power']['value']
-                    transceiver_dom_info_dict['rx8power'] = dom_channel_monitor_data['data']['RX8Power']['value']
-
-                if self.dom_tx_bias_supported:
-                    transceiver_dom_info_dict['tx1bias'] = dom_channel_monitor_data['data']['TX1Bias']['value']
-                    transceiver_dom_info_dict['tx2bias'] = dom_channel_monitor_data['data']['TX2Bias']['value']
-                    transceiver_dom_info_dict['tx3bias'] = dom_channel_monitor_data['data']['TX3Bias']['value']
-                    transceiver_dom_info_dict['tx4bias'] = dom_channel_monitor_data['data']['TX4Bias']['value']
-                    transceiver_dom_info_dict['tx5bias'] = dom_channel_monitor_data['data']['TX5Bias']['value']
-                    transceiver_dom_info_dict['tx6bias'] = dom_channel_monitor_data['data']['TX6Bias']['value']
-                    transceiver_dom_info_dict['tx7bias'] = dom_channel_monitor_data['data']['TX7Bias']['value']
-                    transceiver_dom_info_dict['tx8bias'] = dom_channel_monitor_data['data']['TX8Bias']['value']
-
-        return transceiver_dom_info_dict
-
-    def get_transceiver_threshold_info(self):
-        """
-        Retrieves transceiver threshold info of this SFP
-
-        Returns:
-            A dict which contains following keys/values :
-        ========================================================================
-        keys                       |Value Format   |Information
-        ---------------------------|---------------|----------------------------
-        temphighalarm              |FLOAT          |High Alarm Threshold value of temperature in Celsius.
-        templowalarm               |FLOAT          |Low Alarm Threshold value of temperature in Celsius.
-        temphighwarning            |FLOAT          |High Warning Threshold value of temperature in Celsius.
-        templowwarning             |FLOAT          |Low Warning Threshold value of temperature in Celsius.
-        vcchighalarm               |FLOAT          |High Alarm Threshold value of supply voltage in mV.
-        vcclowalarm                |FLOAT          |Low Alarm Threshold value of supply voltage in mV.
-        vcchighwarning             |FLOAT          |High Warning Threshold value of supply voltage in mV.
-        vcclowwarning              |FLOAT          |Low Warning Threshold value of supply voltage in mV.
-        rxpowerhighalarm           |FLOAT          |High Alarm Threshold value of received power in dBm.
-        rxpowerlowalarm            |FLOAT          |Low Alarm Threshold value of received power in dBm.
-        rxpowerhighwarning         |FLOAT          |High Warning Threshold value of received power in dBm.
-        rxpowerlowwarning          |FLOAT          |Low Warning Threshold value of received power in dBm.
-        txpowerhighalarm           |FLOAT          |High Alarm Threshold value of transmit power in dBm.
-        txpowerlowalarm            |FLOAT          |Low Alarm Threshold value of transmit power in dBm.
-        txpowerhighwarning         |FLOAT          |High Warning Threshold value of transmit power in dBm.
-        txpowerlowwarning          |FLOAT          |Low Warning Threshold value of transmit power in dBm.
-        txbiashighalarm            |FLOAT          |High Alarm Threshold value of tx Bias Current in mA.
-        txbiaslowalarm             |FLOAT          |Low Alarm Threshold value of tx Bias Current in mA.
-        txbiashighwarning          |FLOAT          |High Warning Threshold value of tx Bias Current in mA.
-        txbiaslowwarning           |FLOAT          |Low Warning Threshold value of tx Bias Current in mA.
-        ========================================================================
-        """
-        transceiver_dom_threshold_info_dict = {}
-
-        dom_info_dict_keys = ['temphighalarm',    'temphighwarning',
-                              'templowalarm',     'templowwarning',
-                              'vcchighalarm',     'vcchighwarning',
-                              'vcclowalarm',      'vcclowwarning',
-                              'rxpowerhighalarm', 'rxpowerhighwarning',
-                              'rxpowerlowalarm',  'rxpowerlowwarning',
-                              'txpowerhighalarm', 'txpowerhighwarning',
-                              'txpowerlowalarm',  'txpowerlowwarning',
-                              'txbiashighalarm',  'txbiashighwarning',
-                              'txbiaslowalarm',   'txbiaslowwarning'
-                             ]
-        transceiver_dom_threshold_info_dict = dict.fromkeys(dom_info_dict_keys, 'N/A')
-
-        #QSFP
-        if self.sfp_type == QSFP_TYPE:
-            if not self.dom_supported or not self.qsfp_page3_available:
-                return transceiver_dom_threshold_info_dict
-
-            # Dom Threshold data starts from offset 384
-            # Revert offset back to 0 once data is retrieved
-            offset = 0
-            sfpd_obj = sff8436Dom()
-            if sfpd_obj is None:
-                return transceiver_dom_threshold_info_dict
-
-            dom_module_threshold_raw = self._read_eeprom_specific_bytes((offset + QSFP_MODULE_THRESHOLD_OFFSET), QSFP_MODULE_THRESHOLD_WIDTH, 3)
-            if dom_module_threshold_raw is None:
-                return transceiver_dom_threshold_info_dict
-
-            dom_module_threshold_data = sfpd_obj.parse_module_threshold_values(dom_module_threshold_raw, 0)
-
-            dom_channel_threshold_raw = self._read_eeprom_specific_bytes((offset + QSFP_CHANNL_THRESHOLD_OFFSET), QSFP_CHANNL_THRESHOLD_WIDTH, 3)
-            if dom_channel_threshold_raw is None:
-                return transceiver_dom_threshold_info_dict
-            dom_channel_threshold_data = sfpd_obj.parse_channel_threshold_values(dom_channel_threshold_raw, 0)
-
-            # Threshold Data
-            if self.dom_module_treshold_supported:
-                transceiver_dom_threshold_info_dict['temphighalarm'] = dom_module_threshold_data['data']['TempHighAlarm']['value']
-                transceiver_dom_threshold_info_dict['temphighwarning'] = dom_module_threshold_data['data']['TempHighWarning']['value']
-                transceiver_dom_threshold_info_dict['templowalarm'] = dom_module_threshold_data['data']['TempLowAlarm']['value']
-                transceiver_dom_threshold_info_dict['templowwarning'] = dom_module_threshold_data['data']['TempLowWarning']['value']
-                transceiver_dom_threshold_info_dict['vcchighalarm'] = dom_module_threshold_data['data']['VccHighAlarm']['value']
-                transceiver_dom_threshold_info_dict['vcchighwarning'] = dom_module_threshold_data['data']['VccHighWarning']['value']
-                transceiver_dom_threshold_info_dict['vcclowalarm'] = dom_module_threshold_data['data']['VccLowAlarm']['value']
-                transceiver_dom_threshold_info_dict['vcclowwarning'] = dom_module_threshold_data['data']['VccLowWarning']['value']
-            if self.dom_channel_treshold_supported:
-                transceiver_dom_threshold_info_dict['rxpowerhighalarm'] = dom_channel_threshold_data['data']['RxPowerHighAlarm']['value']
-                transceiver_dom_threshold_info_dict['rxpowerhighwarning'] = dom_channel_threshold_data['data']['RxPowerHighWarning']['value']
-                transceiver_dom_threshold_info_dict['rxpowerlowalarm'] = dom_channel_threshold_data['data']['RxPowerLowAlarm']['value']
-                transceiver_dom_threshold_info_dict['rxpowerlowwarning'] = dom_channel_threshold_data['data']['RxPowerLowWarning']['value']
-                transceiver_dom_threshold_info_dict['txbiashighalarm'] = dom_channel_threshold_data['data']['TxBiasHighAlarm']['value']
-                transceiver_dom_threshold_info_dict['txbiashighwarning'] = dom_channel_threshold_data['data']['TxBiasHighWarning']['value']
-                transceiver_dom_threshold_info_dict['txbiaslowalarm'] = dom_channel_threshold_data['data']['TxBiasLowAlarm']['value']
-                transceiver_dom_threshold_info_dict['txbiaslowwarning'] = dom_channel_threshold_data['data']['TxBiasLowWarning']['value']
-                transceiver_dom_threshold_info_dict['txpowerhighalarm'] = dom_channel_threshold_data['data']['TxPowerHighAlarm']['value']
-                transceiver_dom_threshold_info_dict['txpowerhighwarning'] = dom_channel_threshold_data['data']['TxPowerHighWarning']['value']
-                transceiver_dom_threshold_info_dict['txpowerlowalarm'] = dom_channel_threshold_data['data']['TxPowerLowAlarm']['value']
-                transceiver_dom_threshold_info_dict['txpowerlowwarning'] = dom_channel_threshold_data['data']['TxPowerLowWarning']['value']
-
-        #QSFP-DD
-        else:
-            if not self.dom_supported:
-                return transceiver_dom_threshold_info_dict
-
-            if not self.dom_thresholds_supported:
-                return transceiver_dom_threshold_info_dict
-
-            sfpd_obj = qsfp_dd_Dom()
-            if sfpd_obj is None:
-                return transceiver_dom_threshold_info_dict
-
-            # page 02 (we put page 2 to byte 256~384)
-            dom_module_threshold_raw = self._read_eeprom_specific_bytes(QSFP_DD_MODULE_THRESHOLD['offset'], QSFP_DD_MODULE_THRESHOLD['width'], QSFP_DD_MODULE_THRESHOLD['page'])
-            if dom_module_threshold_raw is None:
-                return transceiver_dom_threshold_info_dict
-
-            dom_module_threshold_data = sfpd_obj.parse_module_threshold_values(dom_module_threshold_raw, 0)
-
-            # Threshold Data
-            if self.dom_module_treshold_supported:
-                transceiver_dom_threshold_info_dict['temphighalarm'] = dom_module_threshold_data['data']['TempHighAlarm']['value']
-                transceiver_dom_threshold_info_dict['temphighwarning'] = dom_module_threshold_data['data']['TempHighWarning']['value']
-                transceiver_dom_threshold_info_dict['templowalarm'] = dom_module_threshold_data['data']['TempLowAlarm']['value']
-                transceiver_dom_threshold_info_dict['templowwarning'] = dom_module_threshold_data['data']['TempLowWarning']['value']
-                transceiver_dom_threshold_info_dict['vcchighalarm'] = dom_module_threshold_data['data']['VccHighAlarm']['value']
-                transceiver_dom_threshold_info_dict['vcchighwarning'] = dom_module_threshold_data['data']['VccHighWarning']['value']
-                transceiver_dom_threshold_info_dict['vcclowalarm'] = dom_module_threshold_data['data']['VccLowAlarm']['value']
-                transceiver_dom_threshold_info_dict['vcclowwarning'] = dom_module_threshold_data['data']['VccLowWarning']['value']
-            if self.dom_channel_treshold_supported:
-                transceiver_dom_threshold_info_dict['rxpowerhighalarm'] = dom_module_threshold_data['data']['RxPowerHighAlarm']['value']
-                transceiver_dom_threshold_info_dict['rxpowerhighwarning'] = dom_module_threshold_data['data']['RxPowerHighWarning']['value']
-                transceiver_dom_threshold_info_dict['rxpowerlowalarm'] = dom_module_threshold_data['data']['RxPowerLowAlarm']['value']
-                transceiver_dom_threshold_info_dict['rxpowerlowwarning'] = dom_module_threshold_data['data']['RxPowerLowWarning']['value']
-                transceiver_dom_threshold_info_dict['txbiashighalarm'] = dom_module_threshold_data['data']['TxBiasHighAlarm']['value']
-                transceiver_dom_threshold_info_dict['txbiashighwarning'] = dom_module_threshold_data['data']['TxBiasHighWarning']['value']
-                transceiver_dom_threshold_info_dict['txbiaslowalarm'] = dom_module_threshold_data['data']['TxBiasLowAlarm']['value']
-                transceiver_dom_threshold_info_dict['txbiaslowwarning'] = dom_module_threshold_data['data']['TxBiasLowWarning']['value']
-                transceiver_dom_threshold_info_dict['txpowerhighalarm'] = dom_module_threshold_data['data']['TxPowerHighAlarm']['value']
-                transceiver_dom_threshold_info_dict['txpowerhighwarning'] = dom_module_threshold_data['data']['TxPowerHighWarning']['value']
-                transceiver_dom_threshold_info_dict['txpowerlowalarm'] = dom_module_threshold_data['data']['TxPowerLowAlarm']['value']
-                transceiver_dom_threshold_info_dict['txpowerlowwarning'] = dom_module_threshold_data['data']['TxPowerLowWarning']['value']
-
-        return transceiver_dom_threshold_info_dict
+                pres_path = self.PRS_17_32_PATH.format(self.port_num)
+            with open(pres_path, 'r') as sfp_presence:
+                presence = int(sfp_presence.read(), 16)
+        except IOError:
+            return False
+        logger.log_info("debug:port_ %s sfp presence is %s" % (str(self.index), str(presence)))
+        return presence == True
 
     def get_reset_status(self):
         """
@@ -1023,397 +175,6 @@ class Sfp(SfpBase):
         # SFP doesn't support this feature
         return False
 
-    def get_rx_los(self):
-        """
-        Retrieves the RX LOS (lost-of-signal) status of SFP
-
-        Returns:
-            A Boolean, True if SFP has RX LOS, False if not.
-            Note : RX LOS status is latched until a call to get_rx_los or a reset.
-        """
-        if not self.dom_supported:
-            return None
-
-        rx_los_list = []
-        #QSFP
-        if self.sfp_type == QSFP_TYPE:
-            offset = 0
-            dom_channel_monitor_raw = self._read_eeprom_specific_bytes((offset + QSFP_CHANNL_RX_LOS_STATUS_OFFSET), QSFP_CHANNL_RX_LOS_STATUS_WIDTH)
-            if dom_channel_monitor_raw is not None:
-                rx_los_data = int(dom_channel_monitor_raw[0], 16)
-                rx_los_list.append(rx_los_data & 0x01 != 0)
-                rx_los_list.append(rx_los_data & 0x02 != 0)
-                rx_los_list.append(rx_los_data & 0x04 != 0)
-                rx_los_list.append(rx_los_data & 0x08 != 0)
-
-        #QSFP-DD
-        else:
-            # page 11h (we put page 2 to byte 384~512)
-            if self.dom_rx_tx_power_bias_supported: #not implement
-                dom_channel_monitor_raw = self._read_eeprom_specific_bytes(QSFP_DD_CHANNL_RX_LOS_STATUS['offset'], QSFP_DD_CHANNL_RX_LOS_STATUS['width'], QSFP_DD_CHANNL_RX_LOS_STATUS['page'])
-                if dom_channel_monitor_raw is not None:
-                    rx_los_data = int(dom_channel_monitor_raw[0], 8)
-                    rx_los_list.append(rx_los_data & 0x01 != 0)
-                    rx_los_list.append(rx_los_data & 0x02 != 0)
-                    rx_los_list.append(rx_los_data & 0x04 != 0)
-                    rx_los_list.append(rx_los_data & 0x08 != 0)
-                    rx_los_list.append(rx_los_data & 0x10 != 0)
-                    rx_los_list.append(rx_los_data & 0x20 != 0)
-                    rx_los_list.append(rx_los_data & 0x40 != 0)
-                    rx_los_list.append(rx_los_data & 0x80 != 0)
-
-        return rx_los_list
-
-    def get_tx_fault(self):
-        """
-        Retrieves the TX fault status of SFP
-
-        Returns:
-            A Boolean, True if SFP has TX fault, False if not
-            Note : TX fault status is lached until a call to get_tx_fault or a reset.
-        """
-        if not self.dom_supported:
-            return None
-
-        tx_fault_list = []
-        #QSFP
-        if self.sfp_type == QSFP_TYPE:
-            offset = 0
-            dom_channel_monitor_raw = self._read_eeprom_specific_bytes((offset + QSFP_CHANNL_TX_FAULT_STATUS_OFFSET), QSFP_CHANNL_TX_FAULT_STATUS_WIDTH)
-            if dom_channel_monitor_raw is not None:
-                tx_fault_data = int(dom_channel_monitor_raw[0], 16)
-                tx_fault_list.append(tx_fault_data & 0x01 != 0)
-                tx_fault_list.append(tx_fault_data & 0x02 != 0)
-                tx_fault_list.append(tx_fault_data & 0x04 != 0)
-                tx_fault_list.append(tx_fault_data & 0x08 != 0)
-
-        #QSFP-DD
-        else:
-            return None
-
-        return tx_fault_list
-
-    def get_tx_disable(self):
-        """
-        Retrieves the tx_disable status of this SFP
-
-        Returns:
-            A Boolean, True if tx_disable is enabled, False if disabled
-
-        for QSFP, the disable states of each channel which are the lower 4 bits in byte 85 page a0
-        for SFP, the TX Disable State and Soft TX Disable Select is ORed as the tx_disable status returned
-                 These two bits are bit 7 & 6 in byte 110 page a2 respectively
-        """
-        if not self.dom_supported:
-            return None
-
-        tx_disable_list = []
-        #QSFP
-        if self.sfp_type == QSFP_TYPE:
-            offset = 0
-            dom_channel_monitor_raw = self._read_eeprom_specific_bytes((offset + QSFP_CHANNL_DISABLE_STATUS_OFFSET), QSFP_CHANNL_DISABLE_STATUS_WIDTH)
-            if dom_channel_monitor_raw is not None:
-                tx_disable_data = int(dom_channel_monitor_raw[0], 16)
-                tx_disable_list.append(tx_disable_data & 0x01 != 0)
-                tx_disable_list.append(tx_disable_data & 0x02 != 0)
-                tx_disable_list.append(tx_disable_data & 0x04 != 0)
-                tx_disable_list.append(tx_disable_data & 0x08 != 0)
-
-        #QSFP-DD
-        else:
-            if self.dom_rx_tx_power_bias_supported: #not implement
-                # page 11h (we put page 1 to byte 384~512)
-                dom_channel_monitor_raw = self._read_eeprom_specific_bytes(QSFP_DD_CHANNL_DISABLE_STATUS['offset'], QSFP_DD_CHANNL_DISABLE_STATUS['width'], QSFP_DD_CHANNL_DISABLE_STATUS['page'])
-                if dom_channel_monitor_raw is not None:
-                    tx_disable_data = int(dom_channel_monitor_raw[0], 16)
-                    tx_disable_list.append(tx_disable_data & 0x01 != 0)
-                    tx_disable_list.append(tx_disable_data & 0x02 != 0)
-                    tx_disable_list.append(tx_disable_data & 0x04 != 0)
-                    tx_disable_list.append(tx_disable_data & 0x08 != 0)
-                    tx_disable_list.append(tx_disable_data & 0x10 != 0)
-                    tx_disable_list.append(tx_disable_data & 0x20 != 0)
-                    tx_disable_list.append(tx_disable_data & 0x40 != 0)
-                    tx_disable_list.append(tx_disable_data & 0x80 != 0)
-
-        return tx_disable_list
-
-    def get_tx_disable_channel(self):
-        """
-        Retrieves the TX disabled channels in this SFP
-        Returns:
-            A hex of 4 bits (bit 0 to bit 3 as channel 0 to channel 3) to represent
-            TX channels which have been disabled in this SFP.
-            As an example, a returned value of 0x5 indicates that channel 0
-            and channel 2 have been disabled.
-        """
-        # SFP doesn't support this feature
-        return 0
-
-    def get_lpmode(self):
-        """
-        Retrieves the lpmode (low power mode) status of this SFP
-        Returns:
-            A Boolean, True if lpmode is enabled, False if disabled
-        """
-        # SFP doesn't support this feature
-        return False
-
-    def get_power_override(self):
-        """
-        Retrieves the power-override status of this SFP
-        Returns:
-            A Boolean, True if power-override is enabled, False if disabled
-        """
-        # SFP doesn't support this feature
-        return False
-
-    def get_temperature(self):
-        """
-        Retrieves the temperature of this SFP
-
-        Returns:
-            An integer number of current temperature in Celsius
-        """
-        if not self.dom_supported:
-            return None
-        #QSFP
-        if self.sfp_type == QSFP_TYPE:
-            offset = 0
-
-            sfpd_obj = sff8436Dom()
-            if sfpd_obj is None:
-                return None
-
-            if self.dom_temp_supported:
-                dom_temperature_raw = self._read_eeprom_specific_bytes((offset + QSFP_TEMPE_OFFSET), QSFP_TEMPE_WIDTH)
-                if dom_temperature_raw is not None:
-                    dom_temperature_data = sfpd_obj.parse_temperature(dom_temperature_raw, 0)
-                    temp = self._convert_string_to_num(dom_temperature_data['data']['Temperature']['value'])
-                    return temp
-                else:
-                    return None
-            else:
-                return None
-
-        #QSFP-DD
-        else:
-
-
-            sfpd_obj = qsfp_dd_Dom()
-            if sfpd_obj is None:
-                return None
-
-            if self.dom_temp_supported:
-                dom_temperature_raw = self._read_eeprom_specific_bytes(QSFP_DD_TEMPE_MON['offset'], QSFP_DD_TEMPE_MON['width'], QSFP_DD_TEMPE_MON['page'])
-                if dom_temperature_raw is not None:
-                    dom_temperature_data = sfpd_obj.parse_temperature(dom_temperature_raw, 0)
-                    temp = self._convert_string_to_num(dom_temperature_data['data']['Temperature']['value'])
-                    return temp
-            return None
-
-    def get_voltage(self):
-        """
-        Retrieves the supply voltage of this SFP
-
-        Returns:
-            An integer number of supply voltage in mV
-        """
-        if not self.dom_supported:
-            return None
-
-        #QSFP
-        if self.sfp_type == QSFP_TYPE:
-            offset = 0
-
-            sfpd_obj = sff8436Dom()
-            if sfpd_obj is None:
-                return None
-
-            if self.dom_volt_supported:
-                dom_voltage_raw = self._read_eeprom_specific_bytes((offset + QSFP_VOLT_OFFSET), QSFP_VOLT_WIDTH)
-                if dom_voltage_raw is not None:
-                    dom_voltage_data = sfpd_obj.parse_voltage(dom_voltage_raw, 0)
-                    voltage = self._convert_string_to_num(dom_voltage_data['data']['Vcc']['value'])
-                    return voltage
-                else:
-                    return None
-            return None
-
-        #QSFP-DD
-        else:
-
-            sfpd_obj = qsfp_dd_Dom()
-            if sfpd_obj is None:
-                return None
-
-            if self.dom_volt_supported:
-                dom_voltage_raw = self._read_eeprom_specific_bytes(QSFP_DD_VOLT_MON['offset'], QSFP_DD_VOLT_MON['width'], QSFP_DD_VOLT_MON['page'])
-                if dom_voltage_raw is not None:
-                    dom_voltage_data = sfpd_obj.parse_voltage(dom_voltage_raw, 0)
-                    voltage = self._convert_string_to_num(dom_voltage_data['data']['Vcc']['value'])
-                    return voltage
-            return None
-
-    def get_tx_bias(self):
-        """
-        Retrieves the TX bias current of this SFP
-
-        Returns:
-            A list of four integer numbers, representing TX bias in mA
-            for channel 0 to channel 4.
-            Ex. ['110.09', '111.12', '108.21', '112.09']
-        """
-        tx_bias_list = []
-
-        #QSFP
-        if self.sfp_type == QSFP_TYPE:
-            offset = 0
-
-            sfpd_obj = sff8436Dom()
-            if sfpd_obj is None:
-                return None
-
-            dom_channel_monitor_raw = self._read_eeprom_specific_bytes((offset + QSFP_CHANNL_MON_OFFSET), QSFP_CHANNL_MON_WITH_TX_POWER_WIDTH)
-            if dom_channel_monitor_raw is not None:
-                dom_channel_monitor_data = sfpd_obj.parse_channel_monitor_params_with_tx_power(dom_channel_monitor_raw, 0)
-                tx_bias_list.append(self._convert_string_to_num(dom_channel_monitor_data['data']['TX1Bias']['value']))
-                tx_bias_list.append(self._convert_string_to_num(dom_channel_monitor_data['data']['TX2Bias']['value']))
-                tx_bias_list.append(self._convert_string_to_num(dom_channel_monitor_data['data']['TX3Bias']['value']))
-                tx_bias_list.append(self._convert_string_to_num(dom_channel_monitor_data['data']['TX4Bias']['value']))
-
-        #QSFP-DD
-        else:
-            # page 11h (we put page 1 to byte 384~512)
-            if self.dom_rx_tx_power_bias_supported:
-                sfpd_obj = qsfp_dd_Dom()
-                if sfpd_obj is None:
-                    return None
-
-                if dom_tx_bias_power_supported:
-                    dom_tx_bias_raw = self._read_eeprom_specific_bytes(QSFP_DD_TX_BIAS['offset'], QSFP_DD_TX_BIAS['width'], QSFP_DD_TX_BIAS['page'])
-                    if dom_tx_bias_raw is not None:
-                        dom_tx_bias_data = sfpd_obj.parse_dom_tx_bias(dom_tx_bias_raw, 0)
-                        tx_bias_list.append(self._convert_string_to_num(dom_tx_bias_data['data']['TX1Bias']['value']))
-                        tx_bias_list.append(self._convert_string_to_num(dom_tx_bias_data['data']['TX2Bias']['value']))
-                        tx_bias_list.append(self._convert_string_to_num(dom_tx_bias_data['data']['TX3Bias']['value']))
-                        tx_bias_list.append(self._convert_string_to_num(dom_tx_bias_data['data']['TX4Bias']['value']))
-                        tx_bias_list.append(self._convert_string_to_num(dom_tx_bias_data['data']['TX5Bias']['value']))
-                        tx_bias_list.append(self._convert_string_to_num(dom_tx_bias_data['data']['TX6Bias']['value']))
-                        tx_bias_list.append(self._convert_string_to_num(dom_tx_bias_data['data']['TX7Bias']['value']))
-                        tx_bias_list.append(self._convert_string_to_num(dom_tx_bias_data['data']['TX8Bias']['value']))
-
-        return tx_bias_list
-
-    def get_rx_power(self):
-        """
-        Retrieves the received optical power for this SFP
-
-        Returns:
-            A list of four integer numbers, representing received optical
-            power in mW for channel 0 to channel 4.
-            Ex. ['1.77', '1.71', '1.68', '1.70']
-        """
-        rx_power_list = []
-
-        #QSFP
-        if self.sfp_type == QSFP_TYPE:
-            offset = 0
-
-            sfpd_obj = sff8436Dom()
-            if sfpd_obj is None:
-                return None
-
-            if self.dom_rx_power_supported:
-                dom_channel_monitor_raw = self._read_eeprom_specific_bytes((offset + QSFP_CHANNL_MON_OFFSET), QSFP_CHANNL_MON_WITH_TX_POWER_WIDTH)
-                if dom_channel_monitor_raw is not None:
-                    dom_channel_monitor_data = sfpd_obj.parse_channel_monitor_params_with_tx_power(dom_channel_monitor_raw, 0)
-                    rx_power_list.append(self._convert_string_to_num(dom_channel_monitor_data['data']['RX1Power']['value']))
-                    rx_power_list.append(self._convert_string_to_num(dom_channel_monitor_data['data']['RX2Power']['value']))
-                    rx_power_list.append(self._convert_string_to_num(dom_channel_monitor_data['data']['RX3Power']['value']))
-                    rx_power_list.append(self._convert_string_to_num(dom_channel_monitor_data['data']['RX4Power']['value']))
-                else:
-                    return None
-            else:
-                return None
-
-        #QSFP-DD
-        elif self.sfp_type == QSFP_DD_TYPE:
-            # page 11h (we put page 1 to byte 384~512)
-            if self.dom_rx_tx_power_bias_supported:
-                sfpd_obj = qsfp_dd_Dom()
-                if sfpd_obj is None:
-                    return None
-
-                if self.dom_rx_power_supported:
-                    dom_rx_power_raw = self._read_eeprom_specific_bytes(QSFP_DD_RX_POWER['offset'], QSFP_DD_RX_POWER['width'], QSFP_DD_RX_POWER['page'])
-                    if dom_rx_power_raw is not None:
-                        dom_rx_power_data = sfpd_obj.parse_dom_rx_power(dom_rx_power_raw, 0)
-                        rx_power_list.append(self._convert_string_to_num(dom_rx_power_data['data']['RX1Power']['value']))
-                        rx_power_list.append(self._convert_string_to_num(dom_rx_power_data['data']['RX2Power']['value']))
-                        rx_power_list.append(self._convert_string_to_num(dom_rx_power_data['data']['RX3Power']['value']))
-                        rx_power_list.append(self._convert_string_to_num(dom_rx_power_data['data']['RX4Power']['value']))
-                        rx_power_list.append(self._convert_string_to_num(dom_rx_power_data['data']['RX5Power']['value']))
-                        rx_power_list.append(self._convert_string_to_num(dom_rx_power_data['data']['RX6Power']['value']))
-                        rx_power_list.append(self._convert_string_to_num(dom_rx_power_data['data']['RX7Power']['value']))
-                        rx_power_list.append(self._convert_string_to_num(dom_rx_power_data['data']['RX8Power']['value']))
-
-        return rx_power_list
-
-    def get_tx_power(self):
-        """
-        Retrieves the TX power of this SFP
-
-        Returns:
-            A list of four integer numbers, representing TX power in mW
-            for channel 0 to channel 4.
-            Ex. ['1.86', '1.86', '1.86', '1.86']
-        """
-        tx_power_list = []
-
-        #QSFP
-        if self.sfp_type == QSFP_TYPE:
-            offset = 0
-
-            sfpd_obj = sff8436Dom()
-            if sfpd_obj is None:
-                return None
-
-            if self.dom_tx_power_supported:
-                dom_channel_monitor_raw = self._read_eeprom_specific_bytes((offset + QSFP_CHANNL_MON_OFFSET), QSFP_CHANNL_MON_WITH_TX_POWER_WIDTH)
-                if dom_channel_monitor_raw is not None:
-                    dom_channel_monitor_data = sfpd_obj.parse_channel_monitor_params_with_tx_power(dom_channel_monitor_raw, 0)
-                    tx_power_list.append(self._convert_string_to_num(dom_channel_monitor_data['data']['TX1Power']['value']))
-                    tx_power_list.append(self._convert_string_to_num(dom_channel_monitor_data['data']['TX2Power']['value']))
-                    tx_power_list.append(self._convert_string_to_num(dom_channel_monitor_data['data']['TX3Power']['value']))
-                    tx_power_list.append(self._convert_string_to_num(dom_channel_monitor_data['data']['TX4Power']['value']))
-                else:
-                    return None
-            else:
-                return None
-
-        #QSFP-DD
-        else:
-            # page 11h (we put page 1 to byte 384~512)
-            if self.dom_rx_tx_power_bias_supported:
-                sfpd_obj = qsfp_dd_Dom()
-                if sfpd_obj is None:
-                    return None
-
-                if self.dom_tx_power_supported:
-                    dom_tx_power_raw = self._read_eeprom_specific_bytes(QSFP_DD_TX_POWER['offset'], QSFP_DD_TX_POWER['width'], QSFP_DD_TX_POWER['page'])
-                    if dom_tx_power_raw is not None:
-                        dom_tx_power_data = sfpd_obj.parse_dom_tx_power(dom_tx_power_raw, 0)
-                        tx_power_list.append(self._convert_string_to_num(dom_tx_power_data['data']['TX1Power']['value']))
-                        tx_power_list.append(self._convert_string_to_num(dom_tx_power_data['data']['TX2Power']['value']))
-                        tx_power_list.append(self._convert_string_to_num(dom_tx_power_data['data']['TX3Power']['value']))
-                        tx_power_list.append(self._convert_string_to_num(dom_tx_power_data['data']['TX4Power']['value']))
-                        tx_power_list.append(self._convert_string_to_num(dom_tx_power_data['data']['TX5Power']['value']))
-                        tx_power_list.append(self._convert_string_to_num(dom_tx_power_data['data']['TX6Power']['value']))
-                        tx_power_list.append(self._convert_string_to_num(dom_tx_power_data['data']['TX7Power']['value']))
-                        tx_power_list.append(self._convert_string_to_num(dom_tx_power_data['data']['TX8Power']['value']))
-
-        return tx_power_list
-
     def reset(self):
         """
         Reset SFP and return all user module settings to their default srate.
@@ -1423,28 +184,11 @@ class Sfp(SfpBase):
         # SFP doesn't support this feature
         return False
 
-    def tx_disable(self, tx_disable):
-        """
-        Disable SFP TX for all channels
-        Args:
-            tx_disable : A Boolean, True to enable tx_disable mode, False to disable
-                         tx_disable mode.
-        Returns:
-            A boolean, True if tx_disable is set successfully, False if not
-        """
-        # SFP doesn't support this feature
-        return False
-
-    def tx_disable_channel(self, channel, disable):
+    def get_lpmode(self):
         """
-        Sets the tx_disable for specified SFP channels
-        Args:
-            channel : A hex of 4 bits (bit 0 to bit 3) which represent channel 0 to 3,
-                      e.g. 0x5 for channel 0 and channel 2.
-            disable : A boolean, True to disable TX channels specified in channel,
-                      False to enable
+        Retrieves the lpmode (low power mode) status of this SFP
         Returns:
-            A boolean, True if successful, False if not
+            A Boolean, True if lpmode is enabled, False if disabled
         """
         # SFP doesn't support this feature
         return False
@@ -1458,6 +202,17 @@ class Sfp(SfpBase):
         Returns:
             A boolean, True if lpmode is set successfully, False if not
         """
+        if not self.get_presence():
+            return False
+        self.set_power_override(True, True if lpmode is True else False)
+        return True
+
+    def get_power_override(self):
+        """
+        Retrieves the power-override status of this SFP
+        Returns:
+            A Boolean, True if power-override is enabled, False if disabled
+        """
         # SFP doesn't support this feature
         return False
 
@@ -1478,8 +233,38 @@ class Sfp(SfpBase):
             A boolean, True if power-override and power_set are set successfully,
             False if not
         """
-        # SFP doesn't support this feature
-        return False
+        if not self.get_presence():
+            return False
+        if self.sfp_type == QSFP_TYPE:
+            try:
+                power_override_bit = (1 << 0) if power_override else 0
+                power_set_bit = (1 << 1) if power_set else (1 << 3)
+
+                # Write to eeprom
+                with open(self.port_to_power_mode_mapping[self.index], "w") as fd:
+                    fd.write(str((power_override_bit | power_set_bit)))
+                    time.sleep(0.01)
+                    fd.close()
+            except Exception as e:
+                print('Error: unable to open file: ', str(e))
+                fd.close()
+                return False
+            return True
+        elif self.sfp_type == QSFP_DD_TYPE:
+            try:
+                power_override_bit = (1 << 6)
+                power_set_bit = (1 << 4) if power_set else (0 << 4)
+
+                # Write to eeprom
+                with open(self.port_to_power_mode_mapping[self.index], "w") as fd:
+                    fd.write(str((power_override_bit | power_set_bit)))
+                    time.sleep(0.01)
+                    fd.close()
+            except Exception as e:
+                print('Error: unable to open file: ', str(e))
+                fd.close()
+                return False
+            return True
 
     def get_name(self):
         """
@@ -1489,27 +274,163 @@ class Sfp(SfpBase):
         """
         try:
             with open(self.port_to_name_mapping[self.index], 'r') as sfp_name:
-                name=sfp_name.read()
+                name = sfp_name.read()
         except IOError:
-            name="Unknown"
+            name = "Unknown"
 
         return name
 
-    def get_model(self):
+    def get_status(self):
+        """
+        Retrieves the operational status of the device
+        Returns:
+            A boolean value, True if device is operating properly, False if not
+        """
+        return self.get_presence() and not self.get_reset_status()
+
+    def get_position_in_parent(self):
         """
-        Retrieves the model number (or part number) of the device
         Returns:
-            string: Model/part number of device
+            Temp return 0
         """
-        transceiver_dom_info_dict = self.get_transceiver_info()
-        return transceiver_dom_info_dict.get("model", "N/A")
+        return 0
 
-    def get_serial(self):
+    def is_replaceable(self):
         """
-        Retrieves the serial number of the device
+        Retrieves if replaceable
         Returns:
-            string: Serial number of device
+            A boolean value, True if replaceable
+        """
+        return True
+
+    def get_error_description(self):
         """
-        transceiver_dom_info_dict = self.get_transceiver_info()
-        return transceiver_dom_info_dict.get("serial", "N/A")
+        Get error description
+
+        Args:
+            error_code: The error code returned by _get_error_code
+
+        Returns:
+            The error description
+        """
+        if self.get_presence():
+            return self.SFP_STATUS_OK
+        else:
+            return self.SFP_STATUS_UNPLUGGED
+
+    def read_eeprom(self, offset, num_bytes):
+        """
+        read eeprom specfic bytes beginning from a random offset with size as num_bytes
+
+        Args:
+             offset :
+                     Integer, the offset from which the read transaction will start
+             num_bytes:
+                     Integer, the number of bytes to be read
+
+        Returns:
+            bytearray, if raw sequence of bytes are read correctly from the offset of size num_bytes
+            None, if the read_eeprom fails
+        """
+        if not self.get_presence():
+            return None
+        if self.sfp_type == None:
+            return None
+
+        return bytearray([int(x, 16) for x in self._read_eeprom_specific_bytes(offset, num_bytes)])
+
+    def write_eeprom(self, offset, num_bytes, write_buffer):
+        """
+        write eeprom specfic bytes beginning from a random offset with size as num_bytes
+        and write_buffer as the required bytes
+
+        Args:
+             offset :
+                     Integer, the offset from which the read transaction will start
+             num_bytes:
+                     Integer, the number of bytes to be written
+             write_buffer:
+                     bytearray, raw bytes buffer which is to be written beginning at the offset
+
+        Returns:
+            a Boolean, true if the write succeeded and false if it did not succeed.
+        """
+        if not self.get_presence():
+            return False
+        if not (self.sfp_type == None):
+            #offset check
+            if offset == (0x12 * 128 + 128):
+                # Write to eeprom
+                with open(self.port_to_grid_mapping[self.index], "w") as fd:
+                    fd.write(str((int(str(write_buffer.hex()), 16))))
+                    time.sleep(0.01)
+                    fd.close()
+            elif offset == (0x12 * 128 + 136):
+                # Write to eeprom
+                with open(self.port_to_freq_mapping[self.index], "w") as fd:
+                    fd.write(str((int(str(write_buffer.hex()), 16))))
+                    time.sleep(0.01)
+                    fd.close()
+            elif offset == (0x12 * 128 + 200):
+                # Write to eeprom
+                with open(self.port_to_outp_mapping[self.index], "w") as fd:
+                    fd.write(str((int(str(write_buffer.hex()), 16))))
+                    time.sleep(0.01)
+                    fd.close()
+            else:
+                return False
+        else:
+            return False
+
+    def _read_eeprom_specific_bytes(self, offset, num_bytes, page = 0):
+        sysfsfile_eeprom = None
+        eeprom_raw = []
+        for i in range(0, num_bytes):
+            eeprom_raw.append("0x00")
+
+        if offset < 256:
+            pg = 0
+        else:
+            pg = (offset // 128) - 1
+            offset = (offset % 128)
+
+        if pg == 0x0:
+            if offset < 128:
+                sysfs_sfp_i2c_client_eeprom_path = self.port_to_eeprom_low_mapping[self.index]
+            else:
+                sysfs_sfp_i2c_client_eeprom_path = self.port_to_eeprom_0_mapping[self.index]
+                offset = offset - 128
+        elif pg == 0x1:
+            sysfs_sfp_i2c_client_eeprom_path = self.port_to_eeprom_1_mapping[self.index]
+        elif pg == 0x2:
+            sysfs_sfp_i2c_client_eeprom_path = self.port_to_eeprom_2_mapping[self.index]
+        elif pg == 0x3:
+            sysfs_sfp_i2c_client_eeprom_path = self.port_to_eeprom_3_mapping[self.index]
+        elif pg == 0x4:
+            sysfs_sfp_i2c_client_eeprom_path = self.port_to_eeprom_4_mapping[self.index]
+        elif pg == 0x10:
+            sysfs_sfp_i2c_client_eeprom_path = self.port_to_eeprom3_mapping[self.index]
+        elif pg == 0x11:
+            sysfs_sfp_i2c_client_eeprom_path = self.port_to_eeprom_11_mapping[self.index]
+        else:
+            return eeprom_raw
+
+        try:
+            sysfsfile_eeprom = open(sysfs_sfp_i2c_client_eeprom_path, mode="rb", buffering=0)
+            sysfsfile_eeprom.seek(offset)
+            raw = sysfsfile_eeprom.read(num_bytes)
+            if sys.version_info[0] >= 3:
+                for n in range(0, num_bytes):
+                    eeprom_raw[n] = hex(raw[n])[2:].zfill(2)
+            else:
+                for n in range(0, num_bytes):
+                    eeprom_raw[n] = hex(ord(raw[n]))[2:].zfill(2)
+
+        except BaseException:
+            pass
+        finally:
+            if sysfsfile_eeprom:
+                sysfsfile_eeprom.close()
+
+        return eeprom_raw
 
diff --git a/platform/innovium/sonic-platform-modules-wistron/sw-to3200k/sonic_platform/thermal.py b/platform/innovium/sonic-platform-modules-wistron/sw-to3200k/sonic_platform/thermal.py
index f45d930e8..c7848c443 100644
--- a/platform/innovium/sonic-platform-modules-wistron/sw-to3200k/sonic_platform/thermal.py
+++ b/platform/innovium/sonic-platform-modules-wistron/sw-to3200k/sonic_platform/thermal.py
@@ -9,6 +9,7 @@
 
 import os
 import os.path
+import subprocess
 
 try:
     from sonic_platform_base.thermal_base import ThermalBase
@@ -28,8 +29,14 @@ class Thermal(ThermalBase):
                          "/sys/bus/i2c/devices/0-004d/",
                          "/sys/bus/i2c/devices/0-004e/"]
 
+    IPMI_SENSOR_NR  = ["0x30", "0x31", "0x32", "0x33", "0x34", "0x35", "0x36"]
+
     def __init__(self, thermal_index):
         self.index = thermal_index
+        self.lnc = None
+        self.lcr = None
+        self.unc = None
+        self.ucr = None
 
         # Add thermal name
         self.THERMAL_NAME_LIST.append("Top-Rear")
@@ -40,6 +47,20 @@ class Thermal(ThermalBase):
         self.THERMAL_NAME_LIST.append("Bottom-Front")
         self.THERMAL_NAME_LIST.append("Bottom-Rear")
         ThermalBase.__init__(self)
+        self.minimum_thermal = self.get_temperature()
+        self.maximum_thermal = self.get_temperature()
+        #self.__initialize_threshold()
+
+    def __initialize_threshold(self):
+        cmd = ["ipmitool", "raw", "0x4", "0x27"]
+        if self.lnc is None:
+            cmd.append(self.IPMI_SENSOR_NR[self.index])
+            p = subprocess.Popen(cmd, stdout=subprocess.PIPE)
+            out, err = p.communicate()
+            self.unc = float(int(out.split()[4],16))
+            self.ucr = float(int(out.split()[5],16))
+            self.lnc = float(int(out.split()[1],16) if int(out.split()[1],16) != 0 else 2)
+            self.lcr = float(int(out.split()[2],16))
 
     def __read_txt_file(self, file_path):
         try:
@@ -57,7 +78,7 @@ class Thermal(ThermalBase):
         return "{:.3f}".format(temp)
 
     def __set_threshold(self, file_name, temperature):
-        temp_file_path = os.path.join(self.hwmon_path, file_name)
+        temp_file_path = os.path.join(self.SYSFS_THERMAL_DIR[self.index], file_name)
         try:
             with open(temp_file_path, 'w') as fd:
                 fd.write(str(temperature))
@@ -81,7 +102,9 @@ class Thermal(ThermalBase):
         :return: A float number, the low threshold temperature of thermal in Celsius
                  up to nearest thousandth of one degree Celsius, e.g. 30.125
         """
-        return int(9)
+
+        #return self.lnc
+        return 2.0
 
     def get_low_critical_threshold(self):
         """
@@ -89,7 +112,9 @@ class Thermal(ThermalBase):
         :return: A float number, the low critical threshold temperature of thermal in Celsius
                  up to nearest thousandth of one degree Celsius, e.g. 30.125
         """
-        return int(7)
+
+        #return self.lcr
+        return 0.0
 
     def get_high_threshold(self):
         """
@@ -98,20 +123,11 @@ class Thermal(ThermalBase):
             A float number, the high threshold temperature of thermal in Celsius
             up to nearest thousandth of one degree Celsius, e.g. 30.125
         """
-        if self.index==0:
-            return int(56)
-        elif self.index==1:
-            return int(74)
-        elif self.index==2:
-            return int(55)
-        elif self.index==3:
-            return int(74)
-        elif self.index==4:
-            return int(55)
-        elif self.index==5:
-            return int(74)
-        else:
-            return int(56)
+
+        #return self.unc
+        temp_file = "temp1_max_hyst"
+        return float(self.__get_temp(temp_file))
+
 
     def get_high_critical_threshold(self):
         """
@@ -119,20 +135,10 @@ class Thermal(ThermalBase):
         :return: A float number, the high critical threshold temperature of thermal in Celsius
                  up to nearest thousandth of one degree Celsius, e.g. 30.125
         """
-        if self.index==0:
-            return int(58)
-        elif self.index==1:
-            return int(76)
-        elif self.index==2:
-            return int(57)
-        elif self.index==3:
-            return int(76)
-        elif self.index==4:
-            return int(57)
-        elif self.index==5:
-            return int(76)
-        else:
-            return int(58)
+
+        #return self.ucr
+        temp_file = "temp1_max"
+        return float(self.__get_temp(temp_file))
 
     def get_name(self):
         """
@@ -144,12 +150,12 @@ class Thermal(ThermalBase):
 
     def get_presence(self):
         """
-        Retrieves the presence of the PSU
+        Retrieves the presence of the sensor
         Returns:
-            bool: True if PSU is present, False if not
+            bool: True if sensor is present, False if not
         """
         temp_file = "temp1_input"
-        temp_file_path = os.path.join(self.hwmon_path, temp_file)
+        temp_file_path = os.path.join(self.SYSFS_THERMAL_DIR[self.index], temp_file)
         return os.path.isfile(temp_file_path)
 
     def get_status(self):
@@ -163,3 +169,63 @@ class Thermal(ThermalBase):
 
         return True
 
+    def get_model(self):
+        """
+        Retrieves the model number (or part number) of the device
+        Returns:
+            string: Model/part number of device
+        """
+        return "None"
+
+    def get_serial(self):
+        """
+        Retrieves the serial number of the device
+        Returns:
+            string: Serial number of device
+        """
+        return "None"
+
+    def is_replaceable(self):
+        """
+        Retrieves whether thermal module is replaceable
+        Returns:
+            A boolean value, True if replaceable, False if not
+        """
+        return False
+
+    def get_position_in_parent(self):
+        """
+        Retrieves 1-based relative physical position in parent device.
+        If the agent cannot determine the parent-relative position
+        for some reason, or if the associated value of
+        entPhysicalContainedIn is'0', then the value '-1' is returned
+        Returns:
+            integer: The 1-based relative physical position in parent device
+            or -1 if cannot determine the position
+        """
+        return self.index + 1
+
+    def get_minimum_recorded(self):
+        """
+        Retrieves the minimum recorded temperature of thermal
+        Returns:
+            A float number, the minimum recorded temperature of thermal in Celsius
+            up to nearest thousandth of one degree Celsius, e.g. 30.125
+        """
+        tmp = self.get_temperature()
+        if tmp < self.minimum_thermal:
+            self.minimum_thermal = tmp
+        return self.minimum_thermal
+
+    def get_maximum_recorded(self):
+        """
+        Retrieves the maximum recorded temperature of thermal
+        Returns:
+            A float number, the maximum recorded temperature of thermal in Celsius
+            up to nearest thousandth of one degree Celsius, e.g. 30.125
+        """
+        tmp = self.get_temperature()
+        if tmp > self.maximum_thermal:
+            self.maximum_thermal = tmp
+        return self.maximum_thermal
+
diff --git a/platform/innovium/sonic-platform-modules-wistron/sw-to3200k/utils/sonic-led-monitor b/platform/innovium/sonic-platform-modules-wistron/sw-to3200k/utils/sonic-led-monitor
index ba4f4c8da..364ac53b1 100644
--- a/platform/innovium/sonic-platform-modules-wistron/sw-to3200k/utils/sonic-led-monitor
+++ b/platform/innovium/sonic-platform-modules-wistron/sw-to3200k/utils/sonic-led-monitor
@@ -2,6 +2,7 @@
 
 #0=off, 1=green, 2=amber, 3=blk_green
 led_state=0
+pre_loc_state=0
 
 #$1=led_no(1=loc, 2=diag, 3=fan, 4=psu1, 5=psu2)
 bmc_led_read()
@@ -128,37 +129,10 @@ bmc_led_read()
     return 0
 }
 
-#$1=led_no(1=loc, 2=diag, 3=fan, 4=psu1, 5=psu2)
-#$2=led_val(0=off, 1=green, 2=amber, 3=blk_green)
+#$1=led_val(0=off, 1=green, 2=amber, 3=blk_green)
 bmc_led_write()
 {
-    led_val=$2
-    val=$(ipmitool raw 0x30 0x97 2>>/dev/null)
-    loc_val=$(echo $val | awk '{printf $1}')
-    diag_val=$(echo $val | awk '{printf $2}')
-    fan_val=$(echo $val | awk '{printf $3}')
-    psu1_val=$(echo $val | awk '{printf $4}')
-    psu2_val=$(echo $val | awk '{printf $5}')
-
-    loc_val=$( printf "%d" 0x$loc_val )
-    diag_val=$( printf "%d" 0x$diag_val )
-    fan_val=$( printf "%d" 0x$fan_val )
-    psu1_val=$( printf "%d" 0x$psu1_val )
-    psu2_val=$( printf "%d" 0x$psu2_val )
-
-    if [ $1 -eq 1 ];then
-        loc_val=$(($loc_val & $led_val))
-    elif [ $1 -eq 2 ];then
-        diag_val=$(($diag_val & $led_val))
-    elif [ $1 -eq 3 ];then
-        fan_val=$(($fan_val & $led_val))
-    elif [ $1 -eq 4 ];then
-        psu1_val=$(($psu1_val & $led_val))
-    else
-        psu2_val=$(($psu2_val & $led_val))
-    fi
-
-    ipmitool raw 0x30 0x96 $loc_val $diag_val $fan_val $psu1_val $psu2_val 1>>/dev/null 2>>/dev/null
+    ipmitool raw 0x30 0x2b 0x2 0xc0 0x0 0x55 0x"$1"0 1>>/dev/null 2>>/dev/null
 }
 
 LED_monitor()
@@ -171,7 +145,13 @@ LED_monitor()
     do
         if [ -e /sys/bus/i2c/devices/0-0060/sys_led_diag ];then
             loc_state=$(cat /sys/bus/i2c/devices/0-0060/sys_led_loc | awk '{printf $1}')
-            bmc_led_write 1 $loc_state
+			if [ $loc_state -gt 4 ]; then
+				loc_state=4
+			fi
+			if [ $loc_state != $pre_loc_state ]; then
+				bmc_led_write $loc_state
+				pre_loc_state=$loc_state
+			fi
 
             bmc_led_read 2
             if [ $? -eq 1 ];then
diff --git a/platform/innovium/sonic-platform-modules-wistron/sw-to3200k/utils/sonic-psu-monitor b/platform/innovium/sonic-platform-modules-wistron/sw-to3200k/utils/sonic-psu-monitor
index bcb3502e4..d5cfd7193 100644
--- a/platform/innovium/sonic-platform-modules-wistron/sw-to3200k/utils/sonic-psu-monitor
+++ b/platform/innovium/sonic-platform-modules-wistron/sw-to3200k/utils/sonic-psu-monitor
@@ -85,61 +85,73 @@ get_PSU_information()
 	    #PSU1 Vin
 	    add_byte 1 2
 	    if [ $? -eq 1 ];then
+			    Value=$((Value * 10))
 	            echo $Value > /sys/bus/i2c/devices/0-005a/psu_v_in
 	    fi
 	    #PSU2 Vin
 	    add_byte 3 4
 	    if [ $? -eq 1 ];then
+			    Value=$((Value * 10))
 	            echo $Value > /sys/bus/i2c/devices/0-0059/psu_v_in
 	    fi
 	    #PSU 1 Vout
 	    add_byte 5 6
 	    if [ $? -eq 1 ];then
+			    Value=$((Value * 10))
 	            echo $Value > /sys/bus/i2c/devices/0-005a/psu_v_out
 	    fi
 	    #PSU 2 Vout
 	    add_byte 7 8
 	    if [ $? -eq 1 ];then
+			    Value=$((Value * 10))
 	            echo $Value > /sys/bus/i2c/devices/0-0059/psu_v_out
 	    fi
 	    #PSU 1 Iin
 	    add_byte 9 10
 	    if [ $? -eq 1 ];then
+			    Value=$((Value * 10))
 	            echo $Value > /sys/bus/i2c/devices/0-005a/psu_i_in
 	    fi
 	    #PSU 2 Iin
 	    add_byte 11 12
 	    if [ $? -eq 1 ];then
+			    Value=$((Value * 10))
 	            echo $Value > /sys/bus/i2c/devices/0-0059/psu_i_in
 	    fi
 	    #PSU 1 Iout
 	    add_byte 13 14
 	    if [ $? -eq 1 ];then
+			    Value=$((Value * 10))
 	            echo $Value > /sys/bus/i2c/devices/0-005a/psu_i_out
 	    fi
 	    #PSU 2 Iout
 	    add_byte 15 16
 	    if [ $? -eq 1 ];then
+			    Value=$((Value * 10))
 	            echo $Value > /sys/bus/i2c/devices/0-0059/psu_i_out
 	    fi
 	    #PSU 1 Pin
 	    add_byte 17 18
 	    if [ $? -eq 1 ];then
+			    Value=$((Value * 1000000))
 	            echo $Value > /sys/bus/i2c/devices/0-005a/psu_p_in
 	    fi
 	    #PSU 2 Pin
 	    add_byte 19 20
 	    if [ $? -eq 1 ];then
+			    Value=$((Value * 1000000))
 	            echo $Value > /sys/bus/i2c/devices/0-0059/psu_p_in
 	    fi
 	    #PSU 1 Pout
 	    add_byte 21 22
 	    if [ $? -eq 1 ];then
+			    Value=$((Value * 1000000))
 	            echo $Value > /sys/bus/i2c/devices/0-005a/psu_p_out
 	    fi
 	    #PSU 2 Pout
 	    add_byte 23 24
 	    if [ $? -eq 1 ];then
+			    Value=$((Value * 1000000))
 	            echo $Value > /sys/bus/i2c/devices/0-0059/psu_p_out
 	    fi
 	    #PSU 1 Fan speed
@@ -156,9 +168,11 @@ get_PSU_information()
 #----------------93->/58/59----psu_fan1_fault psu_temp1_input psu_fan1_duty_cycle
 	    #PSU 1 Temp1
 	    byte_read 25
+	    Value=$((Value * 1000))
 	    echo $Value > /sys/bus/i2c/devices/0-005a/psu_temp1_input
 	    #PSU 2 Temp1
 	    byte_read 26
+	    Value=$((Value * 1000))
 	    echo $Value > /sys/bus/i2c/devices/0-0059/psu_temp1_input
 	    if [ $debug_flag -eq 0 ];then
 	        #PSU 1 Fan command
@@ -314,8 +328,8 @@ PSU_monitor()
 {
 
     while true
-    do	
-    	
+    do
+
         get_PSU_information
         if [ $debug_flag -eq 1 ];then
            bmc_fan_speed_ctrl
diff --git a/platform/innovium/sonic-platform-modules-wistron/sw-to3200k/utils/sonic-qsfp-monitor b/platform/innovium/sonic-platform-modules-wistron/sw-to3200k/utils/sonic-qsfp-monitor
index 1f4ca1d3f..6bd282f74 100644
--- a/platform/innovium/sonic-platform-modules-wistron/sw-to3200k/utils/sonic-qsfp-monitor
+++ b/platform/innovium/sonic-platform-modules-wistron/sw-to3200k/utils/sonic-qsfp-monitor
@@ -10,7 +10,11 @@ port_1_8_reset=0
 port_9_16_reset=0
 port_17_24_reset=0
 port_25_32_reset=0
-
+port_init=(0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0)
+port_pre_mode=(0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0)
+port_pre_grid=(0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0)
+port_pre_freq=(0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0)
+port_pre_outp=(0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0)
 result=0
 
 #$1=dev_addr, $2=reg, $3=val
@@ -125,6 +129,7 @@ bmc_qsfp_eeprom_read()
     local eeprom_pg2
     local eeprom_pg3
     local eeprom_pg11
+    local eeprom_pg12
 
     port=`expr $port - 1`
     i2cmux_dev=0
@@ -140,6 +145,19 @@ bmc_qsfp_eeprom_read()
     bmc_read 0x50 0 128
     if [ $? -eq 1 ];then
         eeprom_low=$result
+		sfp_type=$(echo $eeprom_low | awk '{printf $1}')
+		sfp_type=$( printf "%d" 0x$sfp_type )
+
+		pwr_path="/sys/bus/i2c/devices/0-00"${port_map[$1]}"/power_mode"
+		pwr_mode=$(cat $pwr_path | awk '{printf $1}')
+		if [[ $pwr_mode -ne ${port_pre_mode[$port]} ]]; then
+			if [ $sfp_type -eq 24 ];then
+				bmc_write 0x50 26 $pwr_mode
+			elif [ $sfp_type -eq 17 ];then
+				bmc_write 0x50 93 $pwr_mode
+			fi
+			port_pre_mode[$port]=$pwr_mode
+		fi
     else
         bmc_write $i2cmux_dev 0x00 0x0
         return 1
@@ -184,7 +202,19 @@ bmc_qsfp_eeprom_read()
         return 1
     fi
 
-    #QSFP-DD page11
+	if [ ${port_init[$port]} -eq 0 ]; then
+		#QSFP-DD page4
+		bmc_write 0x50 0x7f 0x04
+		bmc_read 0x50 128 128
+		if [ $? -eq 1 ];then
+			eeprom_pg4=$result
+		else
+			bmc_write $i2cmux_dev 0x00 0x0
+			return 1
+		fi
+	fi
+
+    #QSFP-DD page11h
     bmc_write 0x50 0x7f 0x11
     bmc_read 0x50 128 128
     if [ $? -eq 1 ];then
@@ -194,12 +224,100 @@ bmc_qsfp_eeprom_read()
         return 1
     fi
 
-    sfp_type=$(echo $eeprom_low | awk '{printf $1}')
-    sfp_type=$( printf "%d" 0x$sfp_type )
+    #QSFP-DD page12h
+	if [ ${port_init[$port]} -eq 0 ]; then
+		bmc_write 0x50 0x7f 0x12
+		bmc_read 0x50 128 128
+		if [ $? -eq 1 ];then
+			eeprom_pg12=$result
+		else
+			bmc_write $i2cmux_dev 0x00 0x0
+			return 1
+		fi
+	fi
+
+	if [ ${port_init[$port]} -eq 1 ]; then
+		grid_path="/sys/bus/i2c/devices/0-00"${port_map[$1]}"/grid"
+		grid_val=$(cat $grid_path | awk '{printf $1}')
+		if [ $grid_val -ne ${port_pre_grid[$port]} ]; then
+			if [ $sfp_type -eq 24 ];then
+				bmc_write 0x50 0x7f 0x12
+				ipmitool raw 0x06 0x52 0x05 0xa0 0 0x80 $grid_val 1>>/dev/null 2>>/dev/null
+				port_pre_grid[$port]=$grid_val
+			fi
+		else
+			if [ $sfp_type -eq 24 ];then
+				bmc_write 0x50 0x7f 0x12
+				grid=$(ipmitool raw 0x06 0x52 0x05 0xa0 1 0x80)
+				grid=$(echo $grid | awk '{printf $1}')
+				if [ "$grid" != "" ];then
+					grid=$( printf "%d" 0x$grid )
+					echo $grid > $grid_path
+				fi
+			fi
+		fi
+		outp_path="/sys/bus/i2c/devices/0-00"${port_map[$1]}"/output_power"
+		outp_val=$(cat $outp_path | awk '{printf $1}')
+		if [[ $outp_val -ne ${port_pre_outp[$port]} ]]; then
+			if [ $sfp_type -eq 24 ];then
+				bmc_write 0x50 0x7f 0x12
+				outp_b1=$(echo $(((outp_val & 0xff00) >> 8)))
+				outp_b2=$(echo $((outp_val & 0xff)))
+				ipmitool raw 0x06 0x52 0x05 0xa0 0 0xc8 $outp_b1 $outp_b2 1>>/dev/null 2>>/dev/null
+				port_pre_outp[$port]=$outp_val
+			fi
+		else
+			if [ $sfp_type -eq 24 ];then
+				bmc_write 0x50 0x7f 0x12
+				outp=$(ipmitool raw 0x06 0x52 0x05 0xa0 2 0xc8)
+				outp_h=$(echo $outp | awk '{printf $1}')
+				outp_l=$(echo $outp | awk '{printf $2}')
+				if [ "$outp" != "" ];then
+					outp_h=$( printf "%d" 0x$outp_h )
+					outp_l=$( printf "%d" 0x$outp_l )
+					outp=$((outp_h << 8 | out_p_l))
+					echo $outp > $outp_path
+				fi
+			fi
+		fi
+		freq_path="/sys/bus/i2c/devices/0-00"${port_map[$1]}"/freq"
+		freq_val=$(cat $freq_path | awk '{printf $1}')
+		if [[ $freq_val -ne ${port_pre_freq[$port]} ]]; then
+			if [ $sfp_type -eq 24 ];then
+				#workaround for turn on/off lpmode in setting laser freq
+				bmc_write 0x50 0x7f 0x0
+				sleep 0.1
+				bmc_write 0x50 26 0x50
+				freq_b1=$(echo $(((freq_val & 0xff00) >> 8)))
+				freq_b2=$(echo $((freq_val & 0xff)))
+				bmc_write 0x50 0x7f 0x12
+				sleep 0.1
+				ipmitool raw 0x06 0x52 0x05 0xa0 0 0x88 $freq_b1 $freq_b2 1>>/dev/null 2>>/dev/null
+				sleep 0.1
+				bmc_write 0x50 0x7f 0x0
+				sleep 0.1
+				bmc_write 0x50 26 0x40
+				port_pre_freq[$port]=$freq_val
+			fi
+		else
+			if [ $sfp_type -eq 24 ];then
+				bmc_write 0x50 0x7f 0x12
+				freq=$(ipmitool raw 0x06 0x52 0x05 0xa0 2 0x88)
+				freq_h=$(echo $freq | awk '{printf $1}')
+				freq_l=$(echo $freq | awk '{printf $2}')
+				if [ "$freq" != "" ];then
+					freq_h=$( printf "%d" 0x$freq_h )
+					freq_l=$( printf "%d" 0x$freq_l )
+					freq=$((freq_h << 8 | out_p_l))
+					echo $freq > $freq_path
+				fi
+			fi
+		fi
+	fi
 
     #get temperature
     temp=$(echo $eeprom_low | awk '{printf $15}')
-    if [ $temp != "" ];then
+    if [ "$temp" != "" ];then
         temp=$( printf "%d" 0x$temp )
         temp_path="/sys/bus/i2c/devices/0-00"${port_map[$1]}"/temp"
         echo $temp > $temp_path
@@ -209,7 +327,7 @@ bmc_qsfp_eeprom_read()
     lpmod_path="/sys/bus/i2c/devices/0-00"${port_map[$1]}"/lp_mode"
     if [ $sfp_type -eq 24 ];then
         lpmod=$(echo $eeprom_low | awk '{printf $27}')
-        if [ $lpmod != "" ];then
+        if [ "$lpmod" != "" ];then
             state=$((lpmod&0x10))
             if [ $state -eq 16 ];then
                 echo 1 > $lpmod_path
@@ -219,7 +337,7 @@ bmc_qsfp_eeprom_read()
         fi
     elif [ $sfp_type -eq 17 ];then
         lpmod=$(echo $eeprom_low | awk '{printf $93}')
-        if [ $lpmod != "" ];then
+        if [ "$lpmod" != "" ];then
             state=$((lpmod&0x02))
             if [ $state -eq 2 ];then
                 echo 1 > $lpmod_path
@@ -236,7 +354,13 @@ bmc_qsfp_eeprom_read()
     eeprom_pg1=$(echo $eeprom_pg1 | sed 's/[[:space:]]//g')
     eeprom_pg2=$(echo $eeprom_pg2 | sed 's/[[:space:]]//g')
     eeprom_pg3=$(echo $eeprom_pg3 | sed 's/[[:space:]]//g')
+	if [ ${port_init[$port]} -eq 0 ]; then
+		eeprom_pg4=$(echo $eeprom_pg4 | sed 's/[[:space:]]//g')
+	fi
     eeprom_pg11=$(echo $eeprom_pg11 | sed 's/[[:space:]]//g')
+	if [ ${port_init[$port]} -eq 0 ]; then
+		eeprom_pg12=$(echo $eeprom_pg12 | sed 's/[[:space:]]//g')
+	fi
 
     if [ $debug_flag -eq 0 ];then
         eeprom_low_path="/sys/bus/i2c/devices/0-00"${port_map[$1]}"/eeprom_low"
@@ -254,9 +378,19 @@ bmc_qsfp_eeprom_read()
         eeprom_pg3_path="/sys/bus/i2c/devices/0-00"${port_map[$1]}"/eeprom_pg3"
         eeprom_pg3=$(echo $eeprom_pg3 | sed -e 's/ //g')
         echo $eeprom_pg3 > $eeprom_pg3_path
+		if [ ${port_init[$port]} -eq 0 ]; then
+			eeprom_pg4_path="/sys/bus/i2c/devices/0-00"${port_map[$1]}"/eeprom_pg4"
+			eeprom_pg4=$(echo $eeprom_pg4 | sed -e 's/ //g')
+			echo $eeprom_pg4 > $eeprom_pg4_path
+		fi
         eeprom_pg11_path="/sys/bus/i2c/devices/0-00"${port_map[$1]}"/eeprom_pg11"
         eeprom_pg11=$(echo $eeprom_pg11 | sed -e 's/ //g')
         echo $eeprom_pg11 > $eeprom_pg11_path
+		if [ ${port_init[$port]} -eq 0 ]; then
+			eeprom_pg12_path="/sys/bus/i2c/devices/0-00"${port_map[$1]}"/eeprom_pg12"
+			eeprom_pg12=$(echo $eeprom_pg12 | sed -e 's/ //g')
+			echo $eeprom_pg12 > $eeprom_pg12_path
+		fi
     else
         printf "\nPort %d EEPROM:" $1
         printf "\nLow--------------------------------------------\n"
@@ -319,6 +453,20 @@ bmc_qsfp_eeprom_read()
             fi
         done
         printf "\n-----------------------------------------------\n"
+		if [ ${port_init[$port]} -eq 0 ]; then
+			printf "Page4------------------------------------------\n"
+			for i in $(seq 1 128);
+			do
+				printf "%s " ${eeprom_pg4:0:2}
+				eeprom_pg3=$(echo $eeprom_pg4 | sed 's/^..//')
+
+				val=`expr $i % 16`
+				if [ $val -eq 0 ];then
+					printf "\n"
+				fi
+			done
+			printf "\n-----------------------------------------------\n"
+		fi
         printf "Page11-----------------------------------------\n"
         for i in $(seq 1 128);
         do
@@ -331,8 +479,21 @@ bmc_qsfp_eeprom_read()
             fi
         done
         printf "\n-----------------------------------------------\n"
+        printf "Page12-----------------------------------------\n"
+        for i in $(seq 1 128);
+        do
+            printf "%s " ${eeprom_pg12:0:2}
+            eeprom_pg12=$(echo $eeprom_pg12 | sed 's/^..//')
+
+            val=`expr $i % 16`
+            if [ $val -eq 0 ];then
+                printf "\n"
+            fi
+        done
+        printf "\n-----------------------------------------------\n"
     fi
 
+    port_init[$port]=1
     bmc_write $i2cmux_dev 0x00 0x0
     return 0
 }
@@ -352,6 +513,18 @@ bmc_qsfp_eeprom_clear()
     echo "" > $eeprom_pg3_path
     eeprom_pg11_path="/sys/bus/i2c/devices/0-00"${port_map[$1]}"/eeprom_pg11"
     echo "" > $eeprom_pg11_path
+    eeprom_pg4_path="/sys/bus/i2c/devices/0-00"${port_map[$1]}"/eeprom_pg4"
+    echo "" > $eeprom_pg4_path
+    eeprom_pg12_path="/sys/bus/i2c/devices/0-00"${port_map[$1]}"/eeprom_pg12"
+    echo "" > $eeprom_pg12_path
+    pwr_path="/sys/bus/i2c/devices/0-00"${port_map[$1]}"/power_mode"
+    echo 0 > $pwr_path
+    grid_path="/sys/bus/i2c/devices/0-00"${port_map[$1]}"/grid"
+    echo 0 > $grid_path
+    freq_path="/sys/bus/i2c/devices/0-00"${port_map[$1]}"/freq"
+    echo 0 > $freq_path
+	outp_path="/sys/bus/i2c/devices/0-00"${port_map[$1]}"/output_power"
+    echo 0 > $outp_path
 }
 
 QSFP_monitor()
@@ -385,6 +558,11 @@ QSFP_monitor()
                     fi
                 else
                     echo 0 > $cpld_path"module_present_"$i
+					port_init[$((i - 1))]=0
+					port_pre_mode[$((i - 1))]=0
+					port_pre_freq[$((i - 1))]=0
+					port_pre_outp[$((i - 1))]=0
+					port_pre_grid[$((i - 1))]=0
                     bmc_qsfp_eeprom_clear $i
                 fi
             done
diff --git a/platform/innovium/sonic-platform-modules-wistron/sw-to3200k/utils/wistron_sw_to3200k_util.py b/platform/innovium/sonic-platform-modules-wistron/sw-to3200k/utils/wistron_sw_to3200k_util.py
index 46121e6e7..c7b65e16e 100644
--- a/platform/innovium/sonic-platform-modules-wistron/sw-to3200k/utils/wistron_sw_to3200k_util.py
+++ b/platform/innovium/sonic-platform-modules-wistron/sw-to3200k/utils/wistron_sw_to3200k_util.py
@@ -229,6 +229,18 @@ def device_install():
             print(output)
             if FORCE == 0:
                 return status
+
+    status, output = log_os_system("cp /usr/share/sonic/device/x86_64-wistron_sw_to3200k-r0/smartd.conf /etc/;systemctl restart smartd.service", 1)
+    if status:
+        print(output)
+        if FORCE == 0:
+            return status
+
+    status, output = log_os_system("cp /usr/share/sonic/device/x86_64-wistron_sw_to3200k-r0/watchdog-control.service /usr/lib/systemd/system/", 1)
+    if status:
+        print(output)
+        if FORCE == 0:
+            return status
     return
 
 def device_uninstall():
@@ -284,12 +296,6 @@ def do_install():
     else:
         print(PROJECT_NAME.upper()+" devices detected....")
 
-    status, output = log_os_system(
-        "/bin/sh /usr/local/bin/platform_api_mgnt.sh init", 1)
-    if status:
-            print(output)
-            if FORCE == 0:
-                return status
     return
 
 def do_uninstall():
diff --git a/src/sonic-frr/frr b/src/sonic-frr/frr
index 79188bf71..3539968c3 160000
--- a/src/sonic-frr/frr
+++ b/src/sonic-frr/frr
@@ -1 +1 @@
-Subproject commit 79188bf710e92acf42fb5b9b0a2e9593a5ee9b05
+Subproject commit 3539968c38ed8d46b9705014b5492b1a610888d5
diff --git a/src/sonic-utilities b/src/sonic-utilities
index 8cfc8347d..624521366 160000
--- a/src/sonic-utilities
+++ b/src/sonic-utilities
@@ -1 +1 @@
-Subproject commit 8cfc8347d1c6400bb3cac6a010bef515f305f304
+Subproject commit 62452136673eb5e6909413b450845e00bd787161
-- 
2.25.1

