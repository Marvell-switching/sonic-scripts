diff --git a/files/initramfs-tools/modules b/files/initramfs-tools/modules
index 349bf3761..0fa55292a 100644
--- a/files/initramfs-tools/modules
+++ b/files/initramfs-tools/modules
@@ -5,3 +5,4 @@ nls_ascii
 nls_cp437
 nls_utf8
 nvme
+i2c-dev
diff --git a/files/initramfs-tools/modules.arm b/files/initramfs-tools/modules.arm
index 074105195..1916c6c5f 100644
--- a/files/initramfs-tools/modules.arm
+++ b/files/initramfs-tools/modules.arm
@@ -12,3 +12,4 @@ ofpart
 mtdswap
 mtd_blkdevs
 adt7475
+i2c-dev
diff --git a/installer/default_platform.conf b/installer/default_platform.conf
index ddf59baff..888cb8adf 100755
--- a/installer/default_platform.conf
+++ b/installer/default_platform.conf
@@ -435,17 +435,25 @@ bootloader_menu_config()
         mv $onie_initrd_tmp/tmp/onie-support*.tar.bz2 $demo_mnt/$image_dir/
 
         if [ "$firmware" = "uefi" ] ; then
-            secure_boot_state=$(mokutil --sb-state)
-            echo secure_boot_state=$secure_boot_state
-            if [ "$secure_boot_state" = "SecureBoot enabled" ]; then
-                echo "UEFI Secure Boot is enabled"
-                demo_install_uefi_shim "$demo_mnt" "$blk_dev"
+            reg_sb_guid=$(efivar -l | grep "SecureBoot")
+            secure_boot_state=""
+            if echo "$reg_sb_guid" | grep -q "SecureBoot";then
+                secure_boot_state=$(efivar -d --name $reg_sb_guid)
             else
-                echo "UEFI Secure Boot is disabled"
-                demo_install_uefi_grub "$demo_mnt" "$blk_dev"
+                echo "Current UEFI do not support Secure Boot feature"
+                secure_boot_state="0"
             fi
+		    echo secure_boot_state=$secure_boot_state
+		    if [ "$secure_boot_state" -eq 1 ]; then
+			    echo "UEFI Secure Boot is enabled - Installing shim bootloader"
+			    demo_install_uefi_shim "$demo_mnt" "$blk_dev"
+		    else
+			    echo "UEFI Secure Boot is disabled"
+			    echo "UEFI Secure Boot is disabled - Installing regular grub bootloader"
+			    demo_install_uefi_grub "$demo_mnt" "$blk_dev"
+		    fi
         else
-        demo_install_grub "$demo_mnt" "$blk_dev"
+            demo_install_grub "$demo_mnt" "$blk_dev"
         fi
     fi
 
diff --git a/build_debian.sh b/build_debian.sh
index 4eae97dbe..133a02f95 100755
--- a/build_debian.sh
+++ b/build_debian.sh
@@ -531,6 +531,7 @@ sudo LANG=C DEBIAN_FRONTEND=noninteractive chroot $FILESYSTEM_ROOT apt-get purge
 sudo https_proxy=$https_proxy LANG=C chroot $FILESYSTEM_ROOT pip3 install 'setuptools==49.6.00'
 sudo https_proxy=$https_proxy LANG=C chroot $FILESYSTEM_ROOT pip3 install 'wheel==0.35.1'
 
+sudo https_proxy=$https_proxy LANG=C chroot $FILESYSTEM_ROOT pip3 install 'requests==2.29.0'
 # docker Python API package is needed by Ansible docker module as well as some SONiC applications
 sudo https_proxy=$https_proxy LANG=C chroot $FILESYSTEM_ROOT pip3 install 'docker==5.0.3'
 
diff --git a/installer/default_platform.conf b/installer/default_platform.conf
index ddf59baff..f8cdd3c25 100755
--- a/installer/default_platform.conf
+++ b/installer/default_platform.conf
@@ -75,7 +75,8 @@ create_partition()
             exit 1
         fi
     fi
-
+sync
+echo 3 > /proc/sys/vm/drop_caches
 }
 
 mount_partition()
@@ -192,6 +193,8 @@ create_demo_gpt_partition()
     ##   probably because it/they are in use.  As a result, the old partition(s) will remain in use.  You should reboot now
     ##   before making further changes.
     partprobe || true
+sync
+echo 3 > /proc/sys/vm/drop_caches
 }
 
 create_demo_msdos_partition()
@@ -254,6 +257,8 @@ create_demo_uefi_partition()
 # Install legacy BIOS GRUB for DEMO OS
 demo_install_grub()
 {
+sync
+echo 3 > /proc/sys/vm/drop_caches
     local demo_mnt="$1"
     local blk_dev="$2"
 
@@ -589,6 +594,9 @@ menuentry '$demo_grub_entry' {
 }
 EOF
 
+sync
+echo 3 > /proc/sys/vm/drop_caches
+
     if [ "$install_env" = "onie" ]; then
         # Add menu entries for ONIE -- use the grub fragment provided by the
         # ONIE distribution.
@@ -622,5 +630,11 @@ EOF
     cd /
 
     echo "Installed SONiC base image $demo_volume_label successfully"
+sync
+echo 3 > /proc/sys/vm/drop_caches
+echo 120 > /proc/sys/kernel/hung_task_timeout_secs
+
+
+
 
 }
diff --git a/installer/install.sh b/installer/install.sh
index 51b5a75eb..3d5b62ea0 100755
--- a/installer/install.sh
+++ b/installer/install.sh
@@ -45,6 +45,11 @@ read_conf_file() {
 
 set -e
 
+
+echo 0 > /proc/sys/kernel/hung_task_timeout_secs
+sync
+echo 3 > /proc/sys/vm/drop_caches
+
 if [ -d "/etc/sonic" ]; then
     echo "Installing SONiC in SONiC"
     install_env="sonic"
@@ -164,6 +169,8 @@ if [ "$install_env" = "onie" ]; then
     # Create/format the flash
     create_partition
     mount_partition
+sync
+echo 3 > /proc/sys/vm/drop_caches
 elif [ "$install_env" = "sonic" ]; then
     demo_mnt="/host"
     # Get current SONiC image (grub/aboot/uboot)
@@ -185,6 +192,8 @@ elif [ "$install_env" = "sonic" ]; then
             rm -rf $f
         fi
     done
+sync
+echo 3 > /proc/sys/vm/drop_caches
 else
     demo_mnt="build_raw_image_mnt"
     demo_dev=$cur_wd/"%%OUTPUT_RAW_IMAGE%%"
@@ -196,6 +205,9 @@ else
     mount -t auto -o loop $demo_dev $demo_mnt
 fi
 
+sync
+echo 3 > /proc/sys/vm/drop_caches
+
 echo "Installing SONiC to $demo_mnt/$image_dir"
 
 # Create target directory or clean it up if exists
@@ -216,6 +228,9 @@ if [ x"$docker_inram" = x"on" ]; then
 else
     unzip -o $ONIE_INSTALLER_PAYLOAD -x "$FILESYSTEM_DOCKERFS" "platform.tar.gz" -d $demo_mnt/$image_dir
 
+sync
+echo 3 > /proc/sys/vm/drop_caches
+
     if [ "$install_env" = "onie" ]; then
         TAR_EXTRA_OPTION="--numeric-owner"
     else
@@ -223,6 +238,10 @@ else
     fi
     mkdir -p $demo_mnt/$image_dir/$DOCKERFS_DIR
     unzip -op $ONIE_INSTALLER_PAYLOAD "$FILESYSTEM_DOCKERFS" | tar xz $TAR_EXTRA_OPTION -f - -C $demo_mnt/$image_dir/$DOCKERFS_DIR
+
+sync
+echo 3 > /proc/sys/vm/drop_caches
+
 fi
 
 mkdir -p $demo_mnt/$image_dir/platform
@@ -238,6 +257,10 @@ if [ "$install_env" = "onie" ]; then
     else
         cp /etc/machine.conf $demo_mnt
     fi
+
+sync
+echo 3 > /proc/sys/vm/drop_caches
+
 fi
 
 echo "ONIE_IMAGE_PART_SIZE=$demo_part_size"
